// // // // // // // // // // // // // // // // // // // // // let arr  = [1,2,3,4,5]
// // // // // // // // // // // // // // // // // // // // // let target = 6;
// // // // // // // // // // // // // // // // // // // // // for (let i = 0; i < arr.length; i++) {
// // // // // // // // // // // // // // // // // // // // //     for (let j = 1; j < arr.length; j++) {
// // // // // // // // // // // // // // // // // // // // //         if(arr[i]+arr[j]==target){
// // // // // // // // // // // // // // // // // // // // //             console.log(i,j)
// // // // // // // // // // // // // // // // // // // // //         }

// // // // // // // // // // // // // // // // // // // // //     }

// // // // // // // // // // // // // // // // // // // // // }

// // // // // // // // // // // // // // // // // // // // var twoSum = function (nums, target) {
// // // // // // // // // // // // // // // // // // // //     for (let i = 0; i <= nums.length; i++) {
// // // // // // // // // // // // // // // // // // // //         for (let j = 1; j <= nums.length; j++) {
// // // // // // // // // // // // // // // // // // // //             if (nums[i] + nums[j] == target) {
// // // // // // // // // // // // // // // // // // // //                 // return[i,j]
// // // // // // // // // // // // // // // // // // // //                 console.log(i,j)
// // // // // // // // // // // // // // // // // // // //             }

// // // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // // twoSum([2,5,5,11],10)







// // // // // // // // // // // // // // // // // // // //PLUS ONE 


// // // // // // // // // // // // // // // // // // // // let a = [1,2,3]
// // // // // // // // // // // // // // // // // // // // for(let k = 0;k<=a.length;k++){
// // // // // // // // // // // // // // // // // // // //         if (a.length <= 1) {
// // // // // // // // // // // // // // // // // // // //             arr = parseInt(a.toString().charAt(a.length - 1)) + 1
// // // // // // // // // // // // // // // // // // // //             a = arr.toString().split('')
// // // // // // // // // // // // // // // // // // // //             console.log(a)
// // // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // // //         else {
// // // // // // // // // // // // // // // // // // // //             arr = parseInt(a.toString().charAt(a.toString().length - 1)) + 1
// // // // // // // // // // // // // // // // // // // //             a.splice(a.length - 1)
// // // // // // // // // // // // // // // // // // // //             a.push(arr)
// // // // // // // // // // // // // // // // // // // //            console.log(a)
// // // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // // // if (a.length <= 1)  {
// // // // // // // // // // // // // // // // // // // // //     arr = parseInt(a.toString().charAt(a.length - 1)) + 1
// // // // // // // // // // // // // // // // // // // // //     a = arr.toString().split('')
// // // // // // // // // // // // // // // // // // // // //     console.log(a)

// // // // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // // // else {
// // // // // // // // // // // // // // // // // // // // //     arr = parseInt(a.toString().charAt(a.toString().length - 1)) + 1
// // // // // // // // // // // // // // // // // // // // //     a.splice(a.length - 1)
// // // // // // // // // // // // // // // // // // // // //     a.push(arr)
// // // // // // // // // // // // // // // // // // // // //     console.log(a)
// // // // // // // // // // // // // // // // // // // // // }



// // // // // // // // // // // // // // // // // // // // Remove Repeated form sorted list

// // // // // // // // // // // // // // // // // // // //  



// // // // // // // // // // // // // // // // // // // // const n = (head) => {
// // // // // // // // // // // // // // // // // // // //     for (let i = 0; i < head.length; i++) {
// // // // // // // // // // // // // // // // // // // //         for (let j = i + 1; j < head.length; j++) {
// // // // // // // // // // // // // // // // // // // //             if (head[i] === head[j]) {
// // // // // // // // // // // // // // // // // // // //                 head.splice(j, 1);
// // // // // // // // // // // // // // // // // // // //                 j--; // Adjust the index after splice
// // // // // // // // // // // // // // // // // // // //             }
// // // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // //     console.log(head);
// // // // // // // // // // // // // // // // // // // // };
// // // // // // // // // // // // // // // // // // // // n([1,1,2,2,2,3,3])
// // // // // // // // // // // // // // // // // // // // raceacar



// // // // // // // // // // // // // // // // // // // // Valid Palidrome 

// // // // // // // // // // // // // // // // // // // // let a = "A man, a plan, a canal: Panama"

// // // // // // // // // // // // // // // // // // // // a = a.toString().replace(/[.,;:?!$\s]/g, '')
// // // // // // // // // // // // // // // // // // // // a = a.toLowerCase()
// // // // // // // // // // // // // // // // // // // // console.log(a)
// // // // // // // // // // // // // // // // // // // // let j = 1
// // // // // // // // // // // // // // // // // // // // for (let i = 0; i < a.length;i++) {
// // // // // // // // // // // // // // // // // // // //     if (a[i] == a[a.length - j]) {
// // // // // // // // // // // // // // // // // // // //         j++;
// // // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // //     else{
// // // // // // // // // // // // // // // // // // // //         console.log('false')
// // // // // // // // // // // // // // // // // // // //     }

// // // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // // console.log('true')



// // // // // // // // // // // // // // // // // // // // let a = 'A'
// // // // // // // // // // // // // // // // // // // // let b = 'Z'
// // // // // // // // // // // // // // // // // // // // for (a = 'A'; a <= 26; a++) {
// // // // // // // // // // // // // // // // // // // //     console.log(a)
// // // // // // // // // // // // // // // // // // // // }


// // // // // // // // // // // // // // // // // // // // single number find 

// // // // // // // // // // // // // // // // // // // // let a = [2,2,1]
// // // // // // // // // // // // // // // // // // // // let single;
// // // // // // // // // // // // // // // // // // // // let double = 0;
// // // // // // // // // // // // // // // // // // // // for (var i = 0; i < a.length; i++) {
// // // // // // // // // // // // // // // // // // // //     for (var j = 1; j < a.length; j++) {
// // // // // // // // // // // // // // // // // // // //         if(a[i]==a[j] && i!=j){
// // // // // // // // // // // // // // // // // // // //             double++;
// // // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // // //         else if(a[i]!=a[j] && i!=j){
// // // // // // // // // // // // // // // // // // // //             single = a[i]
// // // // // // // // // // // // // // // // // // // //             i++
// // // // // // // // // // // // // // // // // // // //         }

// // // // // // // // // // // // // // // // // // // //         console.log(single)
// // // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // // }


// // // // // // // // // // // // // // // // // // // // let nums1 = [1,2,2,1]
// // // // // // // // // // // // // // // // // // // // let nums2 = [2,2]
// // // // // // // // // // // // // // // // // // // // let array = []
// // // // // // // // // // // // // // // // // // // // for (let i = 0; i < nums1.length; i++) {
// // // // // // // // // // // // // // // // // // // //     for (let j = 0; j < nums2.length; j++) {
// // // // // // // // // // // // // // // // // // // //         if(nums1[i]==nums2[j]){
// // // // // // // // // // // // // // // // // // // //             let p = nums1.splice(i,1)

// // // // // // // // // // // // // // // // // // // //             array.push(p)

// // // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // // //     }

// // // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // // console.log(array)


// // // // // // // // // // // // // // // // // // // // // Valid Anagram(242)

// // // // // // // // // // // // // // // // // // // // //you can also sort
// // // // // // // // // // // // // // // // // // // // let a = "a"
// // // // // // // // // // // // // // // // // // // // let b = "ab"
// // // // // // // // // // // // // // // // // // // // a = a.split('').sort().join('')
// // // // // // // // // // // // // // // // // // // // b = b.split('').sort().join('')
// // // // // // // // // // // // // // // // // // // // console.log(a)
// // // // // // // // // // // // // // // // // // // // console.log(b)
// // // // // // // // // // // // // // // // // // // // let element = 0
// // // // // // // // // // // // // // // // // // // // let j = 0;
// // // // // // // // // // // // // // // // // // // // if(a.length != b.length){
// // // // // // // // // // // // // // // // // // // //     console.log('false')
// // // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // // for (let i = 0; i < a.length;i++)  {
// // // // // // // // // // // // // // // // // // // //     if(a[i] == a[j]){
// // // // // // // // // // // // // // // // // // // //         j++;
// // // // // // // // // // // // // // // // // // // //     } 
// // // // // // // // // // // // // // // // // // // //     else{
// // // // // // // // // // // // // // // // // // // //         console.log('false')
// // // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // // console.log('true')


// // // // // // // // // // // // // // // // // // // // Majority Elements 
// // // // // // // // // // // // // // // // // // // // let nums = [6,6,6,7,7]
// // // // // // // // // // // // // // // // // // // // let element = []
// // // // // // // // // // // // // // // // // // // // nums = nums.sort()
// // // // // // // // // // // // // // // // // // // // console.log(nums);
// // // // // // // // // // // // // // // // // // // // var i = 0
// // // // // // // // // // // // // // // // // // // // if (nums.length == 1) {
// // // // // // // // // // // // // // // // // // // //     console.log(nums[i])
// // // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // // else {
// // // // // // // // // // // // // // // // // // // //     for (var i = 0; i < nums.length; i++) {
// // // // // // // // // // // // // // // // // // // //         for (var j = 1; j < nums.length; j++) {
// // // // // // // // // // // // // // // // // // // //             if (nums[i] == nums[j] && i!=j) {
// // // // // // // // // // // // // // // // // // // //                 element.push(nums[i])
// // // // // // // // // // // // // // // // // // // //             }
// // // // // // // // // // // // // // // // // // // //         }

// // // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // //     console.log(element)
// // // // // // // // // // // // // // // // // // // // }



// // // // // // // // // // // // // // // // // // // // let a = [3,30,34,5,9]
// // // // // // // // // // // // // // // // // // // // a = a.toString().split('').reverse()
// // // // // // // // // // // // // // // // // // // // a = a.toString().replace(/[,.]/g, '')

// // // // // // // // // // // // // // // // // // // // return a


// // // // // // // // // // // // // // // // // // // // let x = 10

// // // // // // // // // // // // // // // // // // // // p  = a.toString().split('').reverse()
// // // // // // // // // // // // // // // // // // // // p = p.toString().split(',').join('')
// // // // // // // // // // // // // // // // // // // // console.log(p)

// // // // // // // // // // // // // // // // // // // // if(p == a){
// // // // // // // // // // // // // // // // // // // //     console.log('true')
// // // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // // else{
// // // // // // // // // // // // // // // // // // // //     console.log('false');

// // // // // // // // // // // // // // // // // // // // }

// // // // // // // // // // // // // // // // // // // // console.log(x = x.toString().split('').reverse().join(''))



// // // // // // // // // // // // // // // // // // // // let nums = [1,3,2]
// // // // // // // // // // // // // // // // // // // // let element = 0;
// // // // // // // // // // // // // // // // // // // // for (let i = 0; i < nums.length-1 ; i++) {

// // // // // // // // // // // // // // // // // // // //         if(nums[i]>=nums[i+1]) {
// // // // // // // // // // // // // // // // // // // //             element++;
// // // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // // //         else if(nums[i]<=nums[i+1]){
// // // // // // // // // // // // // // // // // // // //             element++;
// // // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // // //         else{
// // // // // // // // // // // // // // // // // // // //             console.log('false')
// // // // // // // // // // // // // // // // // // // //         }

// // // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // // console.log('true')
// // // // // // // // // // // // // // // // // // // // for (let j = 0; j < nums.length-2; j++) {
// // // // // // // // // // // // // // // // // // // //     if (nums[j] >= nums[j + 1]) {
// // // // // // // // // // // // // // // // // // // //         element++;
// // // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // //     else{
// // // // // // // // // // // // // // // // // // // //         console.log('false');
// // // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // // console.log('true');



// // // // // // // // // // // // // // // // // // // // let text = "leet code";
// // // // // // // // // // // // // // // // // // // // let bl = "lt"
// // // // // // // // // // // // // // // // // // // // let element = 0;
// // // // // // // // // // // // // // // // // // // // for (let i = 0; i < bl.length; i++) {
// // // // // // // // // // // // // // // // // // // //     for (let j = 0; j < text.length; j++) {
// // // // // // // // // // // // // // // // // // // //         if (text[j] == bl[i]) {
// // // // // // // // // // // // // // // // // // // //             text = text.split(' ')
// // // // // // // // // // // // // // // // // // // //             console.log(text)
// // // // // // // // // // // // // // // // // // // //         }

// // // // // // // // // // // // // // // // // // // //     


// // // // // // // // // // // // // // // // // // // // let matrix = [[1,2,3],[4,5,6],[7,8,9]]
// // // // // // // // // // // // // // // // // // // // let array = []
// // // // // // // // // // // // // // // // // // // // console.log(matrix[1][0])
// // // // // // // // // // // // // // // // // // // // p = matrix.length*3
// // // // // // // // // // // // // // // // // // // // for (let i = 0; i < p;i++) {

// // // // // // // // // // // // // // // // // // // //     for (let j = 0; j <= p; j++) {
// // // // // // // // // // // // // // // // // // // //         console.log(matrix[i][j])
// // // // // // // // // // // // // // // // // // // //     }

// // // // // // // // // // // // // // // // // // // // }


// // // // // // // // // // // // // // // // // // // // let s = ["h","e","l","l","o"]
// // // // // // // // // // // // // // // // // // // // let p = s.reverse()
// // // // // // // // // // // // // // // // // // // // console.log(s)
// // // // // // // // // // // // // // // // // // // // // let newarray = []
// // // // // // // // // // // // // // // // // // // // // let l  = s.length-1
// // // // // // // // // // // // // // // // // // // // // for (let i = l; i >=0; i--) {
// // // // // // // // // // // // // // // // // // // // //     for (let j = 0; j <= l; j++) {
// // // // // // // // // // // // // // // // // // // // //         s[i] == newarray[j]
// // // // // // // // // // // // // // // // // // // // //         console.log(newarray)
// // // // // // // // // // // // // // // // // // // // //         i--;

// // // // // // // // // // // // // // // // // // // // //     }

// // // // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // // // return 


// // // // // // // // // // // // // // // // // // // //Reverse vowels in a string
// // // // // // // // // // // // // // // // // // // // let s = ['a','e','i','o','u','A','E','I','O','U']
// // // // // // // // // // // // // // // // // // // // let t = 'hello'
// // // // // // // // // // // // // // // // // // // // let arr = []
// // // // // // // // // // // // // // // // // // // // // console.log(s[1])
// // // // // // // // // // // // // // // // // // // // // console.log(t[1])
// // // // // // // // // // // // // // // // // // // // t = t.split('')
// // // // // // // // // // // // // // // // // // // // let j = 0,temp;
// // // // // // // // // // // // // // // // // // // // for (let i = 0; i < t.length; i++) {
// // // // // // // // // // // // // // // // // // // //     for (let j = 0; j < s.length; j++) {
// // // // // // // // // // // // // // // // // // // //         if(t[i] == s[j])

// // // // // // // // // // // // // // // // // // // //     }

// // // // // // // // // // // // // // // // // // // // }


// // // // // // // // // // // // // // // // // // // // let a = [2,0,2,1,1,0]
// // // // // // // // // // // // // // // // // // // // let red = 0,white = 1,blue = 2;

// // // // // // // // // // // // // // // // // // // // let element = 0;
// // // // // // // // // // // // // // // // // // // // let nums = [0,0,1,1,1,2,2,3,3,4]

// // // // // // // // // // // // // // // // // // // // for (let i = 0; i < nums.length; i++) {
// // // // // // // // // // // // // // // // // // // //     for (let j = 1; j < nums.length; j++) {
// // // // // // // // // // // // // // // // // // // //         if(nums[i] == nums[j]){
// // // // // // // // // // // // // // // // // // // //             nums = nums.splice(i)
// // // // // // // // // // // // // // // // // // // //             // nums[i] = nums[i+1]
// // // // // // // // // // // // // // // // // // // //             // console.log(nums)
// // // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // // //         if(nums[i] != nums[j]){
// // // // // // // // // // // // // // // // // // // //             element++;
// // // // // // // // // // // // // // // // // // // //         }

// // // // // // // // // // // // // // // // // // // //     }

// // // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // // console.log(nums) 


// // // // // // // // // // // // // // // // // // // let nums = [1, 2]
// // // // // // // // // // // // // // // // // // // let k = 3
// // // // // // // // // // // // // // // // // // // let numsl = nums.length - 1
// // // // // // // // // // // // // // // // // // // nums.reverse()
// // // // // // // // // // // // // // // // // // // k = k % nums.length

// // // // // // // // // // // // // // // // // // // //Part 1

// // // // // // // // // // // // // // // // // // // let l = 0;
// // // // // // // // // // // // // // // // // // // let r = k - 1;

// // // // // // // // // // // // // // // // // // // while(l < r) {
// // // // // // // // // // // // // // // // // // //     let temp = nums[l]
// // // // // // // // // // // // // // // // // // //     nums[l] = nums[r]
// // // // // // // // // // // // // // // // // // //     nums[r] = temp
// // // // // // // // // // // // // // // // // // //     l++;
// // // // // // // // // // // // // // // // // // //     r--;;
// // // // // // // // // // // // // // // // // // // }

// // // // // // // // // // // // // // // // // // // l = k;
// // // // // // // // // // // // // // // // // // // r = numsl;

// // // // // // // // // // // // // // // // // // // while (l < r) {
// // // // // // // // // // // // // // // // // // //     let temp = nums[l]
// // // // // // // // // // // // // // // // // // //     nums[l] = nums[r]
// // // // // // // // // // // // // // // // // // //     nums[r] = temp
// // // // // // // // // // // // // // // // // // //     l = l + 1;
// // // // // // // // // // // // // // // // // // //     r--;
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(nums)

// // // // // // // // // // // // // // // // // // // console.log(k)
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < 1; i++) {
// // // // // // // // // // // // // // // // // // //     let temp = nums[i]
// // // // // // // // // // // // // // // // // // //     nums[i] = nums[k+1]
// // // // // // // // // // // // // // // // // // //     nums[k+1] = temp
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(nums);

// // // // // // // // // // // // // // // // // // // let p = nums.length-1
// // // // // // // // // // // // // // // // // // // for (let j = k ; j < p; j++) {
// // // // // // // // // // // // // // // // // // //     let temp = nums[j]
// // // // // // // // // // // // // // // // // // //     nums[j]  = nums[p]
// // // // // // // // // // // // // // // // // // //     nums[p] = temp
// // // // // // // // // // // // // // // // // // //     p--;
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // // return nums
// // // // // // // // // // // // // // // // // // // console.log(nums)




// // // // // // // // // // // // // // // // // // // let nums = [1, 2, 3, 4, 5, 6, 7];
// // // // // // // // // // // // // // // // // // // let k = 3;
// // // // // // // // // // // // // // // // // // // let numsl = nums.length - 1;
// // // // // // // // // // // // // // // // // // // console.log(numsl); // numsl is 6

// // // // // // // // // // // // // // // // // // // nums.reverse(); // Reverse the array, nums is now [7, 6, 5, 4, 3, 2, 1]
// // // // // // // // // // // // // // // // // // // k = k % nums.length; // k is 3 (no change needed since k < nums.length)

// // // // // // // // // // // // // // // // // // // let l = 0;
// // // // // // // // // // // // // // // // // // // let r = k - 1;

// // // // // // // // // // // // // // // // // // // while (l < r) {
// // // // // // // // // // // // // // // // // // //     let temp = nums[l];
// // // // // // // // // // // // // // // // // // //     nums[l] = nums[r];
// // // // // // // // // // // // // // // // // // //     nums[r] = temp;
// // // // // // // // // // // // // // // // // // //     l++;
// // // // // // // // // // // // // // // // // // //     r--;
// // // // // // // // // // // // // // // // // // // }

// // // // // // // // // // // // // // // // // // // // After the first swap, nums is [5, 6, 7, 4, 3, 2, 1]

// // // // // // // // // // // // // // // // // // // l = k;
// // // // // // // // // // // // // // // // // // // r = numsl;

// // // // // // // // // // // // // // // // // // // while (l < r) {
// // // // // // // // // // // // // // // // // // //     let temp = nums[l];
// // // // // // // // // // // // // // // // // // //     nums[l] = nums[r];
// // // // // // // // // // // // // // // // // // //     nums[r] = temp;
// // // // // // // // // // // // // // // // // // //     l = l + 1;
// // // // // // // // // // // // // // // // // // //     r--;
// // // // // // // // // // // // // // // // // // // }

// // // // // // // // // // // // // // // // // // // // After the second swap, nums is [5, 6, 7, 1, 2, 3, 4]

// // // // // // // // // // // // // // // // // // // console.log(nums); // Output should be [5, 6, 7, 1, 2, 3, 4]





// // // // // // // // // // // // // // // // // // // let nums = [-1,3,5,6]
// // // // // // // // // // // // // // // // // // // let nums = [1,3,5,6]
// // // // // // // // // // // // // // // // // // // let target = 4
// // // // // // // // // // // // // // // // // // // let j;
// // // // // // // // // // // // // // // // // // // let l = nums.length-1
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < l; i++) {
// // // // // // // // // // // // // // // // // // //     if(nums[i] == target){
// // // // // // // // // // // // // // // // // // //         console.log(nums.indexOf(nums[i]))
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     j = l;
// // // // // // // // // // // // // // // // // // //     if(target>nums[j]){
// // // // // // // // // // // // // // // // // // //         p = nums.push(target)
// // // // // // // // // // // // // // // // // // //         console.log(nums.indexOf(nums[j+1]))
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else if(target<nums[j-l]){
// // // // // // // // // // // // // // // // // // //         console.log('0');
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     j--;
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // for (let j = l; j >= 0; j--) {
// // // // // // // // // // // // // // // // // // //     if(target>nums[j]){
// // // // // // // // // // // // // // // // // // //         p = nums.push(target)
// // // // // // // // // // // // // // // // // // //         console.log(nums.indexOf(nums[j+1]))
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else if(target<nums[j-l]){
// // // // // // // // // // // // // // // // // // //         return 0

// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     // if(target<nums[j]){
// // // // // // // // // // // // // // // // // // //     //     console.log('0')
// // // // // // // // // // // // // // // // // // //     // }
// // // // // // // // // // // // // // // // // // // }


// // // // // // // // // // // // // // // // // // // let s = 8
// // // // // // // // // // // // // // // // // // // let sq = (8*1)/2
// // // // // // // // // // // // // // // // // // // console.log(sq)



// // // // // // // // // // // // // // // // // // // let nums1 = [1,2,3,0,0,0]
// // // // // // // // // // // // // // // // // // // let nums2 = [2,5,6]
// // // // // // // // // // // // // // // // // // // let arr = []
// // // // // // // // // // // // // // // // // // // let l = nums1.length + nums2.length

// // // // // // // // // // // // // // // // // // // for (let j = 0; j < nums1.length; j++) {
// // // // // // // // // // // // // // // // // // //     if(nums1[j] > 0){
// // // // // // // // // // // // // // // // // // //         let p = arr.push(nums1[j])
// // // // // // // // // // // // // // // // // // //         p = arr
// // // // // // // // // // // // // // // // // // //     }

// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // nums1 = arr.concat(nums2).sort()
// // // // // // // // // // // // // // // // // // // console.log(nums1)



// // // // // // // // // // // // // // // // // // // let nums1 =    [-1,-1,0,0,0,0]
// // // // // // // // // // // // // // // // // // // let nums2 =    [-1,0]
// // // // // // // // // // // // // // // // // // // let p = nums1.length+nums2.length
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < nums1.length; i++) {
// // // // // // // // // // // // // // // // // // //     if (nums1[i] == 0 ) {
// // // // // // // // // // // // // // // // // // //        nums1.splice(i, 1)
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else{
// // // // // // // // // // // // // // // // // // //         break;
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // for (let j = 0; j < nums2.length; j++) {
// // // // // // // // // // // // // // // // // // //     if(nums2[j] == 0){
// // // // // // // // // // // // // // // // // // //         nums2.splice(j,1)
// // // // // // // // // // // // // // // // // // //         console.log(nums2)
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     nums1.push(nums2[j])
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(nums1.sort());



// // // // // // // // // // // // // // // // // // // let nums = [1,7,3,6,5,6]
// // // // // // // // // // // // // // // // // // // let sum = 0
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < nums.length; i++) {
// // // // // // // // // // // // // // // // // // //     sum = sum + nums[i]
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // let sum2 = 0
// // // // // // // // // // // // // // // // // // // let ls = 0
// // // // // // // // // // // // // // // // // // // for (let j = 0; j < nums.length; j++) {
// // // // // // // // // // // // // // // // // // //     if(ls == (sum - ls - nums[j])){
// // // // // // // // // // // // // // // // // // //         console.log(j)
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     console.log(ls)
// // // // // // // // // // // // // // // // // // //     ls = ls + nums[j]



// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log('-1')









// // // // // // // // // // // // // // // // // // // let candidates = [10,1,2,7,6,1,5]
// // // // // // // // // // // // // // // // // // // let target = 8
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < candidates.length; i++) {
// // // // // // // // // // // // // // // // // // //     let left = i+1
// // // // // // // // // // // // // // // // // // //     let right = candidates.length - 1
// // // // // // // // // // // // // // // // // // //     while(left<right){
// // // // // // // // // // // // // // // // // // //         let sum = candidates[i] + candidates[left] + candidates[right]
// // // // // // // // // // // // // // // // // // //         if(sum == target){
// // // // // // // // // // // // // // // // // // //             // console.log('true');

// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //         else{
// // // // // // // // // // // // // // // // // // //             // console.log('false');

// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //     }

// // // // // // // // // // // // // // // // // // // }



// // // // // // // // // // // // // // // // // // // let s = "ADOBECODEBANC"
// // // // // // // // // // // // // // // // // // // s = s.split('')
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < s.length; i++) {
// // // // // // // // // // // // // // // // // // //     for (let j = 1; j < s.length; j++) {
// // // // // // // // // // // // // // // // // // //         if(s[i] == s[j] && i!=j){
// // // // // // // // // // // // // // // // // // //            console.log(s.toString().slice(j,1))
// // // // // // // // // // // // // // // // // // //         }

// // // // // // // // // // // // // // // // // // //     }

// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // // console.log(a);

// // // // // // // // // // // // // // // // // // // s.match(`.{1,${r}}`,`g`);
// // // // // // // // // // // // // // // // // // // let s =  "mississippi"
// // // // // // // // // // // // // // // // // // // let v = "issip"
// // // // // // // // // // // // // // // // // // // let r = v.length
// // // // // // // // // // // // // // // // // // // let chunks = s.match(RegExp(`.{1,${r}}`,`g`))
// // // // // // // // // // // // // // // // // // // let result = chunks.join(',')
// // // // // // // // // // // // // // // // // // // console.log(result)

// // // // // // // // // // // // // // // // // // // if(result.match(v)){
// // // // // // // // // // // // // // // // // // //     console.log(s.indexOf(v))

// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // else{
// // // // // // // // // // // // // // // // // // //     console.log('false');
// // // // // // // // // // // // // // // // // // // }


// // // // // // // // // // // // // // // // // // // let nums = 38
// // // // // // // // // // // // // // // // // // // let l = nums.toString().length
// // // // // // // // // // // // // // // // // // // let sum = 0;
// // // // // // // // // // // // // // // // // // // let i = 0;

// // // // // // // // // // // // // // // // // // // do{

// // // // // // // // // // // // // // // // // // //     sum = sum + nums[i]
// // // // // // // // // // // // // // // // // // //     i++;
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // while(nums<10);
// // // // // // // // // // // // // // // // // // // console.log(sum)

// // // // // // // // // // // // // // // // // // // for (let i = 0; i < s.length; i++) {
// // // // // // // // // // // // // // // // // // //     for (let k = 0; k < v.length; k++) {
// // // // // // // // // // // // // // // // // // //         if(s[i] == v[k]){
// // // // // // // // // // // // // // // // // // //             element++;
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //     }

// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // if(element == n){
// // // // // // // // // // // // // // // // // // //     console.log('true')
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // else{
// // // // // // // // // // // // // // // // // // //     console.log('false')
// // // // // // // // // // // // // // // // // // // }



// // // // // // // // // // // // // // // // // // // let a = 2
// // // // // // // // // // // // // // // // // // // let b = 3
// // // // // // // // // // // // // // // // // // // // let sum = 0;
// // // // // // // // // // // // // // // // // // // let arr = [a, b];
// // // // // // // // // // // // // // // // // // // console.log( Number(arr.join('')));
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < b+1; i++) {

// // // // // // // // // // // // // // // // // // //     // Concatenate the array into a string and convert it to a number
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(sum);


// // // // // // // // // // // // // // // // // // // let numbers = [2, 7, 11, 15]
// // // // // // // // // // // // // // // // // // // let target = 9
// // // // // // // // // // // // // // // // // // // let r = numbers.length - 1
// // // // // // // // // // // // // // // // // // // let l = 0
// // // // // // // // // // // // // // // // // // // let arr = []
// // // // // // // // // // // // // // // // // // // do {
// // // // // // // // // // // // // // // // // // //     if (numbers[r] + numbers[l] > target) {
// // // // // // // // // // // // // // // // // // //         r = r - 1
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else if (numbers[r] + numbers[l] < target) {
// // // // // // // // // // // // // // // // // // //         l = l + 1
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else {
// // // // // // // // // // // // // // // // // // //         l++;
// // // // // // // // // // // // // // // // // // //         r++;
// // // // // // // // // // // // // // // // // // //         arr.push(l, r)
// // // // // // // // // // // // // // // // // // //         return arr
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // while (l < r)


// // // // // // // // // // // // // // // // // // // let nums = [-1, 0, 1, 2, -1, -4]
// // // // // // // // // // // // // // // // // // // let arr = []
// // // // // // // // // // // // // // // // // // // nums.sort()
// // // // // // // // // // // // // // // // // // // let l = 0
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < nums.length; i++) {
// // // // // // // // // // // // // // // // // // //     if (i > 0 && nums[i - 1] == nums[i]) {
// // // // // // // // // // // // // // // // // // //         continue

// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     l = l + i
// // // // // // // // // // // // // // // // // // //     r = nums.length - 1
// // // // // // // // // // // // // // // // // // //     while (l < r) {
// // // // // // // // // // // // // // // // // // //         ts = nums[i] + nums[l] + nums[r]
// // // // // // // // // // // // // // // // // // //         if (ts > 0) {
// // // // // // // // // // // // // // // // // // //             r = r - 1
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //         else if (ts < 0) {
// // // // // // // // // // // // // // // // // // //             l = l - 1
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //         else {
// // // // // // // // // // // // // // // // // // //             arr.push([nums[i], nums[l], nums[r]])
// // // // // // // // // // // // // // // // // // //             l = l+1
// // // // // // // // // // // // // // // // // // //             while(nums[l == nums[l-1] && l<r]){
// // // // // // // // // // // // // // // // // // //                 l = l+1
// // // // // // // // // // // // // // // // // // //             }
// // // // // // // // // // // // // // // // // // //         }

// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(arr)






// // // // // // // // // // // // // // // // // // // console.log(nums)
// // // // // // // // // // // // // // // // // // // let k = 1;
// // // // // // // // // // // // // // // // // // // for (let i = 1; i < array.length; i++) {
// // // // // // // // // // // // // // // // // // //     if(nums[i] != nums[i-1]){
// // // // // // // // // // // // // // // // // // //         nums[k]  = nums[i]
// // // // // // // // // // // // // // // // // // //         k++;
// // // // // // // // // // // // // // // // // // //     }

// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // return k


// // // // // // // // // // // // // // // // // // // let nums1 = [1,2,2,1] 

// // // // // // // // // // // // // // // // // // // let nums2 = [2,2]
// // // // // // // // // // // // // // // // // // // let arr = []
// // // // // // // // // // // // // // // // // // // nums1.sort()
// // // // // // // // // // // // // // // // // // // nums2.sort()
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < nums1.length; i++) {    
// // // // // // // // // // // // // // // // // // //     for (let j = 0; j < nums2.length; j++) {
// // // // // // // // // // // // // // // // // // //         if(nums1[i] == nums2[j])
// // // // // // // // // // // // // // // // // // //             arr.push(nums1[i])
// // // // // // // // // // // // // // // // // // //     }

// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // let p = arr.filter((value,index)=>{
// // // // // // // // // // // // // // // // // // //     return arr.indexOf(value) == index
// // // // // // // // // // // // // // // // // // // })
// // // // // // // // // // // // // // // // // // // console.log(p)

// // // // // // // // // // // // // // // // // // // let nums = [4, 1, 2, 1, 2]
// // // // // // // // // // // // // // // // // // // let element = 0;
// // // // // // // // // // // // // // // // // // // let arr = []
// // // // // // // // // // // // // // // // // // // nums.sort()
// // // // // // // // // // // // // // // // // // // console.log(nums)
// // // // // // // // // // // // // // // // // // // for (var i = 0; i < nums.length; i++) {
// // // // // // // // // // // // // // // // // // //     for (let j = 1; j < nums.length; j++) {
// // // // // // // // // // // // // // // // // // //         if (nums[i] == nums[j] && i!=j) {
// // // // // // // // // // // // // // // // // // //             i = i +1
// // // // // // // // // // // // // // // // // // //             j = j +1
// // // // // // // // // // // // // // // // // // //         }

// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     console.log(nums[i]);
// // // // // // // // // // // // // // // // // // // }

// // // // // // // // // // // // // // // // // // // let nums = [4, 1, 2, 1, 2]
// // // // // // // // // // // // // // // // // // // let unique = 0
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < nums.length; i++) {
// // // // // // // // // // // // // // // // // // //     unique = unique ^ nums[i]
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(unique)


// // // // // // // // // // // // // // // // // // // let nums = [0,1,2,2,3,0,4,2]
// // // // // // // // // // // // // // // // // // // let val = 2

// // // // // // // // // // // // // // // // // // // nums.sort()
// // // // // // // // // // // // // // // // // // // console.log(nums)
// // // // // // // // // // // // // // // // // // // let arr = []
// // // // // // // // // // // // // // // // // // // let k= 0
// // // // // // // // // // // // // // // // // // // for(let i = 0;i<nums.length;i++){
// // // // // // // // // // // // // // // // // // //     if(nums[i]!=val){
// // // // // // // // // // // // // // // // // // //         k++
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(k)



// // // // // // // // // // // // // // // // // // // let strs = ["eat", "tea", "tan", "ate", "nat", "bat"]
// // // // // // // // // // // // // // // // // // // let arr = []
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < strs.length; i++) {
// // // // // // // // // // // // // // // // // // //     let p = strs[i].split('').sort().join('')
// // // // // // // // // // // // // // // // // // //     arr.push(p)
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(arr.sort())

// // // // // // // // // // // // // // // // // // // let repeatedarray = new Map()
// // // // // // // // // // // // // // // // // // // let arrays = []
// // // // // // // // // // // // // // // // // // // arr.forEach((arr)=>{
// // // // // // // // // // // // // // // // // // //     if(repeatedarray.has(arr)){
// // // // // // // // // // // // // // // // // // //         repeatedarray.get(arr).push(arr)
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else{
// // // // // // // // // // // // // // // // // // //         repeatedarray.set(arr,[arr])
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // })
// // // // // // // // // // // // // // // // // // // console.log(repeatedarray)
// // // // // // // // // // // // // // // // // // // repeatedarray.forEach((value, key) => {
// // // // // // // // // // // // // // // // // // //     if (value.length > 1) {
// // // // // // // // // // // // // // // // // // //         arrays.push(value);
// // // // // // // // // // // // // // // // // // //     } else {
// // // // // // // // // // // // // // // // // // //         arrays.push([key]);
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // });
// // // // // // // // // // // // // // // // // // // console.log('Arrays:', arrays);


// // // // // // // // // // // // // // // // // // // let strs = ["eat", "tea", "tan", "ate", "nat", "bat"]
// // // // // // // // // // // // // // // // // // // let repeated = new Map()
// // // // // // // // // // // // // // // // // // // let array = []
// // // // // // // // // // // // // // // // // // // strs.forEach((value)=>{
// // // // // // // // // // // // // // // // // // //     sortedValue = value.split('').sort().join('')
// // // // // // // // // // // // // // // // // // //     if(repeated.has(sortedValue)){
// // // // // // // // // // // // // // // // // // //         repeated.get(sortedValue).push(value)
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else{
// // // // // // // // // // // // // // // // // // //         repeated.set(sortedValue,[value])
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // })

// // // // // // // // // // // // // // // // // // // let result = Array.from(repeated.values())
// // // // // // // // // // // // // // // // // // // console.log(result);



// // // // // // // // // // // // // // // // // // // let s = 'leetcode'
// // // // // // // // // // // // // // // // // // // let vowels = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U']
// // // // // // // // // // // // // // // // // // // let l = 0
// // // // // // // // // // // // // // // // // // // let r = s.length - 1
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < vowels.length; i++) {
// // // // // // // // // // // // // // // // // // //     for (let k = 0; k < vowels.length; k++) {
// // // // // // // // // // // // // // // // // // //         if(s[l] == vowels[k] && s[r]==vowels[k]){
// // // // // // // // // // // // // // // // // // //             let temp = s[l]
// // // // // // // // // // // // // // // // // // //             s[l] = s[r]
// // // // // // // // // // // // // // // // // // //             temp = s[r]
// // // // // // // // // // // // // // // // // // //             l++
// // // // // // // // // // // // // // // // // // //             r--
// // // // // // // // // // // // // // // // // // //             console.log(s)
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //         else if(s[l] != vowels[k]){
// // // // // // // // // // // // // // // // // // //             l++;
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //         else if(s[r] != vowels[k]){
// // // // // // // // // // // // // // // // // // //             r++;
// // // // // // // // // // // // // // // // // // //         }

// // // // // // // // // // // // // // // // // // //     }

// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(s)




// // // // // // // // // // // // // // // // // // // let nums = [1,4]
// // // // // // // // // // // // // // // // // // // let target = 4
// // // // // // // // // // // // // // // // // // // let star = 0
// // // // // // // // // // // // // // // // // // // let end = nums.length - 1

// // // // // // // // // // // // // // // // // // // for (let i = 0; i < nums.length; i++) {
// // // // // // // // // // // // // // // // // // //     if(nums[star] != target){
// // // // // // // // // // // // // // // // // // //         star++
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     if(nums[end] !=target){
// // // // // // // // // // // // // // // // // // //         end--
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // if(end == -1){
// // // // // // // // // // // // // // // // // // //     console.log([-1,-1])
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log([star,end])


// // // // // // // // // // // // // // // // // // // let nums = [30000, 500, 100, 30000, 100, 30000, 100]
// // // // // // // // // // // // // // // // // // // let map = new Map();
// // // // // // // // // // // // // // // // // // // // Count occurrences of each number
// // // // // // // // // // // // // // // // // // // for (let num of nums) {
// // // // // // // // // // // // // // // // // // //     if (map.has(num)) {
// // // // // // // // // // // // // // // // // // //         map.set(num, map.get(num) + 1);
// // // // // // // // // // // // // // // // // // //     } else {
// // // // // // // // // // // // // // // // // // //         map.set(num, 1);
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }

// // // // // // // // // // // // // // // // // // // // Find the number that appears only once
// // // // // // // // // // // // // // // // // // // for (let [key, value] of map) {
// // // // // // // // // // // // // // // // // // //     if (value === 1) {
// // // // // // // // // // // // // // // // // // //         // console.log( key);
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }




// // // // // // // // // // // // // // // // // // // let list1 = [1,2,3]
// // // // // // // // // // // // // // // // // // // let list2 = [4,5,6]
// // // // // // // // // // // // // // // // // // // let l1 = list1
// // // // // // // // // // // // // // // // // // // let l2 = list2

// // // // // // // // // // // // // // // // // // // let dummy = new ListNode();
// // // // // // // // // // // // // // // // // // // let tail = dummy;

// // // // // // // // // // // // // // // // // // // while (l1 !== null && l2 !== null) {
// // // // // // // // // // // // // // // // // // //     if (l1.val < l2.val) {
// // // // // // // // // // // // // // // // // // //         tail.next = l1;
// // // // // // // // // // // // // // // // // // //         l1 = l1.next;
// // // // // // // // // // // // // // // // // // //     } else {
// // // // // // // // // // // // // // // // // // //         tail.next = l2;
// // // // // // // // // // // // // // // // // // //         l2 = l2.next;
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     tail = tail.next;
// // // // // // // // // // // // // // // // // // // }

// // // // // // // // // // // // // // // // // // // if (l1 !== null) {
// // // // // // // // // // // // // // // // // // //     tail.next = l1;
// // // // // // // // // // // // // // // // // // // } else if (l2 !== null) {
// // // // // // // // // // // // // // // // // // // //     tail.next = l2;
// // // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // // return dummy.next
// // // // // // // // // // // // // // // // // // // let a = parseInt('234');
// // // // // // // // // // // // // // // // // // // let b = parseInt('564');
// // // // // // // // // // // // // // // // // // // let sum = a + b;

// // // // // // // // // // // // // // // // // // // // Convert sum to string
// // // // // // // // // // // // // // // // // // // let sumAsString = sum.toString();

// // // // // // // // // // // // // // // // // // // // Create an array to store the digits
// // // // // // // // // // // // // // // // // // // let result = [];

// // // // // // // // // // // // // // // // // // // // Loop through each character in the string representation of the sum
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < sumAsString.length; i++) {
// // // // // // // // // // // // // // // // // // //     let digit = parseInt(sumAsString[i]);

// // // // // // // // // // // // // // // // // // //     // Handle the case where the digit is 0 and the sum is not just '0'
// // // // // // // // // // // // // // // // // // //     if (digit === 0 && sumAsString.length > 1) {
// // // // // // // // // // // // // // // // // // //         // Only add '0' if it's not the only digit in the sum
// // // // // // // // // // // // // // // // // // //         result.push(0);
// // // // // // // // // // // // // // // // // // //     } else {
// // // // // // // // // // // // // // // // // // //         result.push(digit);
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }

// // // // // // // // // // // // // // // // // // // console.log(result); 




// // // // // // // // // // // // // // // // // // // let nums1 = [3]
// // // // // // // // // // // // // // // // // // // let nums2 = [-2,-1]
// // // // // // // // // // // // // // // // // // // let all = nums1.concat(nums2)
// // // // // // // // // // // // // // // // // // // all.sort((a, b) => a - b);
// // // // // // // // // // // // // // // // // // // console.log(all)
// // // // // // // // // // // // // // // // // // // let k = parseInt(all.length / 2)

// // // // // // // // // // // // // // // // // // // if (all.length % 2 != 0) {
// // // // // // // // // // // // // // // // // // //     result = all[k]
// // // // // // // // // // // // // // // // // // //     console.log(result)
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // else{
// // // // // // // // // // // // // // // // // // //     result = all[k]+all[k-1]
// // // // // // // // // // // // // // // // // // //     console.log(result)
// // // // // // // // // // // // // // // // // // // }

// // // // // // // // // // // // // // // // // // // let x =1534236469

// // // // // // // // // // // // // // // // // // // if (x < 0) {
// // // // // // // // // // // // // // // // // // //     x = '-' + x;
// // // // // // // // // // // // // // // // // // // }

// // // // // // // // // // // // // // // // // // // if (Number.isSafeInteger(x) && x >= -Math.pow(2, 31) && x <= Math.pow(2, 31) - 1) {
// // // // // // // // // // // // // // // // // // //     console.log('0')
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // else {
// // // // // // // // // // // // // // // // // // //     let reversedStr = Math.abs(x).toString().split('').reverse().join('');
// // // // // // // // // // // // // // // // // // //     console.log(reversedStr)
// // // // // // // // // // // // // // // // // // // }

// // // // // // // // // // // // // // // // // // // let node = [1,2,3,4]
// // // // // // // // // // // // // // // // // // // console.log(node.length)
// // // // // // // // // // // // // // // // // // // let l = 0 
// // // // // // // // // // // // // // // // // // // let r = node.length - 1
// // // // // // // // // // // // // // // // // // // let i = 0
// // // // // // // // // // // // // // // // // // // while(l<r){
// // // // // // // // // // // // // // // // // // //     node[l].next = node[r-i]
// // // // // // // // // // // // // // // // // // //     i++;
// // // // // // // // // // // // // // // // // // //     l++;
// // // // // // // // // // // // // // // // // // // }


// // // // // // // // // // // // // // // // // // // let arr = [1,2,5,4,5,6]
// // // // // // // // // // // // // // // // // // // let a = new  Map()
// // // // // // // // // // // // // // // // // // // arr.forEach(element => {
// // // // // // // // // // // // // // // // // // //     if(a.has(element)){
// // // // // // // // // // // // // // // // // // //         console.log('yes')
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else{
// // // // // // // // // // // // // // // // // // //         a.set(1,element)
// // // // // // // // // // // // // // // // // // //         console.log(a)
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // });

// // // // // // // // // // // // // // // // // // // let h = "mississippi"
// // // // // // // // // // // // // // // // // // // let n = "issip"
// // // // // // // // // // // // // // // // // // // console.log(h)
// // // // // // // // // // // // // // // // // // // console.log(n)
// // // // // // // // // // // // // // // // // // // let j = 0
// // // // // // // // // // // // // // // // // // // for (let i = 0; i <= h.length - n.length; i++) {
// // // // // // // // // // // // // // // // // // //     if (h[i] == n[j]) {
// // // // // // // // // // // // // // // // // // //         j++;
// // // // // // // // // // // // // // // // // // //         if (j == n.length) {
// // // // // // // // // // // // // // // // // // //             console.log('hellow')
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else {
// // // // // // // // // // // // // // // // // // //         j = 0
// // // // // // // // // // // // // // // // // // //     }

// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // let nums1 = [4, 0, 0, 0, 0, 0]
// // // // // // // // // // // // // // // // // // // let nums2 = [1, 2, 3, 5, 6]
// // // // // // // // // // // // // // // // // // // let m = 1, n = 2
// // // // // // // // // // // // // // // // // // // let l = nums2.length
// // // // // // // // // // // // // // // // // // // if (m == 0) {
// // // // // // // // // // // // // // // // // // //     l = 0
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < nums2.length; i++) {
// // // // // // // // // // // // // // // // // // //     nums1[l + i] = nums2[i]

// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // nums1.sort()

// // // // // // // // // // // // // // // // // // // nums1 = [0], m = 0, nums2 = [1], n = 1
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < nums2.length; i++) {
// // // // // // // // // // // // // // // // // // //     nums1[m] = nums2[i]
// // // // // // // // // // // // // // // // // // //     m++
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // nums1.sort()
// // // // // // // // // // // // // // // // // // // return nums1

// // // // // // // // // // // // // // // // // // // nums = [3,30,34,5,9]
// // // // // // // // // // // // // // // // // // // nums = nums.toString().split(',').join('')
// // // // // // // // // // // // // // // // // // // console.log(nums)
// // // // // // // // // // // // // // // // // // // let map = new Map()
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < nums.length; i++) {
// // // // // // // // // // // // // // // // // // //     map.set()

// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(map)

// // // // // // // // // // // // // // // // // // // let nums = [2, 2, 1, 1, 1, 2, 2,3,4,65,6,,3,2,3];
// // // // // // // // // // // // // // // // // // // nums.sort();
// // // // // // // // // // // // // // // // // // // let map = new Map();
// // // // // // // // // // // // // // // // // // // let count = 0
// // // // // // // // // // // // // // // // // // // nums.forEach((value,index) => {
// // // // // // // // // // // // // // // // // // //     if (map.has(value)) {
// // // // // // // // // // // // // // // // // // //         map.set(value, map.get(value) + 1);

// // // // // // // // // // // // // // // // // // //     } else {
// // // // // // // // // // // // // // // // // // //         map.set(value, 1);
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // });
// // // // // // // // // // // // // // // // // // // let counts = -Infinity
// // // // // // // // // // // // // // // // // // // let values;

// // // // // // // // // // // // // // // // // // // map.forEach((count, value) => {
// // // // // // // // // // // // // // // // // // //     if(count>counts){
// // // // // // // // // // // // // // // // // // //         counts = count
// // // // // // // // // // // // // // // // // // //         values = value
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // });
// // // // // // // // // // // // // // // // // // // console.log(counts,values)
// // // // // // // // // // // // // // // // // // // console.log(map);


// // // // // // // // // // // // // // // // // // // word1 = "pqrs", word2 = "ab"
// // // // // // // // // // // // // // // // // // // answer = ''
// // // // // // // // // // // // // // // // // // // ans = ''
// // // // // // // // // // // // // // // // // // // let maxLength = Math.max(word1.length, word2.length);
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < maxLength; i++) {
// // // // // // // // // // // // // // // // // // //     if (word1[i] != undefined && word2[i] != undefined) {
// // // // // // // // // // // // // // // // // // //         answer = word1[i] + word2[i]
// // // // // // // // // // // // // // // // // // //         ans = ans + answer
// // // // // // // // // // // // // // // // // // //         console.log(ans)
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else if (word1[i] == undefined) {
// // // // // // // // // // // // // // // // // // //         ans = ans + word2[i]
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else if (word2[i] == undefined) {
// // // // // // // // // // // // // // // // // // //         ans = ans + word1[i]
// // // // // // // // // // // // // // // // // // //     }

// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(ans)
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < word2.length; i++) {
// // // // // // // // // // // // // // // // // // //     if(word1[i] == null){

// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     answer = word1[i] + word2[i]
// // // // // // // // // // // // // // // // // // //     ans = ans + answer
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(ans)


// // // // // // // // // // // // // // // // // // // let nums  = [4,3,2,7,8,2,3,1]
// // // // // // // // // // // // // // // // // // // arr = []
// // // // // // // // // // // // // // // // // // // let map = new Map()
// // // // // // // // // // // // // // // // // // // nums.forEach(element => {
// // // // // // // // // // // // // // // // // // //    if(map.has(element)){
// // // // // // // // // // // // // // // // // // //     arr.push(element)
// // // // // // // // // // // // // // // // // // //    } 
// // // // // // // // // // // // // // // // // // //    else{
// // // // // // // // // // // // // // // // // // //     map.set(element,1)
// // // // // // // // // // // // // // // // // // //    }
// // // // // // // // // // // // // // // // // // // });
// // // // // // // // // // // // // // // // // // // console.log(arr)


// // // // // // // // // // // // // // // // // // // let s = "abbaca"
// // // // // // // // // // // // // // // // // // // s = s.split('')
// // // // // // // // // // // // // // // // // // // let j = 1
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < s.length - 1; i++) {
// // // // // // // // // // // // // // // // // // //     if (s[i] = s[j]) {
// // // // // // // // // // // // // // // // // // //         ;
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     j++
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(s)

// // // // // // // // // // // // // // // // // // // s = "abcd"
// // // // // // // // // // // // // // // // // // // t = "abcde"
// // // // // // // // // // // // // // // // // // // s = s.split('').sort()
// // // // // // // // // // // // // // // // // // // t = t.split('').sort()
// // // // // // // // // // // // // // // // // // // let j = 0
// // // // // // // // // // // // // // // // // // // let element = 0;
// // // // // // // // // // // // // // // // // // // let l;
// // // // // // // // // // // // // // // // // // // if(t.length > s.length){
// // // // // // // // // // // // // // // // // // //     l = t.length - 1
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // else{
// // // // // // // // // // // // // // // // // // //     l = s.length - 1
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // for (let i = 0; i <= l; i++) {
// // // // // // // // // // // // // // // // // // //     if(s[i] == t[j]){
// // // // // // // // // // // // // // // // // // //         element++
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else{
// // // // // // // // // // // // // // // // // // //         console.log(t[j])
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     j++
// // // // // // // // // // // // // // // // // // // }

// // // // // // // // // // // // // // // // // // // nums = [-1, 0, 1, 2, -1, -4]
// // // // // // // // // // // // // // // // // // // nums.sort((a, b) => a - b);
// // // // // // // // // // // // // // // // // // // console.log(nums)
// // // // // // // // // // // // // // // // // // // arr = []
// // // // // // // // // // // // // // // // // // // let l = 0
// // // // // // // // // // // // // // // // // // // for (let i = nums.length - 1; i >= 0; i--) {
// // // // // // // // // // // // // // // // // // //     if (nums[l] + nums[i] == 0) {
// // // // // // // // // // // // // // // // // // //         arr.push([nums[l], nums[i]])
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     l++
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(arr)
// // // // // // // // // // // // // // // // // // // let map = new Map()
// // // // // // // // // // // // // // // // // // // nums.forEach((element, index) => {
// // // // // // // // // // // // // // // // // // //     map.set(element, index)
// // // // // // // // // // // // // // // // // // // });
// // // // // // // // // // // // // // // // // // // console.log(map)

// // // // // // // // // // // // // // // // // // // //Putting values in the arr
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < arr.length; i++) {
// // // // // // // // // // // // // // // // // // //     for (let j = 0; j < arr[i].length - 1; j++) { // Adjusted loop for accessing adjacent elements
// // // // // // // // // // // // // // // // // // //         let current = arr[i][j];
// // // // // // // // // // // // // // // // // // //         let next = arr[i][j + 1];

// // // // // // // // // // // // // // // // // // //         map.forEach((value) => {
// // // // // // // // // // // // // // // // // // //             if (current + next + value === 0) {
// // // // // // // // // // // // // // // // // // //                 console.log(current, next, value);
// // // // // // // // // // // // // // // // // // //             }
// // // // // // // // // // // // // // // // // // //         });
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }

// // // // // // // // // // // // // // // // // // // let arr = [1, 2, 34, 3, 4, 5, 7, 23, 12]
// // // // // // // // // // // // // // // // // // // let element = 0
// // // // // // // // // // // // // // // // // // // for (let i = 0; i <= arr.length - 1; i++){
// // // // // // // // // // // // // // // // // // //     if(arr[i]%2 !=0){
// // // // // // // // // // // // // // // // // // //         element++
// // // // // // // // // // // // // // // // // // //         if(element == 3){
// // // // // // // // // // // // // // // // // // //             console.log('true')
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     if(arr[i]%2 == 0){
// // // // // // // // // // // // // // // // // // //         element = 0
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }

// // // // // // // // // // // // // // // // // // // arr = [10, 2, 5, 3]
// // // // // // // // // // // // // // // // // // // for (let i = 0; i <= arr.length - 1; i++) {
// // // // // // // // // // // // // // // // // // //     for (let j = 0; j <= arr.length - 1; j++) {
// // // // // // // // // // // // // // // // // // //         if (arr[i] = (2 * arr[j]) && i != j) {
// // // // // // // // // // // // // // // // // // //             console.log('first')
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log('false')

// // // // // // // // // // // // // // // // // // // let map = new Map();
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < arr.length; i++) {
// // // // // // // // // // // // // // // // // // //     if (map.has(arr[i] * 2) || (arr[i] % 2 === 0 && map.has(arr[i] / 2))) {
// // // // // // // // // // // // // // // // // // //         return true;
// // // // // // // // // // // // // // // // // // //     } else {
// // // // // // // // // // // // // // // // // // //         map.set(arr[i], 1);
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // return false;
// // // // // // // // // // // // // // // // // // // console.log(map)



// // // // // // // // // // // // // // // // // // // nums = [1,1,1,2,2,3]
// // // // // // // // // // // // // // // // // // // let element = 0;
// // // // // // // // // // // // // // // // // // // for (let i = 0; i <= array.length - 1; i++) {
// // // // // // // // // // // // // // // // // // //     for (let j = 1; j <= array.length - 1; j++) {
// // // // // // // // // // // // // // // // // // //         if(nums[i] == nums[j]){


// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //         else{

// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //     }

// // // // // // // // // // // // // // // // // // // }

// // // // // // // // // // // // // // // // // // // s = "LeetcodeHelpsMeLearn"
// // // // // // // // // // // // // // // // // // // spaces = [8, 13, 15]
// // // // // // // // // // // // // // // // // // // let a = 0
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < s.length; i++) {
// // // // // // // // // // // // // // // // // // //     if (i == spaces[a]) {
// // // // // // // // // // // // // // // // // // //         s = s[i] + ''
// // // // // // // // // // // // // // // // // // //     }

// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(s)
// // // // // // // // // // // // // // // // // // // nums = [1, 1, 1, 2, 2, 3]
// // // // // // // // // // // // // // // // // // // l = 0
// // // // // // // // // // // // // // // // // // // r = 1
// // // // // // // // // // // // // // // // // // // while (r < nums.length - 1) {
// // // // // // // // // // // // // // // // // // //     if (nums[l] == nums[r] && nums[r] == nums[r + 1]) {
// // // // // // // // // // // // // // // // // // //         nums.pop(r)
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else {
// // // // // // // // // // // // // // // // // // //         l = l+1
// // // // // // // // // // // // // // // // // // //         r = r+1
// // // // // // // // // // // // // // // // // // //     }

// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(nums)
// // // // // // // // // // // // // // // // // // // let letterCount = 0
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < s.length; i++) {
// // // // // // // // // // // // // // // // // // //     if (s[i] !== ' ') {
// // // // // // // // // // // // // // // // // // //         letterCount++;
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(letterCount)
// // // // // // // // // // // // // // // // // // // for (let j = 0; j <= s.length - 1; j++) {
// // // // // // // // // // // // // // // // // // //     ans = ans + s[j]
// // // // // // // // // // // // // // // // // // //     if (ans.length == spaces[i]) {
// // // // // // // // // // // // // // // // // // //         ans = ans + ' '
// // // // // // // // // // // // // // // // // // //         i++
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(ans)
// // // // // // // // // // // // // // // // // // // s = "icodeinpython", spaces = [1,5,7,9]
// // // // // // // // // // // // // // // // // // // let ans = ''
// // // // // // // // // // // // // // // // // // // let j = 0
// // // // // // // // // // // // // // // // // // // let element = 0
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < s.length; i++) {

// // // // // // // // // // // // // // // // // // //     if (i == spaces[j]) {
// // // // // // // // // // // // // // // // // // //         ans = ans + ' '
// // // // // // // // // // // // // // // // // // //         j++
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     ans = ans + s[i]




// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(ans)
// // // // // // // // // // // // // // // // // // // console.log(words[2])
// // // // // // // // // // // // // // // // // // // words = words.join("")
// // // // // // // // // // // // // // // // // // // console.log(words)
// // // // // // // // // // // // // // // // // // // if(s.length > words.length){
// // // // // // // // // // // // // // // // // // //     console.log('False')
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // let ans = ''
// // // // // // // // // // // // // // // // // // // let i = 0
// // // // // // // // // // // // // // // // // // // let element = 0
// // // // // // // // // // // // // // // // // // // for (let j = 0; j < s.length; j++) {
// // // // // // // // // // // // // // // // // // //     ans = ans + s[j]
// // // // // // // // // // // // // // // // // // //     if(ans == words[i]){
// // // // // // // // // // // // // // // // // // //         element++
// // // // // // // // // // // // // // // // // // //         i++
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     if(element == s.length){
// // // // // // // // // // // // // // // // // // //         console.log('true')
// // // // // // // // // // // // // // // // // // //     }

// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log('false')

// // // // // // // // // // // // // // // // // // // else {
// // // // // // // // // // // // // // // // // // //     for (let i = 0; i < s.length; i++) {
// // // // // // // // // // // // // // // // // // //         if(s[i] == words[i]){
// // // // // // // // // // // // // // // // // // //             console.log('true')
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //         else{
// // // // // // // // // // // // // // // // // // //             console.log('False');

// // // // // // // // // // // // // // // // // // //         }

// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // 


// // // // // // // // // // // // // // // // // // // s = "iloveleetcode", words = ["i", "love", "leetcode", "apples"]
// // // // // // // // // // // // // // // // // // // let ans = ''
// // // // // // // // // // // // // // // // // // // for (const i of words) {
// // // // // // // // // // // // // // // // // // //     ans += i
// // // // // // // // // // // // // // // // // // //     if (s.startsWith(ans)) {
// // // // // // // // // // // // // // // // // // //         console.log('true')
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else{
// // // // // // // // // // // // // // // // // // //         console.log('false');

// // // // // // // // // // // // // // // // // // //     }

// // // // // // // // // // // // // // // // // // // }

// // // // // // // // // // // // // // // // // // // x =
// // // // // // // // // // // // // // // // // // // 1.00000
// // // // // // // // // // // // // // // // // // // n =
// // // // // // // // // // // // // // // // // // // 2147483647

// // // // // // // // // // // // // // // // // // // // console.log(Math.pow(x,n))
// // // // // // // // // // // // // // // // // // // let ans = 1,i = 1
// // // // // // // // // // // // // // // // // // // if (n < 0) {
// // // // // // // // // // // // // // // // // // //     l = n * -1
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // else {
// // // // // // // // // // // // // // // // // // //     l = n
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // while (i <= l) {
// // // // // // // // // // // // // // // // // // //     if (n > 0) {
// // // // // // // // // // // // // // // // // // //         ans = ans * x
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else {
// // // // // // // // // // // // // // // // // // //         ans = ans * x
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     i++
// // // // // // // // // // // // // // // // // // // }


// // // // // // // // // // // // // // // // // // // if (n < 0) {
// // // // // // // // // // // // // // // // // // //     console.log(1 / ans)
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // else {
// // // // // // // // // // // // // // // // // // //     console.log(ans)
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // s = "MCMXCIV"
// // // // // // // // // // // // // // // // // // // let romanToInt = {
// // // // // // // // // // // // // // // // // // //     'I': 1,
// // // // // // // // // // // // // // // // // // //     'V': 5,
// // // // // // // // // // // // // // // // // // //     'X': 10,
// // // // // // // // // // // // // // // // // // //     'L': 50,
// // // // // // // // // // // // // // // // // // //     'C': 100,
// // // // // // // // // // // // // // // // // // //     'D': 500,
// // // // // // // // // // // // // // // // // // //     'M': 1000
// // // // // // // // // // // // // // // // // // // };
// // // // // // // // // // // // // // // // // // // let res = 0;
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < s.length; i++) {
// // // // // // // // // // // // // // // // // // //     if (i + 1 < s.length && romanToInt[s[i]] < romanToInt[s[i + 1]]) {
// // // // // // // // // // // // // // // // // // //         res -= romanToInt[s[i]];
// // // // // // // // // // // // // // // // // // //     } else {
// // // // // // // // // // // // // // // // // // //         res += romanToInt[s[i]];
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(res)

// // // // // // // // // // // // // // // // // // // number =
// // // // // // // // // // // // // // // // // // // "133235"
// // // // // // // // // // // // // // // // // // // digit =
// // // // // // // // // // // // // // // // // // // "3"
// // // // // // // // // // // // // // // // // // // number = "551", digit = "5"

// // // // // // // // // // // // // // // // // // // let j = 0
// // // // // // // // // // // // // // // // // // // number = number.split('')
// // // // // // // // // // // // // // // // // // // let element = 0
// // // // // // // // // // // // // // // // // // // let i = 0
// // // // // // // // // // // // // // // // // // // while (j <= number.length - 1) {
// // // // // // // // // // // // // // // // // // //     if ((number[i] == digit && number[i] < number[i+ 1]) || number[i + 1] == undefined) {
// // // // // // // // // // // // // // // // // // //         element++
// // // // // // // // // // // // // // // // // // //         if (element == 2) {
// // // // // // // // // // // // // // // // // // //             break
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //         else {
// // // // // // // // // // // // // // // // // // //             console.log(number)
// // // // // // // // // // // // // // // // // // //             number.splice(i, 1)
// // // // // // // // // // // // // // // // // // //             console.log(number)
// // // // // // // // // // // // // // // // // // //         }

// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     // else {
// // // // // // // // // // // // // // // // // // //     //     if (element == 2) {
// // // // // // // // // // // // // // // // // // //     //         number.splice(i, 1)
// // // // // // // // // // // // // // // // // // //     //     }
// // // // // // // // // // // // // // // // // // //     // }
// // // // // // // // // // // // // // // // // // //     j++
// // // // // // // // // // // // // // // // // // //     i++
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // number = number.join('')
// // // // // // // // // // // // // // // // // // // console.log(number)
// // // // // // // // // // // // // // // // // // // let arr = [17, 18, 5, 4, 6, 1]
// // // // // // // // // // // // // // // // // // // const result = new Array(arr.length);
// // // // // // // // // // // // // // // // // // // result[arr.length - 1] = -1;

// // // // // // // // // // // // // // // // // // // for (let i = arr.length - 1; i > 0; i -= 1) {
// // // // // // // // // // // // // // // // // // //     result[i - 1] = Math.max(arr[i], result[i]);
// // // // // // // // // // // // // // // // // // // }

// // // // // // // // // // // // // // // // // // // console.log(result)


// // // // // // // // // // // // // // // // // // // num = "51230100"
// // // // // // // // // // // // // // // // // // // num = num.split(',').join('')
// // // // // // // // // // // // // // // // // // // num = Array.from(num)
// // // // // // // // // // // // // // // // // // // for (let i = num.length - 1; i > 0; i--) {
// // // // // // // // // // // // // // // // // // //     if(num[i] == '0'){
// // // // // // // // // // // // // // // // // // //         num.splice(i,1)
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else{
// // // // // // // // // // // // // // // // // // //         break
// // // // // // // // // // // // // // // // // // //     }

// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(num.join(''))

// // // // // // // // // // // // // // // // // // // nums = [3,2,3,1,2,4,5,5,6], k = 4
// // // // // // // // // // // // // // // // // // // // nums = [3,2,1,5,6,4], k = 2
// // // // // // // // // // // // // // // // // // // let prev = 0;
// // // // // // // // // // // // // // // // // // // let big = 0
// // // // // // // // // // // // // // // // // // // let l = 0
// // // // // // // // // // // // // // // // // // // let r = nums.length - 1
// // // // // // // // // // // // // // // // // // // while (l < r) {
// // // // // // // // // // // // // // // // // // //     if (nums[l] < nums[r]) {
// // // // // // // // // // // // // // // // // // //         l++
// // // // // // // // // // // // // // // // // // //         big = nums[r]
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else {
// // // // // // // // // // // // // // // // // // //         r--
// // // // // // // // // // // // // // // // // // //         big = nums[l]
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(big)
// // // // // // // // // // // // // // // // // // // let second = -Infinity
// // // // // // // // // // // // // // // // // // // for (let i = 0; i <= nums.length-1; i++) {
// // // // // // // // // // // // // // // // // // //     if(nums[i]>second && nums[i] != big){
// // // // // // // // // // // // // // // // // // //         second = nums[i]
// // // // // // // // // // // // // // // // // // //     }

// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(second)

// // // // // // // // // // // // // // // // // // // arr =
// // // // // // // // // // // // // // // // // // //     [1, 1, 1, 1, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 12, 12, 12]
// // // // // // // // // // // // // // // // // // // let map = new Map()
// // // // // // // // // // // // // // // // // // // arr.forEach(element => {
// // // // // // // // // // // // // // // // // // //     if (map.has(element)) {
// // // // // // // // // // // // // // // // // // //         map.set(element, map.get(element) + 1)
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else {
// // // // // // // // // // // // // // // // // // //         map.set(element, 1)
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // })
// // // // // // // // // // // // // // // // // // // let maxOccurrences = 0;
// // // // // // // // // // // // // // // // // // // let maxKey = null;
// // // // // // // // // // // // // // // // // // // let v;
// // // // // // // // // // // // // // // // // // // map.forEach((values, key) => {
// // // // // // // // // // // // // // // // // // //     if (values > maxOccurrences) {
// // // // // // // // // // // // // // // // // // //         maxOccurrences = values
// // // // // // // // // // // // // // // // // // //         maxKey = key
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     // v = map.get(maxOccurrences)
// // // // // // // // // // // // // // // // // // // });
// // // // // // // // // // // // // // // // // // // console.log(maxKey)
// // // // // // // // // // // // // // // // // // // return v
// // // // // // // // // // // // // // // // // // // console.log(v)


// // // // // // // // // // // // // // // // // // // let prices = [8, 4, 6, 2, 3]
// // // // // // // // // // // // // // // // // // // answer = [...prices]
// // // // // // // // // // // // // // // // // // // let stack = []
// // // // // // // // // // // // // // // // // // // for (let i = 0; i <= prices.length-1; i++) {
// // // // // // // // // // // // // // // // // // //     while (stack && prices[stack[stack.length - 1]] >= prices[i]){
// // // // // // // // // // // // // // // // // // //         index = stack.pop()
// // // // // // // // // // // // // // // // // // //         answer[index] = answer[index] - prices[i]
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     stack.push(i)
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(answer)


// // // // // // // // // // // // // // // // // // // s = "Let's take LeetCode contest"
// // // // // // // // // // // // // // // // // // // let arr = []
// // // // // // // // // // // // // // // // // // // s = s.toString().split(' ')
// // // // // // // // // // // // // // // // // // // for (let i = 0; i <= s.length - 1; i++) {
// // // // // // // // // // // // // // // // // // //     a = s[i].split('').reverse().join('')
// // // // // // // // // // // // // // // // // // //     arr.push(a)
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // return arr.join(" ")
// // // // // // // // // // // // // // // // // // // a =
// // // // // // // // // // // // // // // // // // //     "10100000100100110110010000010101111011011001101110111111111101000000101111001110001111100001101"
// // // // // // // // // // // // // // // // // // // b =
// // // // // // // // // // // // // // // // // // //     "110101001011101110001111100110001010100001101011101010000011011011001011101111001100000011011110011"

// // // // // // // // // // // // // // // // // // //     let decimalA = BigInt(`0b${a}`);
// // // // // // // // // // // // // // // // // // //     let decimalB = BigInt(`0b${b}`);

// // // // // // // // // // // // // // // // // // //     // Compute the sum of decimalA and decimalB
// // // // // // // // // // // // // // // // // // //     let sumDecimal = decimalA + decimalB;

// // // // // // // // // // // // // // // // // // //     // Convert sumDecimal back to binary string
// // // // // // // // // // // // // // // // // // //     let binarySum = sumDecimal.toString(2);

// // // // // // // // // // // // // // // // // // //     console.log(binarySum);




// // // // // // // // // // // // // // // // // // // s = "abc"
// // // // // // // // // // // // // // // // // // // l = 0
// // // // // // // // // // // // // // // // // // // r = s.length - 1
// // // // // // // // // // // // // // // // // // // a = s.split('').reverse().join('')
// // // // // // // // // // // // // // // // // // // if (s == a) {
// // // // // // // // // // // // // // // // // // //     {
// // // // // // // // // // // // // // // // // // //         console.log('true');
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // else {
// // // // // // // // // // // // // // // // // // //     while (l < r) {
// // // // // // // // // // // // // // // // // // //         if (s[l] == s[r]) {
// // // // // // // // // // // // // // // // // // //             l++
// // // // // // // // // // // // // // // // // // //             r--
// // // // // // // // // // // // // // // // // // //             if (s[l] == s[r]) {
// // // // // // // // // // // // // // // // // // //                 s = s.split('')
// // // // // // // // // // // // // // // // // // //                 s.splice(r, 1)
// // // // // // // // // // // // // // // // // // //                 r = s.reverse()
// // // // // // // // // // // // // // // // // // //                 if (r == s) {
// // // // // // // // // // // // // // // // // // //                     console.log('true');

// // // // // // // // // // // // // // // // // // //                 }
// // // // // // // // // // // // // // // // // // //             }
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //         else {
// // // // // // // // // // // // // // // // // // //             // console.log('false')
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log('false');


// // // // // // // // // // // // // // // // // // // let word = "abc";
// // // // // // // // // // // // // // // // // // // let ch = "d";
// // // // // // // // // // // // // // // // // // // let ans = '';
// // // // // // // // // // // // // // // // // // // let count = 0
// // // // // // // // // // // // // // // // // // // let a;

// // // // // // // // // // // // // // // // // // // for (let i = 0; i <= word.length - 1; i++) {
// // // // // // // // // // // // // // // // // // //     if (word[i] !== ch) {
// // // // // // // // // // // // // // // // // // //         ans = ans + word[i];
// // // // // // // // // // // // // // // // // // //         count++
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else if ((word[i] == ch)) {
// // // // // // // // // // // // // // // // // // //         ans = ans + word[i]
// // // // // // // // // // // // // // // // // // //         count++
// // // // // // // // // // // // // // // // // // //         console.log(ans, count, i)
// // // // // // // // // // // // // // // // // // //         a = i
// // // // // // // // // // // // // // // // // // //         break
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // if (count == a + 1) {
// // // // // // // // // // // // // // // // // // //     ans = ans.split('').reverse().join('')
// // // // // // // // // // // // // // // // // // //     for (let i = count; i <= word.length - 1; i++) {
// // // // // // // // // // // // // // // // // // //         ans = ans + word[i]
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(ans)\



// // // // // // // // // // // // // // // // // // // s = "()[]{}"
// // // // // // // // // // // // // // // // // // // st = '({['
// // // // // // // // // // // // // // // // // // // let stack = []
// // // // // // // // // // // // // // // // // // // if (s, length % 2 !== 0) {
// // // // // // // // // // // // // // // // // // //     console.log('false')
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // for (let i = 0; i <= s.length - 1; i++) {
// // // // // // // // // // // // // // // // // // //     if (s[i].includes(st)) {
// // // // // // // // // // // // // // // // // // //         stack.push(s[i])
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else {
// // // // // // // // // // // // // // // // // // //         if (stack) {
// // // // // // // // // // // // // // // // // // //             console.log('false')
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //         top = stack[stack.length - 1]
// // // // // // // // // // // // // // // // // // //         if ((s[i] == ')' && top != '(') || (s[i] == '}' && top != '{') || (s[i] == ']' && top != '[')){
// // // // // // // // // // // // // // // // // // //             console.log('false')
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //         stack.pop()
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // return 


// // // // // // // // // // // // // // // // // // // nums = [1, 2, 3, 1, 2, 3], k = 2
// // // // // // // // // // // // // // // // // // // nums = [1, 0, 1, 1], k = 1
// // // // // // // // // // // // // // // // // // // nums = [1, 2, 3, 1], k = 3
// // // // // // // // // // // // // // // // // // // // nums = [0, 1, 2, 3, 4, 0, 0, 7, 8, 9, 10, 11, 12, 0], k - 1
// // // // // // // // // // // // // // // // // // // let map = new Map()
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < nums.length; i++) {
// // // // // // // // // // // // // // // // // // //     let num1 = nums[i]
// // // // // // // // // // // // // // // // // // //     if (map.has(num1)) {
// // // // // // // // // // // // // // // // // // //         let ind = map.get(num1)
// // // // // // // // // // // // // // // // // // //         if (Math.abs(ind - i) <= k) {
// // // // // // // // // // // // // // // // // // //             console.log('true')
// // // // // // // // // // // // // // // // // // //         }

// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     map.set(num1, i)
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log('false')
// // // // // // // // // // // // // // // // // // // console.log(map)

// // // // // // // // // // // // // // // // // // // let s = "Test1ng-Leet=code-Q!"
// // // // // // // // // // // // // // // // // // // s = s.split('')
// // // // // // // // // // // // // // // // // // // let l = 0
// // // // // // // // // // // // // // // // // // // let r = s.length - 1
// // // // // // // // // // // // // // // // // // // while (l < r) {
// // // // // // // // // // // // // // // // // // //     if (!((s[l] >= 'a' && s[l] <= 'z') || (s[l] >= 'A' && s[l] <= 'Z'))) {
// // // // // // // // // // // // // // // // // // //         l++
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else if (!((s[r] >= 'a' && s[r] <= 'z') || (s[r] >= 'A' && s[r] <= 'Z'))) {
// // // // // // // // // // // // // // // // // // //         r--
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else {
// // // // // // // // // // // // // // // // // // //         temp = s[l]
// // // // // // // // // // // // // // // // // // //         s[l] = s[r]
// // // // // // // // // // // // // // // // // // //         s[r] = temp
// // // // // // // // // // // // // // // // // // //         // console.log(s)
// // // // // // // // // // // // // // // // // // //         l++
// // // // // // // // // // // // // // // // // // //         r--
// // // // // // // // // // // // // // // // // // //     }

// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(s.join(""))
// // // // // // // // // // // // // // // // // // // "Qedo1ct-eeLg=ntse-T!"
// // // // // // // // // // // // // // // // // // // "j-Ih-gfE-dCba"


// // // // // // // // // // // // // // // // // // // num1 =
// // // // // // // // // // // // // // // // // // // "123456789"
// // // // // // // // // // // // // // // // // // // num2 =
// // // // // // // // // // // // // // // // // // // "987654321"
// // // // // // // // // // // // // // // // // // // let a = BigInt(num1)
// // // // // // // // // // // // // // // // // // // let b = BigInt(num2)
// // // // // // // // // // // // // // // // // // // let m = a*b
// // // // // // // // // // // // // // // // // // // m = m.toString().split('').join('')
// // // // // // // // // // // // // // // // // // // console.log(m)

// // // // // // // // // // // // // // // // // // // let c = 'n'
// // // // // // // // // // // // // // // // // // // let p = m.filter((value)=>{
// // // // // // // // // // // // // // // // // // //     return value != c
// // // // // // // // // // // // // // // // // // // })
// // // // // // // // // // // // // // // // // // // console.log(p)
// // // // // // // // // // // // // // // // // // // n = 45
// // // // // // // // // // // // // // // // // // // if(n == -1){
// // // // // // // // // // // // // // // // // // //     console.log('false');

// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // let base  = 3
// // // // // // // // // // // // // // // // // // // for (let i = 0; i <= 27;  i++) {
// // // // // // // // // // // // // // // // // // //     base = base * 3
// // // // // // // // // // // // // // // // // // //     if (base == n) {
// // // // // // // // // // // // // // // // // // //         console.log('true');

// // // // // // // // // // // // // // // // // // //     }

// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log('false')
// // // // // // // // // // // // // // // // // // // n = 16
// // // // // // // // // // // // // // // // // // // console.log(Math.pow(2, 0))

// // // // // // // // // // // // // // // // // // // let d = '00000010100101000001111010011100'




// // // // // // // // // // // // // // // // // // // n = 19
// // // // // // // // // // // // // // // // // // // let r = n.length - 1
// // // // // // // // // // // // // // // // // // // let l = 0
// // // // // // // // // // // // // // // // // // // while(l<r){

// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // nums1 = [4, 9, 5], nums2 = [9, 4, 9, 8, 4]

// // // // // // // // // // // // // // // // // // // nums1.sort((a, b) => a - b)
// // // // // // // // // // // // // // // // // // // nums2.sort((a, b) => a - b)
// // // // // // // // // // // // // // // // // // // let a = 0
// // // // // // // // // // // // // // // // // // // let b = 0
// // // // // // // // // // // // // // // // // // // let arr = []
// // // // // // // // // // // // // // // // // // // while (a < nums1.length && b < nums2.length) {
// // // // // // // // // // // // // // // // // // //     if (nums1[a] < nums2[b]) {
// // // // // // // // // // // // // // // // // // //         a++
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else if (nums1[a] > nums2[b]) {
// // // // // // // // // // // // // // // // // // //         b++
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else {
// // // // // // // // // // // // // // // // // // //         arr.push(nums1[a])
// // // // // // // // // // // // // // // // // // //         a++
// // // // // // // // // // // // // // // // // // //         b++
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(arr)
// // // // // // // // // // // // // // // // // // // let l;
// // // // // // // // // // // // // // // // // // // let arr;

// // // // // // // // // // // // // // // // // // // if (nums1.length >= nums2.length) {
// // // // // // // // // // // // // // // // // // //     nums = nums1
// // // // // // // // // // // // // // // // // // //     l = nums2
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // else {
// // // // // // // // // // // // // // // // // // //     nums = nums2
// // // // // // // // // // // // // // // // // // //     l = nums1
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // arr = []
// // // // // // // // // // // // // // // // // // // let map = new Map()
// // // // // // // // // // // // // // // // // // // let i = 0

// // // // // // // // // // // // // // // // // // // nums.forEach((element) => {
// // // // // // // // // // // // // // // // // // //     if (map.has(element)) {
// // // // // // // // // // // // // // // // // // //         map.set(element, map.get(element) + 1)
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else {
// // // // // // // // // // // // // // // // // // //         map.set(element, 1)
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // });
// // // // // // // // // // // // // // // // // // // arr = l.filter((value)=>{
// // // // // // // // // // // // // // // // // // //     if(map.has(value) && map.get(value)>0){
// // // // // // // // // // // // // // // // // // //         map.set(value,map.get(value)-1)
// // // // // // // // // // // // // // // // // // //         return true
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     return false
// // // // // // // // // // // // // // // // // // // })

// // // // // // // // // // // // // // // // // // // console.log(arr)


// // // // // // // // // // // // // // // // // // // let s = "abcdefg"
// // // // // // // // // // // // // // // // // // // s = s.split('')
// // // // // // // // // // // // // // // // // // // let k = 2
// // // // // // // // // // // // // // // // // // // let i = 0
// // // // // // // // // // // // // // // // // // // let j = i+1
// // // // // // // // // // // // // // // // // // // // let r = s.length - j
// // // // // // // // // // // // // // // // // // // // console.log(r)
// // // // // // // // // // // // // // // // // // // while (i < j) {
// // // // // // // // // // // // // // // // // // //     if (s.length > 2) {
// // // // // // // // // // // // // // // // // // //         temp = s[i]
// // // // // // // // // // // // // // // // // // //         s[i] = s[j]
// // // // // // // // // // // // // // // // // // //         s[j] = temp
// // // // // // // // // // // // // // // // // // //         i = i+2
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     j = i + 1

// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(s.join(''))



// // // // // // // // // // // // // // // // // // // let names = ["IEO", "Sgizfdfrims", "QTASHKQ", "Vk", "RPJOFYZUBFSIYp", "EPCFFt", "VOYGWWNCf", "WSpmqvb"]
// // // // // // // // // // // // // // // // // // // let heights = [17233, 32521, 14087, 42738, 46669, 65662, 43204, 8224]
// // // // // // // // // // // // // // // // // // // for (let i = 0; i <= names.length - 1; i++) {
// // // // // // // // // // // // // // // // // // //     let j = i + 1
// // // // // // // // // // // // // // // // // // //     if (heights[i] <= heights[j]) {
// // // // // // // // // // // // // // // // // // //         let temp = names[i]
// // // // // // // // // // // // // // // // // // //         names[i] = names[j]
// // // // // // // // // // // // // // // // // // //         names[j] = temp
// // // // // // // // // // // // // // // // // // //     }

// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(names)

// // // // // // // // // // // // // // // // // // // n = 2147483645
// // // // // // // // // // // // // // // // // // // n = BigInt(n).toString(2)
// // // // // // // // // // // // // // // // // // // n = n.split('')
// // // // // // // // // // // // // // // // // // // let p = n.filter((value)=>{
// // // // // // // // // // // // // // // // // // //     return value != 0
// // // // // // // // // // // // // // // // // // // })
// // // // // // // // // // // // // // // // // // // console.log(p.length)

// // // // // // // // // // // // // // // // // // // console.log(n)
// // // // // // // // // // // // // // // // // // // n = 19s
// // // // // // // // // // // // // // // // // // // let a = 0
// // // // // // // // // // // // // // // // // // // let s = 0
// // // // // // // // // // // // // // // // // // // while (n != 1) {
// // // // // // // // // // // // // // // // // // //     n = n.toString().split('')
// // // // // // // // // // // // // // // // // // //     s = 0
// // // // // // // // // // // // // // // // // // //     for (let i = 0; i <= n.length - 1; i++) {
// // // // // // // // // // // // // // // // // // //         digit = parseInt(n[i])
// // // // // // // // // // // // // // // // // // //         s  = Math.pow(digit,2)
// // // // // // // // // // // // // // // // // // //         s = a + s
// // // // // // // // // // // // // // // // // // //         console.log(s)
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     n = s
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // if(n!=1){
// // // // // // // // // // // // // // // // // // //     return false
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // else{
// // // // // // // // // // // // // // // // // // //     return true
// // // // // // // // // // // // // // // // // // // }

// // // // // // // // // // // // // // // // // // // const set = new Set()

// // // // // // // // // // // // // // // // // // // while (n !== 1) {
// // // // // // // // // // // // // // // // // // //     if (set.has(n)) console.log('false')
// // // // // // // // // // // // // // // // // // //     set.add(n)
// // // // // // // // // // // // // // // // // // //     n = n.toString().split("").map(str => Number(str) ** 2).reduce((acc, curr) => acc + curr, 0)
// // // // // // // // // // // // // // // // // // // }

// // // // // // // // // // // // // // // // // // // console.log("true")

// // // // // // // // // // // // // // // // // // // s = "loveleetcode"
// // // // // // // // // // // // // // // // // // // s = s.split('')
// // // // // // // // // // // // // // // // // // // let map = new Map()
// // // // // // // // // // // // // // // // // // // s.forEach(element => {
// // // // // // // // // // // // // // // // // // //     if (map.has(element)) {
// // // // // // // // // // // // // // // // // // //         map.set(element, map.get(element) + 1)
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else {
// // // // // // // // // // // // // // // // // // //         map.set(element, 1)
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // });
// // // // // // // // // // // // // // // // // // // for (let i = 0; i <= s.length-1; i++) {
// // // // // // // // // // // // // // // // // // //     let char = s[i];
// // // // // // // // // // // // // // // // // // //     if (map.get(char) === 1) {
// // // // // // // // // // // // // // // // // // //         return i
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(s.split('').sort());


// // // // // // // // // // // // // // // // // // // let s =
// // // // // // // // // // // // // // // // // // // "badc"
// // // // // // // // // // // // // // // // // // // let t =
// // // // // // // // // // // // // // // // // // // "baba"
// // // // // // // // // // // // // // // // // // // if(s.length != t.length){
// // // // // // // // // // // // // // // // // // //     console.log('false');

// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // s = s.split("")
// // // // // // // // // // // // // // // // // // // t = t.split("")
// // // // // // // // // // // // // // // // // // // let map = new Map
// // // // // // // // // // // // // // // // // // // s.forEach((element, index) => {
// // // // // // // // // // // // // // // // // // //     if (map.has(element)) {
// // // // // // // // // // // // // // // // // // //         map.set(element, map.get(element) + t[index])
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else {
// // // // // // // // // // // // // // // // // // //         map.set(element, t[index])
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // });
// // // // // // // // // // // // // // // // // // // console.log(map)
// // // // // // // // // // // // // // // // // // // map.forEach((key, value) => {
// // // // // // // // // // // // // // // // // // //     key = key.split('')
// // // // // // // // // // // // // // // // // // //     if (key.length >= 2 && !key.every(elem => elem === key[0])){
// // // // // // // // // // // // // // // // // // //         console.log('false');

// // // // // // // // // // // // // // // // // // //     }


// // // // // // // // // // // // // // // // // // // });
// // // // // // // // // // // // // // // // // // // console.log('true');

// // // // // // // // // // // // // // // // // // s = "paper", t = "title"
// // // // // // // // // // // // // // // // // // // s = "foo", t = "bar"
// // // // // // // // // // // // // // // // // // // if (s.length != t.length) {
// // // // // // // // // // // // // // // // // // //     console.log('false')
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // else {

// // // // // // // // // // // // // // // // // // //     let sm = new Map()
// // // // // // // // // // // // // // // // // // //     let tm = new Map()
// // // // // // // // // // // // // // // // // // //     for (let i = 0; i <= s.length - 1; i++) {
// // // // // // // // // // // // // // // // // // //         chars = s[i]
// // // // // // // // // // // // // // // // // // //         chart = t[i]
// // // // // // // // // // // // // // // // // // //         if (sm.has(chars) && sm.get(chars) !== chart) {
// // // // // // // // // // // // // // // // // // //             console.log('false');
// // // // // // // // // // // // // // // // // // //         }

// // // // // // // // // // // // // // // // // // //         if (tm.has(chart) && tm.get(chart) !== chars) {
// // // // // // // // // // // // // // // // // // //             console.log('false');

// // // // // // // // // // // // // // // // // // //         }


// // // // // // // // // // // // // // // // // // //         sm.set(chars, chart)
// // // // // // // // // // // // // // // // // // //         tm.set(chart, chars)
// // // // // // // // // // // // // // // // // // //         console.log(sm)
// // // // // // // // // // // // // // // // // // //         console.log(tm)

// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     console.log('true')
// // // // // // // // // // // // // // // // // // // }

// // // // // // // // // // // // // // // // // // // num = 38
// // // // // // // // // // // // // // // // // // // let a = 0
// // // // // // // // // // // // // // // // // // // b = 0
// // // // // // // // // // // // // // // // // // // let arr = []
// // // // // // // // // // // // // // // // // // // numarray = num.toString().split('')
// // // // // // // // // // // // // // // // // // // // console.log(numString)
// // // // // // // // // // // // // // // // // // // while(numarray.length !== 1){


// // // // // // // // // // // // // // // // // // //     num = numarray.reduce((acc, curr) => Number(acc )+ Number(curr), 0)
// // // // // // // // // // // // // // // // // // //     numarray = num.toString().split('')
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(num)
// // // // // // // // // // // // // // // // // // // digits = num.toString().split('')
// // // // // // // // // // // // // // // // // // // if (digits.length == 1) {
// // // // // // // // // // // // // // // // // // //     console.log(num)
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // else {
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < array.length; i++) {

// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // //     while (digits.length != 1) {
// // // // // // // // // // // // // // // // // // //         a = Number(digits[j]) + a
// // // // // // // // // // // // // // // // // // //         j++
// // // // // // // // // // // // // // // // // // //         arr.push(a)
// // // // // // // // // // // // // // // // // // //         if(arr.length >=2){ 
// // // // // // // // // // // // // // // // // // //             digits = arr
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //         else{
// // // // // // // // // // // // // // // // // // //             console.log("true")
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     console.log(a)

// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // nums = [1,1,2,2,2,3]
// // // // // // // // // // // // // // // // // // // nums = [2,3,1,3,2]

// // // // // // // // // // // // // // // // // // // let map = new Map()
// // // // // // // // // // // // // // // // // // // let count = 0
// // // // // // // // // // // // // // // // // // // nums.forEach((element)=>{
// // // // // // // // // // // // // // // // // // //     if(map.has(element)){
// // // // // // // // // // // // // // // // // // //         map.set(element,map.get(element)+1)
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else{
// // // // // // // // // // // // // // // // // // //         map.set(element,1)
// // // // // // // // // // // // // // // // // // //         count++
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // })
// // // // // // // // // // // // // // // // // // // // console.log(count)
// // // // // // // // // // // // // // // // // // // let arr = []
// // // // // // // // // // // // // // // // // // // let entries = [...map.entries()];

// // // // // // // // // // // // // // // // // // // // Step 3: Sort entries based on values (frequencies) in ascending order
// // // // // // // // // // // // // // // // // // // let k = 1
// // // // // // // // // // // // // // // // // // // entries.sort((a, b) => a[1] - b[1]);
// // // // // // // // // // // // // // // // // // // console.log(entries)
// // // // // // // // // // // // // // // // // // // entries.forEach(([key, value]) => {
// // // // // // // // // // // // // // // // // // //     for (let i = 0; i < value; i++) {
// // // // // // // // // // // // // // // // // // //         arr.push(key);
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // });
// // // // // // // // // // // // // // // // // // // console.log(arr)





// // // // // // // // // // // // // // // // // // // let a = parseInt(num1)
// // // // // // // // // // // // // // // // // // // let b = parseInt(num2)
// // // // // // // // // // // // // // // // // // // sum = a+b
// // // // // // // // // // // // // // // // // // // console.log(sum.toString())

// // // // // // // // // // // // // // // // // // // num1 =
// // // // // // // // // // // // // // // // // // // "9333852702227987"
// // // // // // // // // // // // // // // // // // // num2 =
// // // // // // // // // // // // // // // // // // // "85731737104263"
// // // // // // // // // // // // // // // // // // // num1 = "11", num2 = "123"
// // // // // // // // // // // // // // // // // // // let a = BigInt(num1)
// // // // // // // // // // // // // // // // // // // let b = BigInt(num2)
// // // // // // // // // // // // // // // // // // // let sum = a+b
// // // // // // // // // // // // // // // // // // // // console.log(type)
// // // // // // // // // // // // // // // // // // // sum = sum.toString().split('')
// // // // // // // // // // // // // // // // // // // let p = sum.filter((value)=>{
// // // // // // // // // // // // // // // // // // //     return value !='n'
// // // // // // // // // // // // // // // // // // // })
// // // // // // // // // // // // // // // // // // // console.log(p.join(''))




// // // // // // // // // // // // // // // // // // // nums = [1, 1, 0, 1, 1, 1]
// // // // // // // // // // // // // // // // // // // nums = [1, 0, 1, 1, 0, 1]
// // // // // // // // // // // // // // // // // // // nums = [0, 0]
// // // // // // // // // // // // // // // // // // // let arr = []
// // // // // // // // // // // // // // // // // // // let count = 0
// // // // // // // // // // // // // // // // // // // if (nums.length == 1) {
// // // // // // // // // // // // // // // // // // //     console.log(nums)
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // for (let i = 0; i <= nums.length - 1; i++) {
// // // // // // // // // // // // // // // // // // //     if (nums[i] == 1) {
// // // // // // // // // // // // // // // // // // //         count++
// // // // // // // // // // // // // // // // // // //         arr.push(count)
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else {
// // // // // // // // // // // // // // // // // // //         count = 0
// // // // // // // // // // // // // // // // // // //     }

// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // if (arr.length == 0) {
// // // // // // // // // // // // // // // // // // //     console.log('0')
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // else {
// // // // // // // // // // // // // // // // // // //     console.log(Math.max(...arr))
// // // // // // // // // // // // // // // // // // // }

// // // // // // // // // // // // // // // // // // // nums1 = [4, 1, 2], nums2 = [1, 3, 4, 2]
// // // // // // // // // // // // // // // // // // // nums1 = [2, 4], nums2 = [1, 2, 3, 4]
// // // // // // // // // // // // // // // // // // // nums1 = [1, 3, 5, 2, 4]
// // // // // // // // // // // // // // // // // // // nums2 =[6, 5, 4, 3, 2, 1, 7]
// // // // // // // // // // // // // // // // // // // let count = 0
// // // // // // // // // // // // // // // // // // // let i = 0
// // // // // // // // // // // // // // // // // // // let j = 0
// // // // // // // // // // // // // // // // // // // let arr = []
// // // // // // // // // // // // // // // // // // // while (i <= nums1.length - 1) {


// // // // // // // // // // // // // // // // // // //     if (nums1[i] == nums2[j]) {
// // // // // // // // // // // // // // // // // // //         let k = j
// // // // // // // // // // // // // // // // // // //         while (k <= nums2.length - 1) {
// // // // // // // // // // // // // // // // // // //             if (nums2[k + 1] > nums2[k]) {
// // // // // // // // // // // // // // // // // // //                 arr.push(nums2[k + 1])
// // // // // // // // // // // // // // // // // // //                 count = 0
// // // // // // // // // // // // // // // // // // //                 break
// // // // // // // // // // // // // // // // // // //             }
// // // // // // // // // // // // // // // // // // //             k++;
// // // // // // // // // // // // // // // // // // //             count++
// // // // // // // // // // // // // // // // // // //         }

// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     if (count  > 0) {
// // // // // // // // // // // // // // // // // // //         arr.push(-1)
// // // // // // // // // // // // // // // // // // //         count = 0
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     if (j == nums2.length - 1) {
// // // // // // // // // // // // // // // // // // //         i++
// // // // // // // // // // // // // // // // // // //     }

// // // // // // // // // // // // // // // // // // //     if (j == nums2.length - 1) {
// // // // // // // // // // // // // // // // // // //         j = 0
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else {
// // // // // // // // // // // // // // // // // // //         j++
// // // // // // // // // // // // // // // // // // //     }

// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(arr)



// // // // // // // // // // // // // // // // // // // nums = [3, 1, 2, 4]
// // // // // // // // // // // // // // // // // // // nums = [4,2,5,7]
// // // // // // // // // // // // // // // // // // // nums.sort()
// // // // // // // // // // // // // // // // // // // let arr = []
// // // // // // // // // // // // // // // // // // // for (let i = 0; i <= nums.length - 1; i++) {
// // // // // // // // // // // // // // // // // // //     if (nums[i] % 2 == 0) {
// // // // // // // // // // // // // // // // // // //         if(i%2==0){
// // // // // // // // // // // // // // // // // // //             arr.splice(i,1,i)
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //         // arr.unshift(nums[i])
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else {

// // // // // // // // // // // // // // // // // // //         arr.push(nums[i])
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(arr)

// // // // // // // // // // // // // // // // // // // nums = [4, 2, 5, 7]
// // // // // // // // // // // // // // // // // // // let arr = []
// // // // // // // // // // // // // // // // // // // let i = 0
// // // // // // // // // // // // // // // // // // // let j = nums.length - 1
// // // // // // // // // // // // // // // // // // // while (i <= j) {
// // // // // // // // // // // // // // // // // // //     if (nums[i] % 2 == 0) {
// // // // // // // // // // // // // // // // // // //         if(i%2==0){
// // // // // // // // // // // // // // // // // // //             arr.push(nums[i])
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //         else{
// // // // // // // // // // // // // // // // // // //             j = i+1
// // // // // // // // // // // // // // // // // // //             arr.push(nums[j])
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }


// // // // // // // // // // // // // // // // // // // arr = [1, 0, 2, 3, 0, 4, 5, 0]
// // // // // // // // // // // // // // // // // // // let array = []
// // // // // // // // // // // // // // // // // // // for (let i = 0; i <= arr.length - 1; i++) {
// // // // // // // // // // // // // // // // // // //     if(arr[i] == 0){
// // // // // // // // // // // // // // // // // // //         array.push(arr[i])
// // // // // // // // // // // // // // // // // // //         array.push(arr[i]) 
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else{
// // // // // // // // // // // // // // // // // // //         array.push(arr[i])
// // // // // // // // // // // // // // // // // // //     }

// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // [1,0,0,2,3,0,0,4]
// // // // // // // // // // // // // // // // // // // console.log(array)

// // // // // // // // // // // // // // // // // // // n = 14
// // // // // // // // // // // // // // // // // // // let a = [2, 3, 5]
// // // // // // // // // // // // // // // // // // // for (let i = 0; i <= a.length - 1; i++) {
// // // // // // // // // // // // // // // // // // //     let j = 0
// // // // // // // // // // // // // // // // // // //     if (a[i] * a[j] != n) {
// // // // // // // // // // // // // // // // // // //         j++
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else {
// // // // // // // // // // // // // // // // // // //         console.log('true')
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log('false')

// // // // // // // // // // // // // // // // // // // let count = 101
// // // // // // // // // // // // // // // // // // // let decimalValue = BigInt('0b' + count); // '0b' prefix indicates binary format
// // // // // // // // // // // // // // // // // // // decimalValue = decimalValue.toString().split('')
// // // // // // // // // // // // // // // // // // // let p = decimalValue.filter((value)=>{
// // // // // // // // // // // // // // // // // // //     return value != 'n'
// // // // // // // // // // // // // // // // // // // })
// // // // // // // // // // // // // // // // // // // console.log(p.join(""))

// // // // // // // // // // // // // // // // // // // nums = [12, 345, 2, 6, 7896]
// // // // // // // // // // // // // // // // // // // let count = 0
// // // // // // // // // // // // // // // // // // // for (let i = 0; i <= nums.length - 1; i++) {
// // // // // // // // // // // // // // // // // // //     if(nums[i].toString().length % 2 == 0){
// // // // // // // // // // // // // // // // // // //         count++
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(count)


// // // // // // // // // // // // // // // // // // // n = 5
// // // // // // // // // // // // // // // // // // // let count = 0
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < n; i++) {
// // // // // // // // // // // // // // // // // // //     if(i%2==0){
// // // // // // // // // // // // // // // // // // //         console.log(Math.floor(i-n/2))
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else{
// // // // // // // // // // // // // // // // // // //         console.log(Math.floor(2*i-n/2))
// // // // // // // // // // // // // // // // // // //     }

// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(count)
// // // // // // // // // // // // // // // // // // // const alphabetToNumber = {
// // // // // // // // // // // // // // // // // // //     '1': 'a', '2': 'b', '3': 'c', '4': 'd',
// // // // // // // // // // // // // // // // // // //     '5': 'e', '6': 'f', '7': 'g', '8': 'h',
// // // // // // // // // // // // // // // // // // //     '9': 'i', '10': 'j', '11': 'k', '12': 'l',
// // // // // // // // // // // // // // // // // // //     '13': 'm', '14': 'n', '15': 'o', '16': 'p',
// // // // // // // // // // // // // // // // // // //     '17': 'q', '18': 'r', '19': 's', '20': 't',
// // // // // // // // // // // // // // // // // // //     '21': 'u', '22': 'v', '23': 'w', '24': 'x',
// // // // // // // // // // // // // // // // // // //     '25': 'y', '26': 'z'
// // // // // // // // // // // // // // // // // // // }

// // // // // // // // // // // // // // // // // // // let s2 = "1326#";
// // // // // // // // // // // // // // // // // // // s2 = s2.split('')
// // // // // // // // // // // // // // // // // // // let i = s2.length - 1
// // // // // // // // // // // // // // // // // // // let count = ''
// // // // // // // // // // // // // // // // // // // let arr = []
// // // // // // // // // // // // // // // // // // // while (i >= 0) {
// // // // // // // // // // // // // // // // // // //     if (s2[i] == '#') {
// // // // // // // // // // // // // // // // // // //         i--;
// // // // // // // // // // // // // // // // // // //         count = s2[i] + count
// // // // // // // // // // // // // // // // // // //         i--;
// // // // // // // // // // // // // // // // // // //         count = s2[i] + count
// // // // // // // // // // // // // // // // // // //         arr.push(alphabetToNumber[count])
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else if (s2[i] != '#') {
// // // // // // // // // // // // // // // // // // //         count = ''
// // // // // // // // // // // // // // // // // // //         count = s2[i] + count
// // // // // // // // // // // // // // // // // // //         arr.push(alphabetToNumber[count])
// // // // // // // // // // // // // // // // // // //     } 
// // // // // // // // // // // // // // // // // // //     i--

// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(arr.reverse().join(''))


// // // // // // // // // // // // // // // // // // // let max = num
// // // // // // // // // // // // // // // // // // // num = num.toString().split('')
// // // // // // // // // // // // // // // // // // // let copy = [...num]
// // // // // // // // // // // // // // // // // // // let another;

// // // // // // // // // // // // // // // // // // // for (let i = 0; i <= num.length - 1; i++) {
// // // // // // // // // // // // // // // // // // //     if (num[i] == '9') {
// // // // // // // // // // // // // // // // // // //         copy = [...num]
// // // // // // // // // // // // // // // // // // //         copy.splice(i, 1, '6')
// // // // // // // // // // // // // // // // // // //         if (parseInt(copy.join('')) > max) {
// // // // // // // // // // // // // // // // // // //             max = copy
// // // // // // // // // // // // // // // // // // //         }

// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else if (num[i] == '6') {
// // // // // // // // // // // // // // // // // // //         copy = [...num]
// // // // // // // // // // // // // // // // // // //         copy.splice(i, 1, '9')
// // // // // // // // // // // // // // // // // // //         if (parseInt(copy.join('')) > max) {
// // // // // // // // // // // // // // // // // // //             max = copy
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // return parseInt(max.join(''))
// // // // // // // // // // // // // // // // // // // num = 9996
// // // // // // // // // // // // // // // // // // // let num = 9669
// // // // // // // // // // // // // // // // // // // var maximum69Number = function (num) {
// // // // // // // // // // // // // // // // // // //     let max = num
// // // // // // // // // // // // // // // // // // //     num = num.toString().split('')
// // // // // // // // // // // // // // // // // // //     let copy = [...num]

// // // // // // // // // // // // // // // // // // //     for (let i = 0; i <= num.length - 1; i++) {
// // // // // // // // // // // // // // // // // // //         if (num[i] == '9') {
// // // // // // // // // // // // // // // // // // //             copy = [...num]
// // // // // // // // // // // // // // // // // // //             copy.splice(i, 1, '6')
// // // // // // // // // // // // // // // // // // //             if (parseInt(copy.join('')) > max) {
// // // // // // // // // // // // // // // // // // //                 max = copy
// // // // // // // // // // // // // // // // // // //             }

// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //         else if (num[i] == '6') {
// // // // // // // // // // // // // // // // // // //             copy = [...num]
// // // // // // // // // // // // // // // // // // //             copy.splice(i, 1, '9')
// // // // // // // // // // // // // // // // // // //             if (parseInt(copy.join('')) > max) {
// // // // // // // // // // // // // // // // // // //                 max = copy
// // // // // // // // // // // // // // // // // // //             }
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     return max.toString().split(',').join('')
// // // // // // // // // // // // // // // // // // // };
// // // // // // // // // // // // // // // // // // // let p = maximum69Number(9669)
// // // // // // // // // // // // // // // // // // // console.log(p)


// // // // // // // // // // // // // // // // // // // s = "baabb"

// // // // // // // // // // // // // // // // // // // s = s.split("")
// // // // // // // // // // // // // // // // // // // console.log(s)
// // // // // // // // // // // // // // // // // // // let l = 0
// // // // // // // // // // // // // // // // // // // let r = s.length - 1
// // // // // // // // // // // // // // // // // // // count = 0
// // // // // // // // // // // // // // // // // // // while(l<r){
// // // // // // // // // // // // // // // // // // //     if(s[l] != s[r]){
// // // // // // // // // // // // // // // // // // //         l++
// // // // // // // // // // // // // // // // // // //         count++
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else{
// // // // // // // // // // // // // // // // // // //         l++
// // // // // // // // // // // // // // // // // // //         r--
// // // // // // // // // // // // // // // // // // //         count++
// // // // // // // // // // // // // // // // // // //     }

// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(count)

// // // // // // // // // // // // // // // // // // // nums = [8, 1, 2, 2, 3]
// // // // // // // // // // // // // // // // // // // nums = [7, 7, 7, 7]
// // // // // // // // // // // // // // // // // // // nums = [6, 5, 4, 8]
// // // // // // // // // // // // // // // // // // // let count = 0
// // // // // // // // // // // // // // // // // // // let zero = -1
// // // // // // // // // // // // // // // // // // // let arr = []
// // // // // // // // // // // // // // // // // // // min = Math.min(...nums)
// // // // // // // // // // // // // // // // // // // index = nums.indexOf(min)
// // // // // // // // // // // // // // // // // // // for (let i = 0; i <= nums.length - 1; i++) {
// // // // // // // // // // // // // // // // // // //     count = 0
// // // // // // // // // // // // // // // // // // //     for (let j = 0; j <= nums.length - 1; j++) {
// // // // // // // // // // // // // // // // // // //         if (nums[i] > nums[j] && i !== j) {
// // // // // // // // // // // // // // // // // // //             count++
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     if (i != index) {
// // // // // // // // // // // // // // // // // // //         arr.push(count)
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else {
// // // // // // // // // // // // // // // // // // //         arr.push(0)
// // // // // // // // // // // // // // // // // // //     }

// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(arr)
// // // // // // // // // // // // // // // // // // // nums = [7, 7, 7, 7];
// // // // // // // // // // // // // // // // // // // nums =
// // // // // // // // // // // // // // // // // // // [6,3,7,6,9]
// // // // // // // // // // // // // // // // // // // let count = 0;
// // // // // // // // // // // // // // // // // // // let arr = [];
// // // // // // // // // // // // // // // // // // // let min = Math.min(...nums);
// // // // // // // // // // // // // // // // // // // let index = nums.indexOf(min);

// // // // // // // // // // // // // // // // // // // for (let i = 0; i < nums.length; i++) {
// // // // // // // // // // // // // // // // // // //     count = 0; // Reset count for each element
// // // // // // // // // // // // // // // // // // //     for (let j = 0; j < nums.length; j++) {
// // // // // // // // // // // // // // // // // // //         if (nums[i] > nums[j] && i !== j) {
// // // // // // // // // // // // // // // // // // //             count++;
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     if (i !== index) { // Exclude the minimum element from counting
// // // // // // // // // // // // // // // // // // //         arr.push(count);
// // // // // // // // // // // // // // // // // // //     } else {
// // // // // // // // // // // // // // // // // // //         arr.push(0); // Push 0 for the index of the minimum element
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(arr)

// // // // // // // // // // // // // // // // // // // words = ["mass", "as", "hero", "superhero"]
// // // // // // // // // // // // // // // // // // // let j = 1
// // // // // // // // // // // // // // // // // // // let i = 0
// // // // // // // // // // // // // // // // // // // let arr = []
// // // // // // // // // // // // // // // // // // // let index;
// // // // // // // // // // // // // // // // // // // while (i < words.length - 1) {

// // // // // // // // // // // // // // // // // // //     if(words[i].length > words[j].length && i!=j){
// // // // // // // // // // // // // // // // // // //         index = words[i].indexOf(words[j])
// // // // // // // // // // // // // // // // // // //         if (index >= 0) {
// // // // // // // // // // // // // // // // // // //             arr.push(words[j])
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     if(words[i].length < words[j].length && i!=j){
// // // // // // // // // // // // // // // // // // //         index = words[j].indexOf(words[i])
// // // // // // // // // // // // // // // // // // //         if (index >= 0) {
// // // // // // // // // // // // // // // // // // //             arr.push(words[i])
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     if (j == words.length - 1) {
// // // // // // // // // // // // // // // // // // //         i++
// // // // // // // // // // // // // // // // // // //         j = 0
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else{
// // // // // // // // // // // // // // // // // // //         j++
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // let p = arr.filter((value,index)=>{
// // // // // // // // // // // // // // // // // // //     return arr.indexOf(value) == index
// // // // // // // // // // // // // // // // // // // })
// // // // // // // // // // // // // // // // // // // console.log(p)

// // // // // // // // // // // // // // // // // // // words = ["leetcode", "et", "code"]
// // // // // // // // // // // // // // // // // // // let result = new Set()
// // // // // // // // // // // // // // // // // // // for (let i = 0; i <= words.length - 1; i++) {
// // // // // // // // // // // // // // // // // // //     newword = words[i]
// // // // // // // // // // // // // // // // // // //     for (let j = 0; j <= words.length - 1; j++) {
// // // // // // // // // // // // // // // // // // //         if (i != j && newword.includes(words[j])) {
// // // // // // // // // // // // // // // // // // //             result.add(words[j])
// // // // // // // // // // // // // // // // // // //         }

// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // return Array.from(result)

// // // // // // // // // // // // // // // // // // // nums = [0,3,7,2,5,8,4,6,0,1]

// // // // // // // // // // // // // // // // // // // // Iterate through nums to count elements with at least one predecessor
// // // // // // // // // // // // // // // // // // // let set = new Set(nums);
// // // // // // // // // // // // // // // // // // // let count = 0;

// // // // // // // // // // // // // // // // // // // // Iterate through nums to count elements with exactly one predecessor
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < nums.length; i++) {
// // // // // // // // // // // // // // // // // // //     let current = nums[i];
// // // // // // // // // // // // // // // // // // //     if (set.has(current - 1) && !set.has(current - 2)) {
// // // // // // // // // // // // // // // // // // //         count++;
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(count)
// // // // // // // // // // // // // // // // // // // // for (let i = 0; i <= nums.length - 1; i++) {
// // // // // // // // // // // // // // // // // // // //     if(map.has(nums[i] -1)){
// // // // // // // // // // // // // // // // // // // //         count++
// // // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // // console.log(count)



// // // // // // // // // // // // // // // // // // // s = "a0b1c2"
// // // // // // // // // // // // // // // // // // // s = "covid2019"
// // // // // // // // // // // // // // // // // // // let numbers = s.replace(/[^\d]/g, ''); 
// // // // // // // // // // // // // // // // // // // let characters = s.replace(/\d/g, ''); 
// // // // // // // // // // // // // // // // // // // numbers = numbers.split('')
// // // // // // // // // // // // // // // // // // // characters = characters.split("")
// // // // // // // // // // // // // // // // // // // if(characters == ''){
// // // // // // // // // // // // // // // // // // //     console.log('false')
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // if(numbers == ''){
// // // // // // // // // // // // // // // // // // //     console.log('false')
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // if(s.length%2==0){
// // // // // // // // // // // // // // // // // // //     half = (characters.length + numbers.length )/2
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // else{
// // // // // // // // // // // // // // // // // // //     half = (characters.length + numbers.length )/2
// // // // // // // // // // // // // // // // // // //     half = half+1
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // let count = ''
// // // // // // // // // // // // // // // // // // // let p = ''
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < half; i++) {
// // // // // // // // // // // // // // // // // // //     num = numbers[i]
// // // // // // // // // // // // // // // // // // //     str = characters[i]
// // // // // // // // // // // // // // // // // // //     count = num + str + count
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(count)







// // // // // // // // // // // // // // // // // // // s = "abdc12"
// // // // // // // // // // // // // // // // // // // s = "covid2019";
// // // // // // // // // // // // // // // // // // // s = 'j'

// // // // // // // // // // // // // // // // // // // let numbers = s.replace(/[^\d]/g, '').split('')
// // // // // // // // // // // // // // // // // // // let characters = s.replace(/\d/g, '').split(''); 



// // // // // // // // // // // // // // // // // // // if (characters == '') {
// // // // // // // // // // // // // // // // // // //     console.log('false');
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // if (numbers == '') {
// // // // // // // // // // // // // // // // // // //     console.log('false');
// // // // // // // // // // // // // // // // // // // }

// // // // // // // // // // // // // // // // // // // let half = Math.ceil(s.length / 2);


// // // // // // // // // // // // // // // // // // // let count = '';

// // // // // // // // // // // // // // // // // // // // Iterate up to the smaller of the two lengths
// // // // // // // // // // // // // // // // // // // for (let i = 0;i<s.length;i++) {
// // // // // // // // // // // // // // // // // // //     if(characters.length > numbers.length){
// // // // // // // // // // // // // // // // // // //         if(i<characters.length){
// // // // // // // // // // // // // // // // // // //             count += characters[i]
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //         if(i<numbers.length){
// // // // // // // // // // // // // // // // // // //             count += numbers[i]
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else{
// // // // // // // // // // // // // // // // // // //         if(i<numbers.length){
// // // // // // // // // // // // // // // // // // //             count += numbers[i]
// // // // // // // // // // // // // // // // // // //         }if(i<characters.length){
// // // // // // // // // // // // // // // // // // //             count += characters[i]
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // if(numbers.includes(count[count.length-1]) && (numbers.includes(count[count.length-2]))){
// // // // // // // // // // // // // // // // // // //     console.log('false');

// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // if (characters.includes(count[count.length-1]) && (characters.includes(count[count.length-2]))) {
// // // // // // // // // // // // // // // // // // //     console.log('false');
// // // // // // // // // // // // // // // // // // // }

// // // // // // // // // // // // // // // // // // // console.log(count)

// // // // // // // // // // // // // // // // // // // nums = [1, 2, 3, 1, 1, 3]
// // // // // // // // // // // // // // // // // // // // nums = [1,1,1,1]
// // // // // // // // // // // // // // // // // // // // nums = [1,2,3]

// // // // // // // // // // // // // // // // // // // count = 0
// // // // // // // // // // // // // // // // // // // for (let i = 0; i <= nums.length - 1; i++) {
// // // // // // // // // // // // // // // // // // //     for (let j = 0; j <= nums.length - 1; j++) {
// // // // // // // // // // // // // // // // // // //         if(nums[i] == nums[j] && i!=j && i<j){
// // // // // // // // // // // // // // // // // // //             count++
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(count)
// // // // // // // // // // // // // // // // // // // const arr = [5, 4, 3, 2, 1];
// // // // // // // // // // // // // // // // // // // var sortArray = function (nums) {
// // // // // // // // // // // // // // // // // // //     return mergeSort(nums)
// // // // // // // // // // // // // // // // // // //     function mergeSort(arr) {
// // // // // // // // // // // // // // // // // // //         if (arr.length <= 1) {
// // // // // // // // // // // // // // // // // // //             return arr;
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //         //keep splitting it, then sort it
// // // // // // // // // // // // // // // // // // //         const mid = Math.floor(arr.length / 2);
// // // // // // // // // // // // // // // // // // //         const left = mergeSort(arr.slice(0, mid));
// // // // // // // // // // // // // // // // // // //         const right = mergeSort(arr.slice(mid));
// // // // // // // // // // // // // // // // // // //         return merge(left, right);
// // // // // // // // // // // // // // // // // // //     }

// // // // // // // // // // // // // // // // // // //     function merge(arr1, arr2) {
// // // // // // // // // // // // // // // // // // //         let i = 0;
// // // // // // // // // // // // // // // // // // //         let j = 0;
// // // // // // // // // // // // // // // // // // //         const ans = [];
// // // // // // // // // // // // // // // // // // //         while (i < arr1.length && j < arr2.length) {
// // // // // // // // // // // // // // // // // // //             if (arr1[i] < arr2[j]) {
// // // // // // // // // // // // // // // // // // //                 ans.push(arr1[i])
// // // // // // // // // // // // // // // // // // //                 i++
// // // // // // // // // // // // // // // // // // //             } else {
// // // // // // // // // // // // // // // // // // //                 ans.push(arr2[j])
// // // // // // // // // // // // // // // // // // //                 j++
// // // // // // // // // // // // // // // // // // //             }
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //         while (j < arr2.length) {
// // // // // // // // // // // // // // // // // // //             ans.push(arr2[j]);
// // // // // // // // // // // // // // // // // // //             j++
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //         while (i < arr1.length) {
// // // // // // // // // // // // // // // // // // //             ans.push(arr1[i]);
// // // // // // // // // // // // // // // // // // //             i++
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //         return ans;
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // };
// // // // // // // // // // // // // // // // // // // let p = sortArray([5,4,3,2,1])
// // // // // // // // // // // // // // // // // // // console.log(p)

// // // // // // // // // // // // // // // // // // // n = 4421
// // // // // // // // // // // // // // // // // // // n = n.toString().split('')
// // // // // // // // // // // // // // // // // // // mult = 1
// // // // // // // // // // // // // // // // // // // sum = 0
// // // // // // // // // // // // // // // // // // // for (let i = 0; i <= n.length - 1; i++) {
// // // // // // // // // // // // // // // // // // //     mult = mult * Number(n[i])
// // // // // // // // // // // // // // // // // // //     sum = sum + Number(n[i])
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // sub = mult - sum
// // // // // // // // // // // // // // // // // // // console.log(sub)

// // // // // // // // // // // // // // // // // // // nums =
// // // // // // // // // // // // // // // // // // // [42,39]
// // // // // // // // // // // // // // // // // // // nums = [1, 1, 2, 3]
// // // // // // // // // // // // // // // // // // // nums = [1, 2, 3, 4]
// // // // // // // // // // // // // // // // // // // let i = 0
// // // // // // // // // // // // // // // // // // // let j = 1
// // // // // // // // // // // // // // // // // // // let freq = 0
// // // // // // // // // // // // // // // // // // // let arr = []
// // // // // // // // // // // // // // // // // // // while (j <= nums.length - 1) {
// // // // // // // // // // // // // // // // // // //     let freq = nums[i]
// // // // // // // // // // // // // // // // // // //     if (freq == nums[j]) {
// // // // // // // // // // // // // // // // // // //         freq = 1
// // // // // // // // // // // // // // // // // // //         while (freq <= nums[j]) {
// // // // // // // // // // // // // // // // // // //             arr.push(nums[j])
// // // // // // // // // // // // // // // // // // //             freq++
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else {

// // // // // // // // // // // // // // // // // // //         freq = nums[i]
// // // // // // // // // // // // // // // // // // //         while (freq != 0) {
// // // // // // // // // // // // // // // // // // //             arr.push(nums[j])
// // // // // // // // // // // // // // // // // // //             freq--
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     i = i + 2
// // // // // // // // // // // // // // // // // // //     j = j + 2
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(arr)



// // // // // // // // // // // // // // // // // // // num = 14
// // // // // // // // // // // // // // // // // // // let count = 0
// // // // // // // // // // // // // // // // // // // while (num != 0) {
// // // // // // // // // // // // // // // // // // //     if (num % 2 == 0) {
// // // // // // // // // // // // // // // // // // //         num = num / 2
// // // // // // // // // // // // // // // // // // //         count++
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     if (num % 2 != 0) {
// // // // // // // // // // // // // // // // // // //         num = num - 1
// // // // // // // // // // // // // // // // // // //         count++
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(count)


// // // // // // // // // // // // // // // // // // // let num = [0, 1, 2, 3, 4, 5, 6, 7, 8];
// // // // // // // // // // // // // // // // // // // // let arr1 = []
// // // // // // // // // // // // // // // // // // // // let s2;
// // // // // // // // // // // // // // // // // // // // for (let i = 0; i <= arr.length - 1; i++) {
// // // // // // // // // // // // // // // // // // // //     s1 = BigInt(arr[i]).toString(2)
// // // // // // // // // // // // // // // // // // // //     console.log(s1.toString().split(''))
// // // // // // // // // // // // // // // // // // // //     // for (let j = 1; j < array.length; j++) {
// // // // // // // // // // // // // // // // // // // //     //     s2 = BigInt(arr[j]).toString(2)


// // // // // // // // // // // // // // // // // // // //     // }
// // // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // // console.log(arr1)
// // // // // // // // // // // // // // // // // // // num.sort((a,b)=>{

// // // // // // // // // // // // // // // // // // //     function countOnes(num) {
// // // // // // // // // // // // // // // // // // //         // Convert number to binary string
// // // // // // // // // // // // // // // // // // //         let binaryString = num.toString(2);
// // // // // // // // // // // // // // // // // // //         // Count '1' bits in the binary string
// // // // // // // // // // // // // // // // // // //         return binaryString.split('1').length - 1;
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     let countA = countOnes(a);
// // // // // // // // // // // // // // // // // // //     let countB = countOnes(b);

// // // // // // // // // // // // // // // // // // //     console.log(countA,countB)
// // // // // // // // // // // // // // // // // // // })
// // // // // // // // // // // // // // // // // // // console.log(num)

// // // // // // // // // // // // // // // // // // // s =
// // // // // // // // // // // // // // // // // // // "bacacccbba"
// // // // // // // // // // // // // // // // // // // s = "abbcccddddeeeeedcba"
// // // // // // // // // // // // // // // // // // // s = "leetcode"
// // // // // // // // // // // // // // // // // // // s =
// // // // // // // // // // // // // // // // // // // "ccbccbb"
// // // // // // // // // // // // // // // // // // // let i = 0
// // // // // // // // // // // // // // // // // // // let j = 1
// // // // // // // // // // // // // // // // // // // let max = 0
// // // // // // // // // // // // // // // // // // // let prev = 0
// // // // // // // // // // // // // // // // // // // while (i <= s.length - 1) {
// // // // // // // // // // // // // // // // // // //     if (s[i] != s[j]) {
// // // // // // // // // // // // // // // // // // //         i++
// // // // // // // // // // // // // // // // // // //         j++
// // // // // // // // // // // // // // // // // // //         prev = 0
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else {
// // // // // // // // // // // // // // // // // // //         prev++
// // // // // // // // // // // // // // // // // // //         prev++
// // // // // // // // // // // // // // // // // // //         if(prev>max){
// // // // // // // // // // // // // // // // // // //           max = prev
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //         j++
// // // // // // // // // // // // // // // // // // //         i++
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(max)
// // // // // // // // // // // // // // // // // // // let stack = []
// // // // // // // // // // // // // // // // // // // s = "abBAcC"
// // // // // // // // // // // // // // // // // // // s = "leEeetcode"
// // // // // // // // // // // // // // // // // // // s = s.toLowerCase()
// // // // // // // // // // // // // // // // // // // s = s.split("")
// // // // // // // // // // // // // // // // // // // let count = 0
// // // // // // // // // // // // // // // // // // // for (let i = 0; i <= s.length - 1; i++) {
// // // // // // // // // // // // // // // // // // //     if (stack[stack.length - 1] == s[i] && stack[stack.length - 1] != null) {
// // // // // // // // // // // // // // // // // // //         count++
// // // // // // // // // // // // // // // // // // //         stack.pop()
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else {
// // // // // // // // // // // // // // // // // // //         // if (stack[stack.length - 1] == stack[stack.length - 2]){
// // // // // // // // // // // // // // // // // // //         //     count++
// // // // // // // // // // // // // // // // // // //         // }
// // // // // // // // // // // // // // // // // // //         stack.push(s[i])
// // // // // // // // // // // // // // // // // // //     }

// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(stack)

// // // // // // // // // // // // // // // // // // // nums = [1, 2, 3, 4, 4, 3, 2, 1], n = 4
// // // // // // // // // // // // // // // // // // // let i = 0
// // // // // // // // // // // // // // // // // // // let arr = []
// // // // // // // // // // // // // // // // // // // for (let j = n; j <= nums.length - 1; j++) {
// // // // // // // // // // // // // // // // // // //     arr.push(nums[i],nums[j])
// // // // // // // // // // // // // // // // // // //     i++

// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(arr)

// // // // // // // // // // // // // // // // // // // s = "codeleet", indices = [4, 5, 6, 7, 0, 2, 1, 3]
// // // // // // // // // // // // // // // // // // // let arr = new Array(s.length)
// // // // // // // // // // // // // // // // // // // for (let i = 0; i <= indices.length - 1; i++) {
// // // // // // // // // // // // // // // // // // //     a = indices[i]
// // // // // // // // // // // // // // // // // // //     arr[a] = s[i]
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(arr)

// // // // // // // // // // // // // // // // // // // nums = [0,1]
// // // // // // // // // // // // // // // // // // // nums = [9, 6, 4, 2, 3, 5, 7, 0, 1]
// // // // // // // // // // // // // // // // // // // nums = [3, 0, 1]
// // // // // // // // // // // // // // // // // // // let map = new Map()
// // // // // // // // // // // // // // // // // // // for (let i = 0; i <= nums.length - 1; i++) {
// // // // // // // // // // // // // // // // // // //     if(map.has(nums[i])){
// // // // // // // // // // // // // // // // // // //         map.set(nums[i],map.get(nums[i])+1)
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else{
// // // // // // // // // // // // // // // // // // //         map.set(nums[i],1)
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // max = Math.max(...nums)
// // // // // // // // // // // // // // // // // // // let p = max;
// // // // // // // // // // // // // // // // // // // for (let i = 0; i <= nums.length; i++) {
// // // // // // // // // // // // // // // // // // //     if(map.has(max)){
// // // // // // // // // // // // // // // // // // //         max = max-1
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else if(max>0){
// // // // // // // // // // // // // // // // // // //         console.log(max)
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else{
// // // // // // // // // // // // // // // // // // //         console.log(p+1)
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log()
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < array.length; i++) {

// // // // // // // // // // // // // // // // // // // }


// // // // // // // // // // // // // // // // // // // n = 2
// // // // // // // // // // // // // // // // // // // let arr = []
// // // // // // // // // // // // // // // // // // // for (let i = 0; i <= n; i++) {
// // // // // // // // // // // // // // // // // // //     p = BigInt(i).toString(2)
// // // // // // // // // // // // // // // // // // //     str = p.split('0').join('').length
// // // // // // // // // // // // // // // // // // //     arr.push(str)
// // // // // // // // // // // // // // // // // // //     p = 0
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // // console.log(arr)

// // // // // // // // // // // // // // // // // // // allowed = "ab"
// // // // // // // // // // // // // // // // // // // words = ["ad", "bd", "aaab", "baa", "badab"]
// // // // // // // // // // // // // // // // // // // allowed = "abc", words = ["a","b","c","ab","ac","bc","abc"]
// // // // // // // // // // // // // // // // // // // allowed = "cad", words = ["cc","acd","b","ba","bac","bad","ac","d"]
// // // // // // // // // // // // // // // // // // // let j = 0
// // // // // // // // // // // // // // // // // // // let count = 0
// // // // // // // // // // // // // // // // // // // let max = 0
// // // // // // // // // // // // // // // // // // // let p;
// // // // // // // // // // // // // // // // // // // for (let i = 0; i <= words.length - 1; i++) {
// // // // // // // // // // // // // // // // // // //     p = words[i].split('')
// // // // // // // // // // // // // // // // // // //     j = 0
// // // // // // // // // // // // // // // // // // //     while (j <= words[i].length) {
// // // // // // // // // // // // // // // // // // //         if (allowed.includes(p[j])) {
// // // // // // // // // // // // // // // // // // //             count++
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //         else if (count == words[i].length) {
// // // // // // // // // // // // // // // // // // //             max = max + 1
// // // // // // // // // // // // // // // // // // //             count = 0
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //         else {
// // // // // // // // // // // // // // // // // // //             count = 0
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //         j++;
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(max)

// // // // // // // // // // // // // // // // // // // nums = [1,2,3,2]
// // // // // // // // // // // // // // // // // // // nums = [1,1,1,1,1]
// // // // // // // // // // // // // // // // // // // nums = [1,2,3,4,5]
// // // // // // // // // // // // // // // // // // // let map = new Map()
// // // // // // // // // // // // // // // // // // // nums.forEach(element => {
// // // // // // // // // // // // // // // // // // //     if(map.has(element)){
// // // // // // // // // // // // // // // // // // //         map.set(element,map.get(element)+1)
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else{
// // // // // // // // // // // // // // // // // // //         map.set(element,1)
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // });
// // // // // // // // // // // // // // // // // // // let sum = 0
// // // // // // // // // // // // // // // // // // // map.forEach((value,key) => {
// // // // // // // // // // // // // // // // // // //     if(value == 1){
// // // // // // // // // // // // // // // // // // //         sum = sum + key
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // });
// // // // // // // // // // // // // // // // // // // console.log(sum)

// // // // // // // // // // // // // // // // // // // let a = {
// // // // // // // // // // // // // // // // // // //     "0": "a",
// // // // // // // // // // // // // // // // // // //     "1": "b",
// // // // // // // // // // // // // // // // // // //     "2": "c",
// // // // // // // // // // // // // // // // // // //     "3": "d",
// // // // // // // // // // // // // // // // // // //     "4": "e",
// // // // // // // // // // // // // // // // // // //     "5": "f",
// // // // // // // // // // // // // // // // // // //     "6": "g",
// // // // // // // // // // // // // // // // // // //     "7": "h",
// // // // // // // // // // // // // // // // // // //     "8": "i",
// // // // // // // // // // // // // // // // // // //     "9": "j",
// // // // // // // // // // // // // // // // // // //     "10": "k",
// // // // // // // // // // // // // // // // // // //     "11": "l",
// // // // // // // // // // // // // // // // // // //     "12": "m",
// // // // // // // // // // // // // // // // // // //     "13": "n",
// // // // // // // // // // // // // // // // // // //     "14": "o",
// // // // // // // // // // // // // // // // // // //     "15": "p",
// // // // // // // // // // // // // // // // // // //     "16": "q",
// // // // // // // // // // // // // // // // // // //     "17": "r",
// // // // // // // // // // // // // // // // // // //     "18": "s",
// // // // // // // // // // // // // // // // // // //     "19": "t",
// // // // // // // // // // // // // // // // // // //     "20": "u",
// // // // // // // // // // // // // // // // // // //     "21": "v",
// // // // // // // // // // // // // // // // // // //     "22": "w",
// // // // // // // // // // // // // // // // // // //     "23": "x",
// // // // // // // // // // // // // // // // // // //     "24": "y",
// // // // // // // // // // // // // // // // // // //     "25": "z"
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // s = s.split('')
// // // // // // // // // // // // // // // // // // // let str = ''
// // // // // // // // // // // // // // // // // // // for (let i = 0; i <= s.length - 1; i++) {
// // // // // // // // // // // // // // // // // // //     if (a[s[i]] == undefined ) {
// // // // // // // // // // // // // // // // // // //         str = str + s[i]
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else {

// // // // // // // // // // // // // // // // // // //         str = str + a[i]
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(str)
// // // // // // // // // // // // // // // // // // // "abbdcfdhe"



// // // // // // // // // // // // // // // // // // // let s4 = "is2 sentence4 This1 a3"
// // // // // // // // // // // // // // // // // // // s4 = "Myself2 Me1 I4 and3"
// // // // // // // // // // // // // // // // // // // let p = s4.split(' ')
// // // // // // // // // // // // // // // // // // // let arr = []



// // // // // // // // // // // // // // // // // // // for (let i = 0; i <= p.length - 1; i++) {
// // // // // // // // // // // // // // // // // // //     v = p[i]
// // // // // // // // // // // // // // // // // // //     num = v[v.length - 1]
// // // // // // // // // // // // // // // // // // //     news = v.split(num).join('')
// // // // // // // // // // // // // // // // // // //     n = Number(num)
// // // // // // // // // // // // // // // // // // //     arr[n - 1] = news
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(arr.join(' '))
// // // // // // // // // // // // // // // // // // // nums = [1,3,2,1]
// // // // // // // // // // // // // // // // // // // let copy = [...nums]
// // // // // // // // // // // // // // // // // // // console.log(nums.concat(copy))


// // // // // // // // // // // // // // // // // // // s2 = "aaabaaaa"
// // // // // // // // // // // // // // // // // // // s2 =
// // // // // // // // // // // // // // // // // // // "aabaabaabaa"
// // // // // // // // // // // // // // // // // // // s2 = "aaabaaaa"
// // // // // // // // // // // // // // // // // // // s = s2.split("")
// // // // // // // // // // // // // // // // // // // let count = 0
// // // // // // // // // // // // // // // // // // // let stack = []
// // // // // // // // // // // // // // // // // // // for (let i = 0; i <= s.length - 1; i++) {
// // // // // // // // // // // // // // // // // // //     if (stack[stack.length - 1] == s[i] && stack[stack.length - 1] != null) {
// // // // // // // // // // // // // // // // // // //       stack.push(s[i])
// // // // // // // // // // // // // // // // // // //         count++
// // // // // // // // // // // // // // // // // // //         if(count>=3){
// // // // // // // // // // // // // // // // // // //             stack.push()
// // // // // // // // // // // // // // // // // // //             stack.pop()
// // // // // // // // // // // // // // // // // // //         }

// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else{
// // // // // // // // // // // // // // // // // // //         stack.push(s[i])
// // // // // // // // // // // // // // // // // // //         if(stack[stack.length-2]!=s[i]){
// // // // // // // // // // // // // // // // // // //           count = 0}
// // // // // // // // // // // // // // // // // // //         count++
// // // // // // // // // // // // // // // // // // //         if(count >=3){
// // // // // // // // // // // // // // // // // // //           count = 0}
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(stack)

// // // // // // // // // // // // // // // // // // // res = ''
// // // // // // // // // // // // // // // // // // // s = "leetcode", k = 2
// // // // // // // // // // // // // // // // // // // let num = 0;
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < s.length; i++) {
// // // // // // // // // // // // // // // // // // //     num += s[i].charCodeAt() - 96; // 'a' -> 1, 'b' -> 2, ..., 'z' -> 26
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // let i = 1
// // // // // // // // // // // // // // // // // // // while (k > 0 && num >= 10) {
// // // // // // // // // // // // // // // // // // //     let sum = 0;
// // // // // // // // // // // // // // // // // // //     let temp = num;
// // // // // // // // // // // // // // // // // // //     while (temp > 0) {
// // // // // // // // // // // // // // // // // // //         sum += temp % 10;
// // // // // // // // // // // // // // // // // // //         temp = Math.floor(temp / 10);
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     num = sum;
// // // // // // // // // // // // // // // // // // //     k--;
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(num)s

// // // // // // // // // // // // // // // // // // // let s1 = '1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1';

// // // // // // // // // // // // // // // // // // // l2 =
// // // // // // // // // // // // // // // // // // // [5,6,4]
// // // // // // // // // // // // // // // // // // // l1 =
// // // // // // // // // // // // // // // // // // // [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1]
// // // // // // // // // // // // // // // // // // // l2 = Number(l2.join(''))
// // // // // // // // // // // // // // // // // // // l1 = Number(l1.join(''))
// // // // // // // // // // // // // // // // // // // console.log(BigInt(l1+l2).toString())
// // // // // // // // // // // // // // // // // // // nums = [-1, 0, 3, 5, 9, 12], target = 0
// // // // // // // // // // // // // // // // // // // let first = 0
// // // // // // // // // // // // // // // // // // // let last = nums.length - 1
// // // // // // // // // // // // // // // // // // // while (first <= last) {
// // // // // // // // // // // // // // // // // // //     mid = Math.floor((first + last) / 2)
// // // // // // // // // // // // // // // // // // //     if (target == nums[mid]) {
// // // // // // // // // // // // // // // // // // //         console.log(mid)
// // // // // // // // // // // // // // // // // // //         break
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else if (target > nums[mid]) {
// // // // // // // // // // // // // // // // // // //         first = (mid + 1)
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else {
// // // // // // // // // // // // // // // // // // //         last = (mid - 1)
// // // // // // // // // // // // // // // // // // //     }

// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log('-1')


// // // // // // // // // // // // // // // // // // // let first = 0
// // // // // // // // // // // // // // // // // // // let nums = [1, 3, 5, 6]
// // // // // // // // // // // // // // // // // // // let target = 2
// // // // // // // // // // // // // // // // // // // let last = nums.length
// // // // // // // // // // // // // // // // // // // while (first < last) {
// // // // // // // // // // // // // // // // // // //     let mid = Math.floor((first + last) / 2)
// // // // // // // // // // // // // // // // // // //     if (target > nums[mid]) {

// // // // // // // // // // // // // // // // // // //         first = mid + 1
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else {
// // // // // // // // // // // // // // // // // // //         last = mid
// // // // // // // // // // // // // // // // // // //     }

// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(first)












// // // // // // // // // // // // // // // // // // // candyType = [1,1,2,3]
// // // // // // // // // // // // // // // // // // // candyType = [1,1,2,2,3,3]
// // // // // // // // // // // // // // // // // // // candyType = [6,6,6,6]
// // // // // // // // // // // // // // // // // // // let map = new Map()
// // // // // // // // // // // // // // // // // // // candyType.forEach(element => {
// // // // // // // // // // // // // // // // // // //     if(map.has(element)){
// // // // // // // // // // // // // // // // // // //         map.set(element,map.get(element)+1)
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else{
// // // // // // // // // // // // // // // // // // //         map.set(element,1)
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // });
// // // // // // // // // // // // // // // // // // // candy = map.size
// // // // // // // // // // // // // // // // // // // allowedcandy = Math.floor(candyType.length/2)
// // // // // // // // // // // // // // // // // // // if(candy>=allowedcandy){
// // // // // // // // // // // // // // // // // // //     console.log(allowedcandy)
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // else{
// // // // // // // // // // // // // // // // // // //     console.log(candy)
// // // // // // // // // // // // // // // // // // // }

// // // // // // // // // // // // // // // // // // // console.log(bigin)
// // // // // // // // // // // // // // // // // // // s = "tree"
// // // // // // // // // // // // // // // // // // // s = "cccaaa"
// // // // // // // // // // // // // // // // // // // s = "Aabb"
// // // // // // // // // // // // // // // // // // // let map = new Map()
// // // // // // // // // // // // // // // // // // // s = s.split('')
// // // // // // // // // // // // // // // // // // // s.forEach(element => {
// // // // // // // // // // // // // // // // // // //     if (map.has(element)) {
// // // // // // // // // // // // // // // // // // //         map.set(element, map.get(element) + 1)
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else {
// // // // // // // // // // // // // // // // // // //         map.set(element, 1)
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // });
// // // // // // // // // // // // // // // // // // // char = map.keys().toArray().reverse()
// // // // // // // // // // // // // // // // // // // map = map.values().toArray().reverse()
// // // // // // // // // // // // // // // // // // // let j = 0
// // // // // // // // // // // // // // // // // // // mapnum = map[j]
// // // // // // // // // // // // // // // // // // // let str = ''
// // // // // // // // // // // // // // // // // // // let count  = 0
// // // // // // // // // // // // // // // // // // // let i = 0
// // // // // // // // // // // // // // // // // // // while(j<mapnum){
// // // // // // // // // // // // // // // // // // //     str = str + char[i]
// // // // // // // // // // // // // // // // // // //     count++
// // // // // // // // // // // // // // // // // // //     j++
// // // // // // // // // // // // // // // // // // //     if(count == mapnum){
// // // // // // // // // // // // // // // // // // //         i++
// // // // // // // // // // // // // // // // // // //         mapnum = map[i]
// // // // // // // // // // // // // // // // // // //         count = 0
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(str)



// // // // // // // // // // // // // // // // // // // dividend = 7, divisor = -3
// // // // // // // // // // // // // // // // // // // const INT_MIN = -2147483648;
// // // // // // // // // // // // // // // // // // // const INT_MAX = 2147483647
// // // // // // // // // // // // // // // // // // // c = Math.trunc(dividend / divisor)
// // // // // // // // // // // // // // // // // // // if (c > -2147483648 && c < 2147483647){

// // // // // // // // // // // // // // // // // // // }

// // // // // // // // // // // // // // // // // // // num = parseInt(s)
// // // // // // // // // // // // // // // // // // // console.log(String.fromCharCode(num + 96))
// // // // // // // // // // // // // // // // // // // s = "12"
// // // // // // // // // // // // // // // // // // // s = s.split("")
// // // // // // // // // // // // // // // // // // // num = parseInt(s)
// // // // // // // // // // // // // // // // // // // for (let i = 0; i <= s.length - 1; i++) {
// // // // // // // // // // // // // // // // // // //     str = String.fromCharCode(num[i] + 96)
// // // // // // // // // // // // // // // // // // //     console.log(str)
// // // // // // // // // // // // // // // // // // //     // if (str != undefined) {
// // // // // // // // // // // // // // // // // // //     //     console.log(str)
// // // // // // // // // // // // // // // // // // //     // }

// // // // // // // // // // // // // // // // // // // }



// // // // // // // // // // // // // // // // // // // let nums = [1, 5, 4, 6]
// // // // // // // // // // // // // // // // // // // // nums = [3,4,5,2]
// // // // // // // // // // // // // // // // // // // let max1 = -Infinity
// // // // // // // // // // // // // // // // // // // let max2 = -Infinity
// // // // // // // // // // // // // // // // // // // for (let num of nums) {
// // // // // // // // // // // // // // // // // // //     if (num > max1) {
// // // // // // // // // // // // // // // // // // //         max2 = max1; // Update second largest
// // // // // // // // // // // // // // // // // // //         max1 = num;  // Update largest
// // // // // // // // // // // // // // // // // // //     } else if (num > max2) {
// // // // // // // // // // // // // // // // // // //         max2 = num;  // Update second largest
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(max1,max2)


// // // // // // // // // // // // // // // // // // // num = [12, 3, 4, 5, 6, 20]
// // // // // // // // // // // // // // // // // // // let max1 = -Infinity
// // // // // // // // // // // // // // // // // // // let max2 = -Infinity
// // // // // // // // // // // // // // // // // // // for (let i = 0; i <= num.length - 1; i++) {
// // // // // // // // // // // // // // // // // // //     if (num[i] > max1) {
// // // // // // // // // // // // // // // // // // //         max2 = max1
// // // // // // // // // // // // // // // // // // //         max1 = num[i]
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else {
// // // // // // // // // // // // // // // // // // //         max2 = num[i]
// // // // // // // // // // // // // // // // // // //     }

// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(max1, max2)
// // // // // // // // // // // // // // // // // // // m = (max1 - 1) * (max2 - 1)
// // // // // // // // // // // // // // // // // // // console.log(m)

// // // // // // // // // // // // // // // // // // // for (let j = 0; j <= nums.length - 1; j++) {
// // // // // // // // // // // // // // // // // // //     if (i != j) {
// // // // // // // // // // // // // // // // // // //         
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     if (m > max) {
// // // // // // // // // // // // // // // // // // //         max = m
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }

// // // // // // // // // // // // // // // // // // // let arr = []
// // // // // // // // // // // // // // // // // // // let i = 0
// // // // // // // // // // // // // // // // // // // let start = 0
// // // // // // // // // // // // // // // // // // // let n = 5
// // // // // // // // // // // // // // // // // // // while (i < n) {
// // // // // // // // // // // // // // // // // // //     arr[i] = start + 2 * i
// // // // // // // // // // // // // // // // // // //     i++
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(arr)
// // // // // // // // // // // // // // // // // // // let p = 0
// // // // // // // // // // // // // // // // // // // for (let i = 0; i <= arr.length - 1; i++) {
// // // // // // // // // // // // // // // // // // //     p ^=arr[i]
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(p)

// // // // // // // // // // // // // // // // // // // date = "20th Oct 2052"
// // // // // // // // // // // // // // // // // // // date = date.split(' ').join(' ').replace(/ /g, '-');
// // // // // // // // // // // // // // // // // // // console.log(date)

// // // // // // // // // // // // // // // // // // // endTime = [3,2,7], queryTime = 4
// // // // // // // // // // // // // // // // // // // student = 0
// // // // // // // // // // // // // // // // // // // for (let i = 0; i <= endTime.length-1; i++) {
// // // // // // // // // // // // // // // // // // //     if(endTime[i] >=queryTime){
// // // // // // // // // // // // // // // // // // //         student++
// // // // // // // // // // // // // // // // // // //     }

// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(student)
// // // // // // // // // // // // // // // // // // // nums = [1,2,3,7,8,9]
// // // // // // // // // // // // // // // // // // // let map = new Map()
// // // // // // // // // // // // // // // // // // // nums.forEach(element => {
// // // // // // // // // // // // // // // // // // //     if (map.has(element)) {
// // // // // // // // // // // // // // // // // // //         map.set(element, map.get(element) + 1)
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else {
// // // // // // // // // // // // // // // // // // //         map.set(element, 1)
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // });
// // // // // // // // // // // // // // // // // // // let arr = []
// // // // // // // // // // // // // // // // // // // const entriesArray = Array.from(map.entries());
// // // // // // // // // // // // // // // // // // // entriesArray.sort((a, b) => a[0] - b[0]);
// // // // // // // // // // // // // // // // // // // entriesArray.forEach(([key, value]) => {;
// // // // // // // // // // // // // // // // // // //     // if(i<=value){
// // // // // // // // // // // // // // // // // // //     //     arr.push(key)
// // // // // // // // // // // // // // // // // // //     //     i++
// // // // // // // // // // // // // // // // // // //     // }
// // // // // // // // // // // // // // // // // // //     console.log(key,value)
// // // // // // // // // // // // // // // // // // // });
// // // // // // // // // // // // // // // // // // // console.log(arr)


// // // // // // // // // // // // // // // // // // // nums = [0,0,0], target = 1


// // // // // // // // // // // // // // // // // // // nums = [1, 1, 1, 0], target = -100
// // // // // // // // // // // // // // // // // // // nums =
// // // // // // // // // // // // // // // // // // //     [1, 1, 1, 1]
// // // // // // // // // // // // // // // // // // // target =
// // // // // // // // // // // // // // // // // // //     -100
// // // // // // // // // // // // // // // // // // // var threeSumClosest = function (nums, target) {
// // // // // // // // // // // // // // // // // // //     // let closestsum = -Infinity
// // // // // // // // // // // // // // // // // // //     // nums = nums.sort((a, b) => (a - b))

// // // // // // // // // // // // // // // // // // //     // for (let i = 0; i <= nums.length - 1; i++) {
// // // // // // // // // // // // // // // // // // //     //     let j = i + 1
// // // // // // // // // // // // // // // // // // //     //     let k = nums.length - 1
// // // // // // // // // // // // // // // // // // //     //     while (j < k) {

// // // // // // // // // // // // // // // // // // //     //         let sum = nums[i] + nums[j] + nums[k]

// // // // // // // // // // // // // // // // // // //     //         if (Math.abs(sum - target) < Math.abs(closestsum - target)) {
// // // // // // // // // // // // // // // // // // //     //             closestsum = sum
// // // // // // // // // // // // // // // // // // //     //         }
// // // // // // // // // // // // // // // // // // //     //         else if(sum > target){
// // // // // // // // // // // // // // // // // // //     //             k--
// // // // // // // // // // // // // // // // // // //     //         }
// // // // // // // // // // // // // // // // // // //     //         else if(sum < target){
// // // // // // // // // // // // // // // // // // //     //             j++
// // // // // // // // // // // // // // // // // // //     //         }
// // // // // // // // // // // // // // // // // // //     //         else{
// // // // // // // // // // // // // // // // // // //     //             console.log(closestsum)
// // // // // // // // // // // // // // // // // // //     //         }

// // // // // // // // // // // // // // // // // // //     //     }
// // // // // // // // // // // // // // // // // // //     // }
// // // // // // // // // // // // // // // // // // //     // console.log(closestsum)

// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // let p = threeSumClosest([1, 1, 1, 1], -100)

// // // // // // // // // // // // // // // // // // // keyboard = {
// // // // // // // // // // // // // // // // // // //     "2": "abc",
// // // // // // // // // // // // // // // // // // //     "3": "def",
// // // // // // // // // // // // // // // // // // //     "4": "ghi",
// // // // // // // // // // // // // // // // // // //     "5": "jkl",
// // // // // // // // // // // // // // // // // // //     "6": "mno",
// // // // // // // // // // // // // // // // // // //     "7": "pqrs",
// // // // // // // // // // // // // // // // // // //     "8": "tuv",
// // // // // // // // // // // // // // // // // // //     "9": "wxyz"
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // let digits = '23'
// // // // // // // // // // // // // // // // // // // let str = ''
// // // // // // // // // // // // // // // // // // // let map = new Map()
// // // // // // // // // // // // // // // // // // // digits = digits.split('')
// // // // // // // // // // // // // // // // // // // let j = 1
// // // // // // // // // // // // // // // // // // // for (let i = 0; i <= digits.length - 1; i++) {
// // // // // // // // // // // // // // // // // // //     b = keyboard[digits[i]].split('')
// // // // // // // // // // // // // // // // // // //     if(digits.length > 1){
// // // // // // // // // // // // // // // // // // //         c = keyboard[digits[i]].split('')
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     console.log(c)
// // // // // // // // // // // // // // // // // // //     // for (let j = 0; j < c.length - 1; j++) {
// // // // // // // // // // // // // // // // // // //     //     str = b[i] + c[j] + str
// // // // // // // // // // // // // // // // // // //     // }

// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // // console.log(str)


// // // // // // // // // // // // // // // // // // // s = "leetcode", wordDict = ["leet", "code"]
// // // // // // // // // // // // // // // // // // // s = "applepenapple", wordDict = ["apple","pen"]
// // // // // // // // // // // // // // // // // // // // console.log(wordDict[0].length)
// // // // // // // // // // // // // // // // // // // let map = new Map()
// // // // // // // // // // // // // // // // // // // let j = 0
// // // // // // // // // // // // // // // // // // // let p = ''
// // // // // // // // // // // // // // // // // // // let count = 0
// // // // // // // // // // // // // // // // // // // let k = 0
// // // // // // // // // // // // // // // // // // // for (let i = 0; i <= wordDict.length - 1; i++) {
// // // // // // // // // // // // // // // // // // //     map.set(wordDict[i], 1)

// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(count)
// // // // // // // // // // // // // // // // // // // console.log(map)



// // // // // // // // // // // // // // // // // // // nums = [1, 2, 1, 3, 5, 6, 4]
// // // // // // // // // // // // // // // // // // // var findPeakElement = function (nums) {
// // // // // // // // // // // // // // // // // // //     let l = 0
// // // // // // // // // // // // // // // // // // //     let r = nums.length - 1

// // // // // // // // // // // // // // // // // // //     while (l <= r) {
// // // // // // // // // // // // // // // // // // //         mid = Math.floor((l + r) / 2)
// // // // // // // // // // // // // // // // // // //         if (nums[mid] > nums[mid - 1]) {
// // // // // // // // // // // // // // // // // // //             return mid
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //         else if (nums[mid + 1] > nums[mid]) {
// // // // // // // // // // // // // // // // // // //             l = mid + 1
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //         else {
// // // // // // // // // // // // // // // // // // //             r = mid - 1
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // };
// // // // // // // // // // // // // // // // // // // let a = findPeakElement([2,1])
// // // // // // // // // // // // // // // // // // // console.log(a)

// // // // // // // // // // // // // // // // // // // numerator = 1, denominator = 2
// // // // // // // // // // // // // // // // // // // n = (numerator / denominator)
// // // // // // // // // // // // // // // // // // // let p = ''
// // // // // // // // // // // // // // // // // // // if(denominator <3){
// // // // // // // // // // // // // // // // // // //     return n
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // if (n % 1 !== 0) {
// // // // // // // // // // // // // // // // // // //     n = n.toFixed(3)
// // // // // // // // // // // // // // // // // // //     n.split('')
// // // // // // // // // // // // // // // // // // //     for (let i = 0; i <= n.length - 1; i++) {
// // // // // // // // // // // // // // // // // // //         p =  p  + n[i]
// // // // // // // // // // // // // // // // // // //         if (n[i] == '.') {
// // // // // // // // // // // // // // // // // // //             p = p  + '('
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //         if (i == n.length - 1){
// // // // // // // // // // // // // // // // // // //             p = p + ')'
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //     }

// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // else{
// // // // // // // // // // // // // // // // // // //     p = n.toString()
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(p)

// // // // // // // // // // // // // // // // // // // s = "abc1111"
// // // // // // // // // // // // // // // // // // // s = "dfa12321afd"
// // // // // // // // // // // // // // // // // // // s = "sjhtz8344"
// // // // // // // // // // // // // // // // // // // s = s.replace(/[a-zA-Z]/g, '')
// // // // // // // // // // // // // // // // // // // s = Array.from(s)
// // // // // // // // // // // // // // // // // // // console.log(s)
// // // // // // // // // // // // // // // // // // // let max1 = -1
// // // // // // // // // // // // // // // // // // // let max2 = -1
// // // // // // // // // // // // // // // // // // // for (let i = 0; i <= s.length - 1; i++) {
// // // // // // // // // // // // // // // // // // //     if(s[i] > max1){
// // // // // // // // // // // // // // // // // // //         max2 = max1
// // // // // // // // // // // // // // // // // // //         max1 = s[i]
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else if(s[i] > max2 && s[i]<max1 ){
// // // // // // // // // // // // // // // // // // //         max2 = s[i]
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(Number(max2))
// // // // // // // // // // // // // // // // // // // nums = [2, 0, 2, 1, 1, 0]
// // // // // // // // // // // // // // // // // // // nums = [2, 0, 1]
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < nums.length - 1; i++) {
// // // // // // // // // // // // // // // // // // //     for (let j = 0; j < nums.length - i - 1; j++) {
// // // // // // // // // // // // // // // // // // //         if (nums[j] > nums[j + 1]) {
// // // // // // // // // // // // // // // // // // //             [nums[j], nums[j + 1]] = [nums[j + 1], nums[j]]; // Swap
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // // console.log(nums)

// // // // // // // // // // // // // // // // // // // s = "bcabc"
// // // // // // // // // // // // // // // // // // // s = "cbacdcbc"
// // // // // // // // // // // // // // // // // // // s = s.split("").sort()
// // // // // // // // // // // // // // // // // // // let map = new Map()
// // // // // // // // // // // // // // // // // // // s.forEach(element => {
// // // // // // // // // // // // // // // // // // //     if(map.has(element)){
// // // // // // // // // // // // // // // // // // //         map.set(element,map.get(element)+1)
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else{
// // // // // // // // // // // // // // // // // // //         map.set(element,1)
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // });
// // // // // // // // // // // // // // // // // // // console.log(map)
// // // // // // // // // // // // // // // // // // // // console.log(s)
// // // // // // // // // // // // // // // // // // // let stack = []
// // // // // // // // // // // // // // // // // // // // let count = 0
// // // // // // // // // // // // // // // // // // // for (let i = 0; i <= s.length - 1; i++) {

// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(stack.join(''))


// // // // // // // // // // // // // // // // // // // let current = head
// // // // // // // // // // // // // // // // // // //     let even = current.next
// // // // // // // // // // // // // // // // // // //     let even_val = ''
// // // // // // // // // // // // // // // // // // //     while (even != null) {
// // // // // // // // // // // // // // // // // // //         even_val = even_val + even.val
// // // // // // // // // // // // // // // // // // //         even = even.next.next
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     let odd_val = ''
// // // // // // // // // // // // // // // // // // //     while(current != null){
// // // // // // // // // // // // // // // // // // //         odd_val = odd_val + current.val
// // // // // // // // // // // // // // // // // // //         current = current.next.next
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // //     let new_val = odd_val + even_val
// // // // // // // // // // // // // // // // // // // let even_val = '24'
// // // // // // // // // // // // // // // // // // // let odd_val = '135'
// // // // // // // // // // // // // // // // // // // console.log(odd_val+even_val)

// // // // // // // // // // // // // // // // // // // b = '-23'
// // // // // // // // // // // // // // // // // // // for (let i = 0; i <= s.length - 1; i++) {
// // // // // // // // // // // // // // // // // // //     if (b[i] == '-') {
// // // // // // // // // // // // // // // // // // //         s = b[i].concat(b[i+1])
// // // // // // // // // // // // // // // // // // //     }

// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // // console.log(b.split(''))
// // // // // // // // // // // // // // // // // // // nums = [3, 2, 1]
// // // // // // // // // // // // // // // // // // // nums = [1,2,2,5,3,5]
// // // // // // // // // // // // // // // // // // // let max1 = -Infinity
// // // // // // // // // // // // // // // // // // // let max2 = -Infinity
// // // // // // // // // // // // // // // // // // // let max3 = -Infinity
// // // // // // // // // // // // // // // // // // // for (let i = 0; i <= nums.length - 1; i++) {
// // // // // // // // // // // // // // // // // // //     if (nums[i] > max1){
// // // // // // // // // // // // // // // // // // //         max3 = max2
// // // // // // // // // // // // // // // // // // //         max2 = max1
// // // // // // // // // // // // // // // // // // //         max1 = nums[i]
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else if(nums[i] < max1 && nums[i] > max2){
// // // // // // // // // // // // // // // // // // //         max3 = max2
// // // // // // // // // // // // // // // // // // //         max2 = nums[i]
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else if(nums[i] < max1 && nums[i] < max2 && nums[i] > max3){
// // // // // // // // // // // // // // // // // // //         max3 = nums[i]
// // // // // // // // // // // // // // // // // // //     }

// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // if(max3 == -Infinity){
// // // // // // // // // // // // // // // // // // //     console.log(max2)
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(max1,max2,max3)
// // // // // // // // // // // // // // // // // // // rating = [2, 5, 3, 4, 1]
// // // // // // // // // // // // // // // // // // // rating = rating.sort()
// // // // // // // // // // // // // // // // // // // var search = function (rating) {

// // // // // // // // // // // // // // // // // // //     let l = 0
// // // // // // // // // // // // // // // // // // //     let r = rating.length - 1
// // // // // // // // // // // // // // // // // // //     while (l < r) {
// // // // // // // // // // // // // // // // // // //         mid = Math.floor((l + r) / 2)
// // // // // // // // // // // // // // // // // // //         if (rating[l] < rating[mid] && rating[mid] < rating[r]) {
// // // // // // // // // // // // // // // // // // //             return [l, mid, r]
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //         else if (rating[l] > rating[mid]) {
// // // // // // // // // // // // // // // // // // //             l++
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //         else if (rating[mid] > rating[r]) {
// // // // // // // // // // // // // // // // // // //             r--
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //         else {
// // // // // // // // // // // // // // // // // // //             return [l, mid, r]
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // let v = search([2, 5, 3, 4, 1])
// // // // // // // // // // // // // // // // // // // console.log(v)

// // // // // // // // // // // // // // // // // // // let a = [7, 1, 5, 3, 6, 4]
// // // // // // // // // // // // // // // // // // // a = [1,2,3,4,5]
// // // // // // // // // // // // // // // // // // // a = [7,6,4,3,1]
// // // // // // // // // // // // // // // // // // // let j = 1
// // // // // // // // // // // // // // // // // // // let max = 0
// // // // // // // // // // // // // // // // // // // let i = 0
// // // // // // // // // // // // // // // // // // // while (i <= a.length - 1) {

// // // // // // // // // // // // // // // // // // //     if (a[i] < a[j]) {
// // // // // // // // // // // // // // // // // // //         b = a[j] - a[i]
// // // // // // // // // // // // // // // // // // //         max = b + max
// // // // // // // // // // // // // // // // // // //         i++
// // // // // // // // // // // // // // // // // // //         j++
// // // // // // // // // // // // // // // // // // //     }

// // // // // // // // // // // // // // // // // // //     else {
// // // // // // // // // // // // // // // // // // //         i++
// // // // // // // // // // // // // // // // // // //         j++
// // // // // // // // // // // // // // // // // // //     }

// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(max)
// // // // // // // // // // // // // // // // // // // nums = [1, 2, 3], head = [1, 2, 3, 4, 5]
// // // // // // // // // // // // // // // // // // // const numsSet = new Set(nums);

// // // // // // // // // // // // // // // // // // // const filteredArray = head.filter(value => !numsSet.has(value));
// // // // // // // // // // // // // // // // // // // console.log(filteredArray)
// // // // // // // // // // // // // // // // // // // let j = 1
// // // // // // // // // // // // // // // // // // // coordinates =  [[1,1],[2,2],[3,4],[4,5],[5,6],[7,7]]
// // // // // // // // // // // // // // // // // // // xmove=coordinates[1][0]-coordinates[0][0]; // same as x2-x1
// // // // // // // // // // // // // // // // // // // ymove=coordinates[1][1]-coordinates[0][1]; // same as y2-y1
// // // // // // // // // // // // // // // // // // // for (let i = 1; i < coordinates.length; i++) {
// // // // // // // // // // // // // // // // // // //     x = coordinates[i][0] - coordinates[i-1][0]
// // // // // // // // // // // // // // // // // // //     y = coordinates[i][1] - coordinates[i][1]
// // // // // // // // // // // // // // // // // // //     if(y*xmove != x*ymove){
// // // // // // // // // // // // // // // // // // //         console.log('false')
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log('true')
// // // // // // // // // // // // // // // // // // // let n = 10
// // // // // // // // // // // // // // // // // // // const isPrime = Array(n).fill(true);
// // // // // // // // // // // // // // // // // // // isPrime[0] = isPrime[1] = false; // 0 and 1 are not primes

// // // // // // // // // // // // // // // // // // // // Step 2: Iterate from 2 to √n
// // // // // // // // // // // // // // // // // // // for (let i = 2; i * i <= n; i++) {
// // // // // // // // // // // // // // // // // // //     // If isPrime[i] is not changed, then it is a prime
// // // // // // // // // // // // // // // // // // //     if (isPrime[i]) {
// // // // // // // // // // // // // // // // // // //         // Update all multiples of i to false
// // // // // // // // // // // // // // // // // // //         for (let j = i * i; j <= n; j += i) {
// // // // // // // // // // // // // // // // // // //             isPrime[j] = false;
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(isPrime)
// // // // // // // // // // // // // // // // // // // let prime = []
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < n; i++) {
// // // // // // // // // // // // // // // // // // //     if(isPrime[i]){
// // // // // // // // // // // // // // // // // // //         prime.push(i)
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(prime)

// // // // // // // // // // // // // // // // // // // console.log(Math.floor(Math.sqrt(4)))
// // // // // // // // // // // // // // // // // // // nums = [1, 1, 1, 2, 2, 3]
// // // // // // // // // // // // // // // // // // // nums = [0, 0, 1, 1, 1, 1, 2, 3, 3]
// // // // // // // // // // // // // // // // // // // max = 2
// // // // // // // // // // // // // // // // // // // count = {}
// // // // // // // // // // // // // // // // // // // for(let  item of nums){
// // // // // // // // // // // // // // // // // // //     if(!count[item]){
// // // // // // // // // // // // // // // // // // //         count[item] = 0
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     if(count[item] < max){
// // // // // // // // // // // // // // // // // // //         nums.shift(item)
// // // // // // // // // // // // // // // // // // //         count[item]++
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(nums)
// // // // // // // // // // // // // // // // // // // let minPrice = Infinity; // Initialize to a very high value
// // // // // // // // // // // // // // // // // // // let maxProfit = 0;

// // // // // // // // // // // // // // // // // // // // Iterate through the array
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < prices.length; i++) {
// // // // // // // // // // // // // // // // // // //     // Update minPrice if the current price is lower
// // // // // // // // // // // // // // // // // // //     if (prices[i] < minPrice) {
// // // // // // // // // // // // // // // // // // //         minPrice = prices[i];
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     // Calculate profit if we sell at the current price
// // // // // // // // // // // // // // // // // // //     const profit = prices[i] - minPrice;
// // // // // // // // // // // // // // // // // // //     // Update maxProfit if this profit is higher
// // // // // // // // // // // // // // // // // // //     if (profit > maxProfit) {
// // // // // // // // // // // // // // // // // // //         maxProfit = profit;
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }

// // // // // // // // // // // // // // // // // // // console.log(maxProfit);
// // // // // // // // // // // // // // // // // // // prices = [7, 1, 5, 3, 6, 4]
// // // // // // // // // // // // // // // // // // // minprice = Infinity
// // // // // // // // // // // // // // // // // // // max = 0
// // // // // // // // // // // // // // // // // // // for (let i = 0; i <= prices.length; i++) {
// // // // // // // // // // // // // // // // // // //     if ( prices[i] < minprice) {
// // // // // // // // // // // // // // // // // // //         minprice = prices[i]
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     const profit = prices[i] - minprice
// // // // // // // // // // // // // // // // // // //     if (profit > max) {
// // // // // // // // // // // // // // // // // // //         max = profit
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(max)

// // // // // // // // // // // // // // // // // // // nums = [1, 2, 3]
// // // // // // // // // // // // // // // // // // // words = words.toString().replaceAll(`${separator}`,',')
// // // // // // // // // // // // // // // // // // // console.log(words.split(','))
// // // // // // // // // // // // // // // // // // // l = words.flatMap(item => item.split(','))
// // // // // // // // // // // // // // // // // // // console.log(l)
// // // // // // // // // // // // // // // // // // // console.log(words.toString().replaceAll('.',',').split(' '))




// // // // // // // // // // // // // // // // // // // nums = [1, 2, 2, 1, 1, 0]
// // // // // // // // // // // // // // // // // // // let i = 0
// // // // // // // // // // // // // // // // // // // let j = 1
// // // // // // // // // // // // // // // // // // // while (j <= nums.length - 1) {
// // // // // // // // // // // // // // // // // // //     if (nums[i] !== nums[j]) {
// // // // // // // // // // // // // // // // // // //         i++
// // // // // // // // // // // // // // // // // // //         j = i + 1
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else {
// // // // // // // // // // // // // // // // // // //         nums[i] = nums[i] * 2
// // // // // // // // // // // // // // // // // // //         nums[j] = nums[j] * 0
// // // // // // // // // // // // // // // // // // //         i++
// // // // // // // // // // // // // // // // // // //         j = i + 1
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // const non_zero = nums.filter(x => x !== 0);
// // // // // // // // // // // // // // // // // // // let length = nums.length - non_zero.length
// // // // // // // // // // // // // // // // // // // let con_cat = non_zero.concat(Array(length).fill(0))
// // // // // // // // // // // // // // // // // // // console.log(con_cat)

// // // // // // // // // // // // // // // // // // // s = "bbaaaaabb"
// // // // // // // // // // // // // // // // // // // s = "aababbab"
// // // // // // // // // // // // // // // // // // // s = s.split('')
// // // // // // // // // // // // // // // // // // // let stack = []
// // // // // // // // // // // // // // // // // // // let count = 0
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < s.length; i++) {
// // // // // // // // // // // // // // // // // // //     if (stack.length == 0) {
// // // // // // // // // // // // // // // // // // //         stack.push(s[i])
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else if (stack[stack.length - 1] == 'b' && s[i] == 'a'){
// // // // // // // // // // // // // // // // // // //         count++
// // // // // // // // // // // // // // // // // // //         stack.pop()
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else{
// // // // // // // // // // // // // // // // // // //         stack.push(s[i])
// // // // // // // // // // // // // // // // // // //     }

// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(count)


// // // // // // // // // // // // // // // // // // // nums = [1, 2, 2]
// // // // // // // // // // // // // // // // // // // let results = [[]]
// // // // // // // // // // // // // // // // // // // for (let num of nums) {
// // // // // // // // // // // // // // // // // // //     results = results.concat(results.map((value) => value.concat(num)))
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // //For only Unique vlaues of map
// // // // // // // // // // // // // // // // // // // let seen = new Map();
// // // // // // // // // // // // // // // // // // // let uniqueSubsets = [];

// // // // // // // // // // // // // // // // // // // for (let subset of results) {

// // // // // // // // // // // // // // // // // // //     sortedSubset = [...subset].sort((a, b) => a - b);
// // // // // // // // // // // // // // // // // // //     key = sortedSubset.join(',');
// // // // // // // // // // // // // // // // // // //     // console.log(key)
// // // // // // // // // // // // // // // // // // //     if (!seen.has(key)) {
// // // // // // // // // // // // // // // // // // //         seen.set(key, subset)
// // // // // // // // // // // // // // // // // // //         uniqueSubsets.push(subset)
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(uniqueSubsets)
// // // // // // // // // // // // // // // // // // // a = Array.from(seen.values())
// // // // // // // // // // // // // // // // // // // console.log(a)
// // // // // // // // // // // // // // // // // // // let arr = [1, 2, 3, 4, 5]
// // // // // // // // // // // // // // // // // // // let start = 2
// // // // // // // // // // // // // // // // // // // let end = 4
// // // // // // // // // // // // // // // // // // // const before = arr.slice(0, start - 1);
// // // // // // // // // // // // // // // // // // // const portion = arr.slice(start - 1, end - 1 + 1);
// // // // // // // // // // // // // // // // // // // const after = arr.slice(end - 1 + 1);

// // // // // // // // // // // // // // // // // // // const reversedPortion = portion.reverse();
// // // // // // // // // // // // // // // // // // // console.log(before.concat(reversedPortion, after))

// // // // // // // // // // // // // // // // // // // nums = [3,2,3,1,2,4,5,5,6],k=7
// // // // // // // // // // // // // // // // // // // nums = nums.sort((a,b)=>b-a)
// // // // // // // // // // // // // // // // // // // console.log(nums)
// // // // // // // // // // // // // // // // // // // console.log(nums[k-1])
// // // // // // // // // // // // // // // // // // // nums = [3, 3, 4, 2, 4, 4, 2, 4, 4]
// // // // // // // // // // // // // // // // // // // nums = [1, 2]
// // // // // // // // // // // // // // // // // // // nums = [3, 2, 3]
// // // // // // // // // // // // // // // // // // // let map = new Map()
// // // // // // // // // // // // // // // // // // // nums.forEach(element => {
// // // // // // // // // // // // // // // // // // //     if (map.has(element)) {
// // // // // // // // // // // // // // // // // // //         map.set(element, map.get(element) + 1)
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else {
// // // // // // // // // // // // // // // // // // //         map.set(element, 1)
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // });
// // // // // // // // // // // // // // // // // // // let mostFrequentValue = null;
// // // // // // // // // // // // // // // // // // // let maxCount = 0;
// // // // // // // // // // // // // // // // // // // const threshold = Math.floor(nums.length / 3);
// // // // // // // // // // // // // // // // // // // let arr = []
// // // // // // // // // // // // // // // // // // // for (const [value, count] of map.entries()) {
// // // // // // // // // // // // // // // // // // //     if (count > threshold) {
// // // // // // // // // // // // // // // // // // //         maxCount = count;
// // // // // // // // // // // // // // // // // // //         mostFrequentValue = value;
// // // // // // // // // // // // // // // // // // //         arr.push(mostFrequentValue)
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(arr)

// // // // // // // // // // // // // // // // // // // s = "cb34"
// // // // // // // // // // // // // // // // // // // s = s.split('')
// // // // // // // // // // // // // // // // // // // let stack = []
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < s.length; i++) {
// // // // // // // // // // // // // // // // // // //     if (stack.length == 0) {
// // // // // // // // // // // // // // // // // // //         stack.push(s[i])
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else if (stack[stack.length - 1] == NaN) {
// // // // // // // // // // // // // // // // // // //         stack.push(s[i])
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else if (stack[stack.length - 1] == NaN && s[i] == Number){
// // // // // // // // // // // // // // // // // // //         stack.pop()
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(stack)

// // // // // // // // // // // // // // // // // // // let arr = []
// // // // // // // // // // // // // // // // // // // let arr = [1, 2, 3, 4, 5]
// // // // // // // // // // // // // // // // // // // let i = 0
// // // // // // // // // // // // // // // // // // // const odds = arr.filter(num => num % 2 !== 0);
// // // // // // // // // // // // // // // // // // // const evens = arr.filter(num => num % 2 === 0);
// // // // // // // // // // // // // // // // // // // arr = odds.concat(evens)
// // // // // // // // // // // // // // // // // // // console.log(arr)
// // // // // // // // // // // // // // // // // // // x = -121
// // // // // // // // // // // // // // // // // // // console.log(x.toString().split('').reverse().join(''))

// // // // // // // // // // // // // // // // // // // nums = [1,2,3,4,4,5,5,5], k = 2
// // // // // // // // // // // // // // // // // // // let map = new Map()
// // // // // // // // // // // // // // // // // // // nums.forEach(element => {
// // // // // // // // // // // // // // // // // // //     if (map.has(element)) {
// // // // // // // // // // // // // // // // // // //         map.set(element, map.get(element) + 1)
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else {
// // // // // // // // // // // // // // // // // // //         map.set(element, 1)
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // });
// // // // // // // // // // // // // // // // // // // a = Array.from(map.entries()).sort((a,b)=>b[1]-a[1])
// // // // // // // // // // // // // // // // // // // let i = 1
// // // // // // // // // // // // // // // // // // // let arr = []
// // // // // // // // // // // // // // // // // // // for (const [index, key] of a) {
// // // // // // // // // // // // // // // // // // //     if (i <= k) {
// // // // // // // // // // // // // // // // // // //         if (key >= 1) {
// // // // // // // // // // // // // // // // // // //             arr.push(index)
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //         i++
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(arr)
// // // // // // // // // // // // // // // // // // // numbers = [2,7,11,15], target = 9
// // // // // // // // // // // // // // // // // // // let r = numbers.length - 1
// // // // // // // // // // // // // // // // // // //     let l = 0
// // // // // // // // // // // // // // // // // // //     do {

// // // // // // // // // // // // // // // // // // //         if (numbers[r] + numbers[l] > target) {
// // // // // // // // // // // // // // // // // // //             r = r - 1
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //         else if (numbers[r] + numbers[l] < target) {
// // // // // // // // // // // // // // // // // // //             l = l + 1
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //         else {
// // // // // // // // // // // // // // // // // // //             l++;
// // // // // // // // // // // // // // // // // // //             r++;
// // // // // // // // // // // // // // // // // // //             return [l,r]
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     while(l<r)
// // // // // // // // // // // // // // // // // // // intervals = [[1,4],[4,5]]
// // // // // // // // // // // // // // // // // // // intervals = [[1, 3], [2, 6], [8, 10], [15, 18]]
// // // // // // // // // // // // // // // // // // // intervals = intervals.sort((a, b) => a[0] - b[0]);
// // // // // // // // // // // // // // // // // // // let arr = []
// // // // // // // // // // // // // // // // // // // for (let i = 0; i <= intervals.length - 1; i++) {
// // // // // // // // // // // // // // // // // // //     if (arr.length == 0) {
// // // // // // // // // // // // // // // // // // //         arr.push(intervals[i])
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else if (arr[arr.length - 1][1] >= intervals[i][0]) {
// // // // // // // // // // // // // // // // // // //         arr[i - 1][1] = intervals[i][1]
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else {
// // // // // // // // // // // // // // // // // // //         arr.push(intervals[i])
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(arr)
// // // // // // // // // // // // // // // // // // // nums = 
// // // // // // // // // // // // // // // // // // // for (let i = 0; i <= nums; i++) {
// // // // // // // // // // // // // // // // // // //     c = i/2
// // // // // // // // // // // // // // // // // // //     if(c*c == nums){
// // // // // // // // // // // // // // // // // // //         console.log('true')
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log('false')
// // // // // // // // // // // // // // // // // // // let arr = [1,2,3,4,5]
// // // // // // // // // // // // // // // // // // // left = 2
// // // // // // // // // // // // // // // // // // // right = 4
// // // // // // // // // // // // // // // // // // // const before = arr.slice(0, left - 1);
// // // // // // // // // // // // // // // // // // // const portion = arr.slice(left - 1, right - 1 + 1);
// // // // // // // // // // // // // // // // // // // const after = arr.slice(right - 1 + 1);
// // // // // // // // // // // // // // // // // // // console.log(before)
// // // // // // // // // // // // // // // // // // // console.log(portion)
// // // // // // // // // // // // // // // // // // // console.log(after)
// // // // // // // // // // // // // // // // // // // portion.reverse()
// // // // // // // // // // // // // // // // // // // let a = []
// // // // // // // // // // // // // // // // // // // a = before.concat(portion,after)
// // // // // // // // // // // // // // // // // // // console.log(a)
// // // // // // // // // // // // // // // // // // // intervals = [[1, 3], [2, 6], [8, 10], [15, 18]]
// // // // // // // // // // // // // // // // // // // intervals = [[1, 4], [2, 3]]

// // // // // // // // // // // // // // // // // // // intervals = intervals.sort((a, b) => a[0] - b[0]);
// // // // // // // // // // // // // // // // // // // let arr = []
// // // // // // // // // // // // // // // // // // // for (let i = 0; i <= intervals.length - 1; i++) {
// // // // // // // // // // // // // // // // // // //     if (arr.length == 0) {
// // // // // // // // // // // // // // // // // // //         arr.push(intervals[i])
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else if (intervals[i][0] <= arr[arr.length - 1][1]) {
// // // // // // // // // // // // // // // // // // //         a = Math.min(intervals[i][1], arr[arr.length - 1][0])
// // // // // // // // // // // // // // // // // // //         b = Math.max(intervals[i][1], arr[arr.length - 1][1])
// // // // // // // // // // // // // // // // // // //         arr.pop()
// // // // // // // // // // // // // // // // // // //         arr.push([a, b])
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else {
// // // // // // // // // // // // // // // // // // //         arr.push(intervals[i])
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(arr)
// // // // // // // // // // // // // // // // // // // details = ["5612624052M0130","5378802576M6424","5447619845F0171","2941701174O9078"]
// // // // // // // // // // // // // // // // // // // details = ["1313579440F2036","2921522980M5644"]
// // // // // // // // // // // // // // // // // // // details = ["7868190130M7522", "5303914400F9211", "9273338290F4010"]
// // // // // // // // // // // // // // // // // // // let count = 0
// // // // // // // // // // // // // // // // // // // for (const person of details) {
// // // // // // // // // // // // // // // // // // //     if(person.substring(11,13)>60){
// // // // // // // // // // // // // // // // // // //         count++
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(count)

// // // // // // // // // // // // // // // // // // // a = [1, 3, 2, 8, 4, 9], fee = 2
// // // // // // // // // // // // // // // // // // // let a = [1,3,7,5,10,3]
// // // // // // // // // // // // // // // // // // // let fee = 2
// // // // // // // // // // // // // // // // // // // let j = 1
// // // // // // // // // // // // // // // // // // // let max = 0,b
// // // // // // // // // // // // // // // // // // // let i = 0
// // // // // // // // // // // // // // // // // // // let k = 0
// // // // // // // // // // // // // // // // // // // while (j <= a.length - 1) {
// // // // // // // // // // // // // // // // // // //     if (k == fee) {

// // // // // // // // // // // // // // // // // // //         if (a[i] < a[j]) {
// // // // // // // // // // // // // // // // // // //             b = a[j] - a[i]
// // // // // // // // // // // // // // // // // // //             max = b + max - fee
// // // // // // // // // // // // // // // // // // //             i = j-1
// // // // // // // // // // // // // // // // // // //             j++
// // // // // // // // // // // // // // // // // // //             i++
// // // // // // // // // // // // // // // // // // //             k = 1
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //     }

// // // // // // // // // // // // // // // // // // //     else {
// // // // // // // // // // // // // // // // // // //         k++
// // // // // // // // // // // // // // // // // // //         j++
// // // // // // // // // // // // // // // // // // //     }

// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(max)

// // // // // // // // // // // // // // // // // // // nums = [1,5,0,5]
// // // // // // // // // // // // // // // // // // // nums = [2,3,1,3,2]
// // // // // // // // // // // // // // // // // // // let map = new Map()

// // // // // // // // // // // // // // // // // // // nums = nums.sort((a,b)=>b-a)
// // // // // // // // // // // // // // // // // // // console.log(nums)
// // // // // // // // // // // // // // // // // // // nums.forEach(element => {
// // // // // // // // // // // // // // // // // // //     if (map.has(element)) {
// // // // // // // // // // // // // // // // // // //         map.set(element, map.get(element) + 1)
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else {
// // // // // // // // // // // // // // // // // // //         map.set(element, 1)
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // });
// // // // // // // // // // // // // // // // // // // console.log(map)
// // // // // // // // // // // // // // // // // // // const entries = Array.from(map.entries());
// // // // // // // // // // // // // // // // // // // console.log(entries)
// // // // // // // // // // // // // // // // // // // const sortedEntries = entries.sort((a, b) => a[1] - b[1]);
// // // // // // // // // // // // // // // // // // // console.log(sortedEntries)
// // // // // // // // // // // // // // // // // // // // let arr = []
// // // // // // // // // // // // // // // // // // // // sortedEntries.forEach(([element,frequency]) => {
// // // // // // // // // // // // // // // // // // //     for (let i = 0; i < frequency; i++) {
// // // // // // // // // // // // // // // // // // //         arr.push(element)
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // });
// // // // // // // // // // // // // // // // // // // console.log(arr)


// // // // // // // // // // // // // // // // // // // nums = [1, 9, 8, 3, 10, 5]
// // // // // // // // // // // // // // // // // // // nums = [7, 8, 3, 4, 15, 13, 4, 1]
// // // // // // // // // // // // // // // // // // // nums = nums.sort((a, b) => a - b)
// // // // // // // // // // // // // // // // // // // let average = []
// // // // // // // // // // // // // // // // // // // let left = 0
// // // // // // // // // // // // // // // // // // // let right = nums.length - 1
// // // // // // // // // // // // // // // // // // // while (left <= right) {
// // // // // // // // // // // // // // // // // // //     let avg = (nums[left] + nums[right]) / 2
// // // // // // // // // // // // // // // // // // //     average.push(avg)
// // // // // // // // // // // // // // // // // // //     left++
// // // // // // // // // // // // // // // // // // //     right--

// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(Math.min(average)



// // // // // // // // // // // // // // // // // // // nums = [1, 2, 5, 4, 3]
// // // // // // // // // // // // // // // // // // // nums = [1,2,3]
// // // // // // // // // // // // // // // // // // // nums = [1,1,5]
// // // // // // // // // // // // // // // // // // // nums = [3,2,1]
// // // // // // // // // // // // // // // // // // // let i = nums.length - 2
// // // // // // // // // // // // // // // // // // // while (i >= 0 && nums[i] >= nums[i + 1]) {

// // // // // // // // // // // // // // // // // // //     i--
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // if (i >= 0) {
// // // // // // // // // // // // // // // // // // //     let j = nums.length - 1
// // // // // // // // // // // // // // // // // // //     while (nums[j] <= nums[i]) {
// // // // // // // // // // // // // // // // // // //         j--
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     [nums[i], nums[j]] = [nums[j], nums[i]];
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // //Suffix
// // // // // // // // // // // // // // // // // // // let left = i + 1
// // // // // // // // // // // // // // // // // // // let right = nums.length - 1
// // // // // // // // // // // // // // // // // // // while (left < right) {
// // // // // // // // // // // // // // // // // // //     [nums[left], nums[right]] = [nums[right], nums[left]];
// // // // // // // // // // // // // // // // // // //     left++
// // // // // // // // // // // // // // // // // // //     right--
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(nums)


// // // // // // // // // // // // // // // // // // // s = "ELELEEL"
// // // // // // // // // // // // // // // // // // // s = "ELEELEELLL"
// // // // // // // // // // // // // // // // // // // s = s.split("")
// // // // // // // // // // // // // // // // // // // max = 0
// // // // // // // // // // // // // // // // // // // count = 0
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < s.length; i++) {
// // // // // // // // // // // // // // // // // // //     if(s[i] == 'E'){
// // // // // // // // // // // // // // // // // // //         count++
// // // // // // // // // // // // // // // // // // //         if(count>max){
// // // // // // // // // // // // // // // // // // //             max = count
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else {
// // // // // // // // // // // // // // // // // // //         count--
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(max)

// // // // // // // // // // // // // // // // // // // nums1 = [1,2,4,12], nums2 = [2,4], k = 3
// // // // // // // // // // // // // // // // // // // nums1 = [1,3,4], nums2 = [1,3,4], k = 1
// // // // // // // // // // // // // // // // // // // nums1 = [1,10,11], nums2 = [2,2,2] ,k = 5
// // // // // // // // // // // // // // // // // // // let set = new Set()
// // // // // // // // // // // // // // // // // // // nums2.forEach(element => {
// // // // // // // // // // // // // // // // // // //     e = element * k
// // // // // // // // // // // // // // // // // // //     set.add(e)
// // // // // // // // // // // // // // // // // // // });
// // // // // // // // // // // // // // // // // // // console.log(set)
// // // // // // // // // // // // // // // // // // // let count = 0
// // // // // // // // // // // // // // // // // // // nums1.forEach(element => {
// // // // // // // // // // // // // // // // // // //     for (const el of set) {
// // // // // // // // // // // // // // // // // // //         if(element % el === 0){
// // // // // // // // // // // // // // // // // // //             count++
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // });
// // // // // // // // // // // // // // // // // // // console.log(count)

// // // // // // // // // // // // // // // // // // // let count = 0
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < nums1.length; i++) {
// // // // // // // // // // // // // // // // // // //     for (let j = 0; j < nums2.length; j++) {
// // // // // // // // // // // // // // // // // // //         a = nums1[i] / (nums2[j] * k)
// // // // // // // // // // // // // // // // // // //         if(Number.isInteger(a)){
// // // // // // // // // // // // // // // // // // //             count++
// // // // // // // // // // // // // // // // // // //         }

// // // // // // // // // // // // // // // // // // //     }

// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(count)


// // // // // // // // // // // // // // // // // // // s = "leetcoder"
// // // // // // // // // // // // // // // // // // // s = s.split('')
// // // // // // // // // // // // // // // // // // // count = 0
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < s.length; i++) {
// // // // // // // // // // // // // // // // // // //     if(s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u'){
// // // // // // // // // // // // // // // // // // //         count++
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // if(count > 0){
// // // // // // // // // // // // // // // // // // //     console.log('true')
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // else{
// // // // // // // // // // // // // // // // // // //     console.log('false')
// // // // // // // // // // // // // // // // // // // }

// // // // // // // // // // // // // // // // // // // let nums = [5, 14, 13, 8, 12]
// // // // // // // // // // // // // // // // // // // nums = [7, 52, 2, 4]
// // // // // // // // // // // // // // // // // // // let i = 0
// // // // // // // // // // // // // // // // // // // let r = nums.length - 1
// // // // // // // // // // // // // // // // // // // let str = ''
// // // // // // // // // // // // // // // // // // // let num = 0
// // // // // // // // // // // // // // // // // // // while (i <= r) {
// // // // // // // // // // // // // // // // // // //     if(nums.length == 1){
// // // // // // // // // // // // // // // // // // //       num = Number(nums[i]) + num
// // // // // // // // // // // // // // // // // // //       console.log(num)
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     str = (nums[i]).toString() + (nums[r]).toString()
// // // // // // // // // // // // // // // // // // //     num = Number(str) + num
// // // // // // // // // // // // // // // // // // //     nums.splice(i,1)
// // // // // // // // // // // // // // // // // // //     nums.splice(r-1,1)
// // // // // // // // // // // // // // // // // // //     r = r-2


// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(num)
// // // // // // // // // // // // // // // // // // // s = "pwwkew"
// // // // // // // // // // // // // // // // // // // s = "bbbbb"
// // // // // // // // // // // // // // // // // // // s = "abcabcbb"
// // // // // // // // // // // // // // // // // // // s = 'aab'
// // // // // // // // // // // // // // // // // // // s = s.split('')
// // // // // // // // // // // // // // // // // // // let l = 0
// // // // // // // // // // // // // // // // // // // let longest = 0
// // // // // // // // // // // // // // // // // // // let map = new Map()
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < s.length; i++) {
// // // // // // // // // // // // // // // // // // //     if (map.has(s[i])) {
// // // // // // // // // // // // // // // // // // //         l = Math.max(l,map.get(s[i])+1)
// // // // // // // // // // // // // // // // // // //     }

// // // // // // // // // // // // // // // // // // //     map.set(s[i], i)
// // // // // // // // // // // // // // // // // // //     longest = Math.max(longest, i - l + 1)

// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(longest)

// // // // // // // // // // // // // // // // // // s = "101101"
// // // // // // // // // // // // // // // // // // // const substrings = [];
// // // // // // // // // // // // // // // // // // // const n = s.length;

// // // // // // // // // // // // // // // // // // // for (let start = 0; start < n; start++) {
// // // // // // // // // // // // // // // // // // //     for (let end = start + 1; end <= n; end++) {
// // // // // // // // // // // // // // // // // // //         substrings.push(s.substring(start, end));
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(substrings)
// // // // // // // // // // // // // // // // // // // count_num = 0
// // // // // // // // // // // // // // // // // // // count_zero = 0
// // // // // // // // // // // // // // // // // // // let org_count = 0

// // // // // // // // // // // // // // // // // // // for (let i = 0; i < substrings.length; i++) {
// // // // // // // // // // // // // // // // // // //     let p = substrings[i] //get
// // // // // // // // // // // // // // // // // // //     p = p.split('') // split
// // // // // // // // // // // // // // // // // // //     p.filter((value) => {
// // // // // // // // // // // // // // // // // // //         if (value == '1') {
// // // // // // // // // // // // // // // // // // //             count_num++
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //         else {
// // // // // // // // // // // // // // // // // // //             count_zero++
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //     })
// // // // // // // // // // // // // // // // // // //     if(count_num >= (Math.pow(count_zero,2))){
// // // // // // // // // // // // // // // // // // //         org_count++
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     count_num = 0
// // // // // // // // // // // // // // // // // // //     count_zero = 0
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(org_count)


// // // // // // // // // // // // // // // // // // //Sliding Window
// // // // // // // // // // // // // // // // // // // let count = 0;
// // // // // // // // // // // // // // // // // // // // const n = s.length;

// // // // // // // // // // // // // // // // // // // for (let start = 0; start < n; start++) {
// // // // // // // // // // // // // // // // // // //     let count_num = 0;
// // // // // // // // // // // // // // // // // // //     let count_zero = 0;

// // // // // // // // // // // // // // // // // // //     for (let end = start; end < n; end++) {
// // // // // // // // // // // // // // // // // // //         if (s[end] === '1') {
// // // // // // // // // // // // // // // // // // //             count_num++;
// // // // // // // // // // // // // // // // // // //         } else {
// // // // // // // // // // // // // // // // // // //             count_zero++;
// // // // // // // // // // // // // // // // // // //         }

// // // // // // // // // // // // // // // // // // //         if (count_num >= count_zero ** 2) {
// // // // // // // // // // // // // // // // // // //             count++;
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(count)
// // // // // // // // // // // // // // // // // // // nums = [-6,2,5,-2,-7,-1,3], target = -2
// // // // // // // // // // // // // // // // // // // nums = [-1, 1, 2, 3, 1], target = 2
// // // // // // // // // // // // // // // // // // // let count = 0
// // // // // // // // // // // // // // // // // // // for (let i = 0; i <= nums.length - 1; i++) {
// // // // // // // // // // // // // // // // // // //     for (let j = 1; j <= nums.length - 1; j++) {
// // // // // // // // // // // // // // // // // // //             if(nums[i] + nums[j] < target && i!=j && i<j){
// // // // // // // // // // // // // // // // // // //                 count++
// // // // // // // // // // // // // // // // // // //             }
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(count)

// // // // // // // // // // // // // // // // // // // n = 2
// // // // // // // // // // // // // // // // // // // for (let i = 0s; i < n; i++) {
// // // // // // // // // // // // // // // // // // //     f(n) = 9*9
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // s = "ababba"
// // // // // // // // // // // // // // // // // // // s = "aba"
// // // // // // // // // // // // // // // // // // // s = "abab"
// // // // // // // // // // // // // // // // // // // s = s.split('')
// // // // // // // // // // // // // // // // // // // let 

// // // // // // // // // // // // // // // // // // // let arr1 = []
// // // // // // // // // // // // // // // // // // // if (target.length !== arr.length) {
// // // // // // // // // // // // // // // // // // //     console.log('false')
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < target.length; i++) {
// // // // // // // // // // // // // // // // // // //     if (arr.includes(target[i])) {
// // // // // // // // // // // // // // // // // // //         arr1.push(target[i])
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else {
// // // // // // // // // // // // // // // // // // //         console.log('false')
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // let count = 0
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < arr1.length; i++) {
// // // // // // // // // // // // // // // // // // //     if(arr1[i] == target[i]){
// // // // // // // // // // // // // // // // // // //         count++
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else{
// // // // // // // // // // // // // // // // // // //         console.log('false')
// // // // // // // // // // // // // // // // // // //     }

// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // if(count == target.length){
// // // // // // // // // // // // // // // // // // //     console.log('true')
// // // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // target = [1, 2, 3, 4], arr = [2, 4, 1, 3]
// // // // // // // // // // // // // // // // // // // arr.sort()
// // // // // // // // // // // // // // // // // // // let count = 0
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < target.length; i++) {
// // // // // // // // // // // // // // // // // // //     if(target[i] == arr[i]){
// // // // // // // // // // // // // // // // // // //         count++
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else{
// // // // // // // // // // // // // // // // // // //         console.log('false')
// // // // // // // // // // // // // // // // // // //     }

// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // if(count == target.length){
// // // // // // // // // // // // // // // // // // //     console.log('true')
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // count = 0
// // // // // // // // // // // // // // // // // // // let n = 10
// // // // // // // // // // // // // // // // // // // while (n > 0) {
// // // // // // // // // // // // // // // // // // //     count += Math.floor(n / 5)
// // // // // // // // // // // // // // // // // // //     n /= 5
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(count)
// // // // // // // // // // // // // // // // // // // s = "leet**cod*e"
// // // // // // // // // // // // // // // // // // // s = "erase*****"
// // // // // // // // // // // // // // // // // // // s = s.split('')
// // // // // // // // // // // // // // // // // // // stack = []
// // // // // // // // // // // // // // // // // // // for (let i = 0; i <= s.length - 1; i++) {
// // // // // // // // // // // // // // // // // // //     if(s[i] != '*'){
// // // // // // // // // // // // // // // // // // //         stack.push(s[i])
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else if(s[i] == '*'){
// // // // // // // // // // // // // // // // // // //         stack.pop()
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(stack.join(''))

// // // // // // // // // // // // // // // // // // // asteroids = [10, 2, -5]
// // // // // // // // // // // // // // // // // // // asteroids = [5, 10, -5]
// // // // // // // // // // // // // // // // // // // asteroids = [8, -8]
// // // // // // // // // // // // // // // // // // // asteroids = [-2, -1, 1, 2]
// // // // // // // // // // // // // // // // // // // asteroids = [-2, -2, 1, -2]
// // // // // // // // // // // // // // // // // // // let stack = []
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < asteroids.length; i++) {
// // // // // // // // // // // // // // // // // // //     if (asteroids[i] > 0) {
// // // // // // // // // // // // // // // // // // //         stack.push(asteroids[i])
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     if (asteroids[i] < 0) {
// // // // // // // // // // // // // // // // // // //         while(stack.length > 0 && stack[stack.length - 1] < (asteroids[i] * -1)) {
// // // // // // // // // // // // // // // // // // //             stack.pop()
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //         if (stack.length == 0) {
// // // // // // // // // // // // // // // // // // //             stack.push(asteroids[i])
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //         else if (stack[stack.length - 1] < 0 && asteroids[i] < 0) {
// // // // // // // // // // // // // // // // // // //             stack.push(asteroids[i])
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //         else if (stack[stack.length - 1] == (asteroids[i] * -1)) {
// // // // // // // // // // // // // // // // // // //             stack.pop()
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //         else if (stack[stack.length - 1] > (asteroids[i])) {
// // // // // // // // // // // // // // // // // // //             continue
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(stack)

// // // // // // // // // // // // // // // // // // // nums = [-3,-2,-1,0,0,1,2]
// // // // // // // // // // // // // // // // // // // let count = 0
// // // // // // // // // // // // // // // // // // // let neg = 0
// // // // // // // // // // // // // // // // // // // let pos = 0
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < nums.length; i++) {
// // // // // // // // // // // // // // // // // // //     if(nums[i] < 0){
// // // // // // // // // // // // // // // // // // //         neg++
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else{
// // // // // // // // // // // // // // // // // // //         pos++
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // if(neg > pos){
// // // // // // // // // // // // // // // // // // //     count = neg
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // else{
// // // // // // // // // // // // // // // // // // //     count = pos
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(count)
// // // // // // // // // // // // // // // // // // // sentence = "hellohello hellohellohello", searchWord = "ell"
// // // // // // // // // // // // // // // // // // // sentence = "i love eating burger", searchWord = "burg"
// // // // // // // // // // // // // // // // // // // sentence = "this problem is an easy problem", searchWord = "pro"


// // // // // // // // // // // // // // // // // // // sentence = sentence.split(' ')
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < sentence.length; i++) {
// // // // // // // // // // // // // // // // // // //     if(sentence[i].includes(searchWord) ){
// // // // // // // // // // // // // // // // // // //         index = i
// // // // // // // // // // // // // // // // // // //         break
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(index)
// // // // // // // // // // // // // // // // // // // first = sentence[index].split('')
// // // // // // // // // // // // // // // // // // // second = searchWord.split('')
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < first.length; i++) {
// // // // // // // // // // // // // // // // // // //     if(first[i] == searchWord[i]){
// // // // // // // // // // // // // // // // // // //         console.log('true')
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else{
// // // // // // // // // // // // // // // // // // //         console.log('false')
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }

// // // // // // // // // // // // // // // // // // // s = "abc", t = "ahbgdc"
// // // // // // // // // // // // // // // // // // // s = "axc", t = "ahbgdc"
// // // // // // // // // // // // // // // // // // // s = s.split('')
// // // // // // // // // // // // // // // // // // // t = t.split('')
// // // // // // // // // // // // // // // // // // // let l = 0
// // // // // // // // // // // // // // // // // // // let r = 0
// // // // // // // // // // // // // // // // // // // while (r <= t.length - 1) {
// // // // // // // // // // // // // // // // // // //     if (t[r] != s[l]) {
// // // // // // // // // // // // // // // // // // //         r++
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else {
// // // // // // // // // // // // // // // // // // //         l++
// // // // // // // // // // // // // // // // // // //         r++
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // if (l == s.length) {
// // // // // // // // // // // // // // // // // // //     console.log('true')
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // else {
// // // // // // // // // // // // // // // // // // //     console.log('false')
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // chars = ["a","b","b","b","b","b","b","b","b","b","b","b","b"]
// // // // // // // // // // // // // // // // // // // chars = ["a", "a", "a", "b", "b", "a", "a"]
// // // // // // // // // // // // // // // // // // // let l = 0
// // // // // // // // // // // // // // // // // // // let str = ''
// // // // // // // // // // // // // // // // // // // let count = 1
// // // // // // // // // // // // // // // // // // // for (let i = 1; i <= chars.length; i++) {
// // // // // // // // // // // // // // // // // // //     if (chars[l] == chars[i]) {
// // // // // // // // // // // // // // // // // // //         count++
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else {
// // // // // // // // // // // // // // // // // // //         if(count ==1){
// // // // // // // // // // // // // // // // // // //             str = str + chars[l]
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //         else{
// // // // // // // // // // // // // // // // // // //             str = str + chars[l] + count
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //         l = i
// // // // // // // // // // // // // // // // // // //         count = 1

// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // if(str.length == 0){
// // // // // // // // // // // // // // // // // // //     str = str + chars[0]
// // // // // // // // // // // // // // // // // // //     str = str.split('')
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(str)
// // // // // // // // // // // // // // // // // // // arr = [1,2,2,1,1,3]
// // // // // // // // // // // // // // // // // // // let map =  new Map()
// // // // // // // // // // // // // // // // // // // arr.forEach((value)=>{
// // // // // // // // // // // // // // // // // // //     if(map.has(value)){
// // // // // // // // // // // // // // // // // // //         map.set(value,map.get(value)+1)
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else{
// // // // // // // // // // // // // // // // // // //         map.set(value,1)
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // })
// // // // // // // // // // // // // // // // // // // for(let [key,value] of map){
// // // // // // // // // // // // // // // // // // //     if(value>1){
// // // // // // // // // // // // // // // // // // //         console.log('false')
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log('true')


// // // // // // // // // // // // // // // // // // // nums1 = [1, 2, 3], nums2 = [2, 4, 6]
// // // // // // // // // // // // // // // // // // // nums1 = [1, 2, 3, 3], nums2 = [1, 1, 2, 2]
// // // // // // // // // // // // // // // // // // // let a1 = [], total = [], a3 = []
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < nums1.length; i++) {
// // // // // // // // // // // // // // // // // // //     if (!nums2.includes(nums1[i])) {
// // // // // // // // // // // // // // // // // // //         if (nums1[i] != nums1[i - 1]) {
// // // // // // // // // // // // // // // // // // //             a1.push(nums1[i])
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < nums2.length; i++) {
// // // // // // // // // // // // // // // // // // //     if (!nums1.includes(nums2[i])) {
// // // // // // // // // // // // // // // // // // //         if (nums2[i] != nums2[i - 1]) {
// // // // // // // // // // // // // // // // // // //             a3.push(nums2[i])
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // total.push(a1, a3)
// // // // // // // // // // // // // // // // // // // console.log(total)


// // // // // // // // // // // // // // // // // // // nums = [1, 12, -5, -6, 50, 3], k = 4
// // // // // // // // // // // // // // // // // // // let i = 0
// // // // // // // // // // // // // // // // // // // let j = 0
// // // // // // // // // // // // // // // // // // // let res = 0
// // // // // // // // // // // // // // // // // // // let max_avg = 0
// // // // // // // // // // // // // // // // // // // count = 0
// // // // // // // // // // // // // // // // // // // while (i <= nums.length - 1) {
// // // // // // // // // // // // // // // // // // //     if (count != k - 1) {
// // // // // // // // // // // // // // // // // // //         res = res + nums[j]
// // // // // // // // // // // // // // // // // // //         j++
// // // // // // // // // // // // // // // // // // //         count++
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     if(count == k - 1){
// // // // // // // // // // // // // // // // // // //         res = res + nums[j]
// // // // // // // // // // // // // // // // // // //         if(res > max_avg){
// // // // // // // // // // // // // // // // // // //             max_avg = res
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //         i++
// // // // // // // // // // // // // // // // // // //         j = i
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }


// // // // // // // // // // // // // // // // // // // nums = [1,2,3,4], k = 5
// // // // // // // // // // // // // // // // // // // let count = 0
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < nums.length; i++) {
// // // // // // // // // // // // // // // // // // //     for (let j = i+1; j < nums.length; j++) {
// // // // // // // // // // // // // // // // // // //         if(nums[i] + nums[j] == k && i!=j){
// // // // // // // // // // // // // // // // // // //             count++
// // // // // // // // // // // // // // // // // // //         }

// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(count)
// // // // // // // // // // // // // // // // // // // arr =
// // // // // // // // // // // // // // // // // // //     [3, 5, -2, -3, -6, -6]
// // // // // // // // // // // // // // // // // // //     arr = [-3,0,1,-3,1,1,1,-3,10,0]
// // // // // // // // // // // // // // // // // // // arr = [1, 2]
// // // // // // // // // // // // // // // // // // // let map = new Map()
// // // // // // // // // // // // // // // // // // // arr.forEach((value) => {
// // // // // // // // // // // // // // // // // // //     if (map.has(value)) {
// // // // // // // // // // // // // // // // // // //         map.set(value, map.get(value) + 1)
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else {
// // // // // // // // // // // // // // // // // // //         map.set(value, 1)
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // })
// // // // // // // // // // // // // // // // // // // array = Array.from(map.values()).sort()
// // // // // // // // // // // // // // // // // // // let count = 0
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < array.length; i++) {
// // // // // // // // // // // // // // // // // // //     if(array[i] != array[i-1]){
// // // // // // // // // // // // // // // // // // //         count++
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // if(count == array.length){
// // // // // // // // // // // // // // // // // // //     console.log('true')
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // else{
// // // // // // // // // // // // // // // // // // //     console.log('false')
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // nums1 = [26, 48, -78, -25, 42, -8, 94, -68, 26]
// // // // // // // // // // // // // // // // // // // nums2 = [61, -17] 

// // // // // // // // // // // // // // // // // // // nums1 = nums1.filter((value,index)=>{
// // // // // // // // // // // // // // // // // // //     return nums1.indexOf(value) == index
// // // // // // // // // // // // // // // // // // // })
// // // // // // // // // // // // // // // // // // // let map = new Map()
// // // // // // // // // // // // // // // // // // // nums1.forEach(element => {
// // // // // // // // // // // // // // // // // // //     if(map.has(value)){
// // // // // // // // // // // // // // // // // // //         map.set(value,map.get(value)+1)
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else{
// // // // // // // // // // // // // // // // // // //         map.set(value,1)
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // });

// // // // // // // // // // // // // // // // // // // console.log([a1,a3])


// // // // // // // // // // // // // // // // // // // flowerbed = [1, 0, 0, 0, 1], n = 2
// // // // // // // // // // // // // // // // // // // flowerbed = [1, 0, 0, 0, 0, 1], n = 2
// // // // // // // // // // // // // // // // // // // let count = 0
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < flowerbed.length; i++) {
// // // // // // // // // // // // // // // // // // //     if (flowerbed[i] == 1 && flowerbed[i + 1] == 0 && flowerbed[i + 2] == 0 && flowerbed[i + 3] == 0) {
// // // // // // // // // // // // // // // // // // //         flowerbed[i + 2] = 1
// // // // // // // // // // // // // // // // // // //         count++
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else if (flowerbed[i - 1] != 1 && flowerbed[i] == 0 && flowerbed[i + 1] == 0 && flowerbed[i + 2] == 1) {
// // // // // // // // // // // // // // // // // // //         flowerbed[i] = 1
// // // // // // // // // // // // // // // // // // //         count++
// // // // // // // // // // // // // // // // // // //     }

// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // if (count == n) {
// // // // // // // // // // // // // // // // // // //     console.log('true')
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // else {
// // // // // // // // // // // // // // // // // // //     console.log('false')
// // // // // // // // // // // // // // // // // // // }

// // // // // // // // // // // // // // // // // // // nums = [-1, 1, 0, -3, 3]
// // // // // // // // // // // // // // // // // // // nums = [1, 2, 3, 4]
// // // // // // // // // // // // // // // // // // // nums1 = [1, 2, 3, 4]
// // // // // // // // // // // // // // // // // // // let i = 0

// // // // // // // // // // // // // // // // // // // for (let i = 0; i < nums.length; i++) {
// // // // // // // // // // // // // // // // // // //     a = nums1.splice(i,1)
// // // // // // // // // // // // // // // // // // //     let p = nums1.reduce((acc,dcc)=>acc*dcc*1)
// // // // // // // // // // // // // // // // // // //     nums[i] = p
// // // // // // // // // // // // // // // // // // //     nums1 = nums1.shift(a)
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(nums)
// // // // // // // // // // // // // // // // // // // nums = [3, 1, 3, 4, 3], k = 6
// // // // // // // // // // // // // // // // // // // nums = [1, 2, 3, 4], k = 5
// // // // // // // // // // // // // // // // // // // nums = [4,4,1,3,1,3,2,2,5,5,1,5,2,1,2,3,5,4],k = 2

// // // // // // // // // // // // // // // // // // // let count = 0
// // // // // // // // // // // // // // // // // // // let l = 0
// // // // // // // // // // // // // // // // // // // let r = nums.length - 1
// // // // // // // // // // // // // // // // // // // nums = nums.sort()
// // // // // // // // // // // // // // // // // // // while (l < r) {
// // // // // // // // // // // // // // // // // // //     sum = nums[l] + nums[r]
// // // // // // // // // // // // // // // // // // //     if (sum == k) {
// // // // // // // // // // // // // // // // // // //         count++
// // // // // // // // // // // // // // // // // // //         nums.splice(l, 1)
// // // // // // // // // // // // // // // // // // //         nums.splice(r - 1, 1)
// // // // // // // // // // // // // // // // // // //         r--
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else if(sum<k){
// // // // // // // // // // // // // // // // // // //         l++
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else {
// // // // // // // // // // // // // // // // // // //         r--
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(count)


// // // // // // // // // // // // // // // // // // // while (i <= nums.length - 1) {
// // // // // // // // // // // // // // // // // // //     if (nums[i] + nums[j] == k) {
// // // // // // // // // // // // // // // // // // //         count++
// // // // // // // // // // // // // // // // // // //         nums[i] = 0
// // // // // // // // // // // // // // // // // // //         nums[j] = 0
// // // // // // // // // // // // // // // // // // //         j++
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else if(j == nums.length - 1) {
// // // // // // // // // // // // // // // // // // //         i++
// // // // // // // // // // // // // // // // // // //         j = i + 1
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else{
// // // // // // // // // // // // // // // // // // //         j++
// // // // // // // // // // // // // // // // // // //     }

// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(count)


// // // // // // // // // // // // // // // // // // // nums = [-1]
// // // // // // // // // // // // // // // // // // // nums = [5], k = 1
// // // // // // // // // // // // // // // // // // // nums = [1, 12, -5, -6, 50, 3], k = 4
// // // // // // // // // // // // // // // // // // // let i = 0
// // // // // // // // // // // // // // // // // // // let j = 0
// // // // // // // // // // // // // // // // // // // let count = 0
// // // // // // // // // // // // // // // // // // // let arr = []
// // // // // // // // // // // // // // // // // // // let max = -Infinity
// // // // // // // // // // // // // // // // // // // let total, avg;


// // // // // // // // // // // // // // // // // // // while (i <= nums.length - 1) {
// // // // // // // // // // // // // // // // // // //     if (count != k) {
// // // // // // // // // // // // // // // // // // //         arr.push(nums[j])
// // // // // // // // // // // // // // // // // // //         count++
// // // // // // // // // // // // // // // // // // //         j++
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     if (count == k) {
// // // // // // // // // // // // // // // // // // //         total = arr.reduce((acc, dcc) => {
// // // // // // // // // // // // // // // // // // //             return acc + dcc + 0
// // // // // // // // // // // // // // // // // // //         })
// // // // // // // // // // // // // // // // // // //         avg = total / arr.length
// // // // // // // // // // // // // // // // // // //         if (avg > max) {
// // // // // // // // // // // // // // // // // // //             max = avg
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //         arr = []
// // // // // // // // // // // // // // // // // // //         count = 0
// // // // // // // // // // // // // // // // // // //         i++
// // // // // // // // // // // // // // // // // // //         j = i
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     if (j > nums.length - 1) {
// // // // // // // // // // // // // // // // // // //         break
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }

// // // // // // // // // // // // // // // // // // // console.log(max)


// // // // // // // // // // // // // // // // // // // nums = [1,2,3,4]
// // // // // // // // // // // // // // // // // // // nums = [-1,1,0,-3,3]
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < nums.length; i++) {
// // // // // // // // // // // // // // // // // // //     if(nums[i] == 0){
// // // // // // // // // // // // // // // // // // //         nums[i] = 1
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // let arr = []
// // // // // // // // // // // // // // // // // // // let a = nums.reduce((acc,dcc)=>acc*dcc*1)
// // // // // // // // // // // // // // // // // // // console.log(a)
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < nums.length; i++) {
// // // // // // // // // // // // // // // // // // //     nums[i] = a/nums[i]
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(nums)

// // // // // // // // // // // // // // // // // // // nums = [1, 2, 3]

// // // // // // // // // // // // // // // // // // // const n = nums.length;
// // // // // // // // // // // // // // // // // // // const result = [];
// // // // // // // // // // // // // // // // // // // // Iterate over all possible starting indices
// // // // // // // // // // // // // // // // // // // for (let start = 0; start < n; start++) {
// // // // // // // // // // // // // // // // // // //     let currentSum = 0;
// // // // // // // // // // // // // // // // // // //     // Iterate over all possible ending indices
// // // // // // // // // // // // // // // // // // //     for (let end = start; end < n; end++) {
// // // // // // // // // // // // // // // // // // //         // Add the current element to the current sum

// // // // // // // // // // // // // // // // // // //         const subarray = nums.slice(start, end + 1);
// // // // // // // // // // // // // // // // // // //         // console.log(end)
// // // // // // // // // // // // // // // // // // //         // Add the elements of the subarray to the result array
// // // // // // // // // // // // // // // // // // //         // result.push(subarray);
// // // // // // // // // // // // // // // // // // //         currentSum += nums[end];

// // // // // // // // // // // // // // // // // // //         // Store the sum of the subarray from start to end (inclusive)
// // // // // // // // // // // // // // // // // // //         result.push(currentSum);
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(result)


// // // // // // // // // // // // // // // // // // // candies = [2, 3, 5, 1, 3], extraCandies = 3
// // // // // // // // // // // // // // // // // // // candies = [4,2,1,1,2], extraCandies = 1
// // // // // // // // // // // // // // // // // // // let n = candies.length
// // // // // // // // // // // // // // // // // // // let array = new Array(n).fill(true)
// // // // // // // // // // // // // // // // // // // let sum;
// // // // // // // // // // // // // // // // // // // let max = Math.max(...candies)
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < candies.length; i++) {
// // // // // // // // // // // // // // // // // // //     sum = candies[i] + extraCandies
// // // // // // // // // // // // // // // // // // //     if(sum >=max){
// // // // // // // // // // // // // // // // // // //         continue
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else{
// // // // // // // // // // // // // // // // // // //         array[i] = false
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(array)
// // // // // // // // // // // // // // // // // // // nums =
// // // // // // // // // // // // // // // // // // // [20, 100, 10, 12, 5, 13]
// // // // // // // // // // // // // // // // // // // nums = [1,5,0,4,1,3]
// // // // // // // // // // // // // // // // // // // nums = [2, 1, 5, 0, 4, 6]
// // // // // // // // // // // // // // // // // // // nums = [1, 2, 3, 4, 5]
// // // // // // // // // // // // // // // // // // // nums = [5, 4, 3, 2, 1]
// // // // // // // // // // // // // // // // // // // let i = 0
// // // // // // // // // // // // // // // // // // // let j = i + 1
// // // // // // // // // // // // // // // // // // // let k = j + 1
// // // // // // // // // // // // // // // // // // // while (i <= nums.length - 1) {

// // // // // // // // // // // // // // // // // // //     if (nums[i] < nums[j] && nums[j] < nums[k] && nums[i] < nums[k] && i < j && j < k && i < k) {
// // // // // // // // // // // // // // // // // // //         console.log(i, j, k)
// // // // // // // // // // // // // // // // // // //         break
// // // // // // // // // // // // // // // // // // //     }

// // // // // // // // // // // // // // // // // // //     else if (k == nums.length - 1) {
// // // // // // // // // // // // // // // // // // //         j++
// // // // // // // // // // // // // // // // // // //         k = j + 1
// // // // // // // // // // // // // // // // // // //         if (j > nums.length - 2) {
// // // // // // // // // // // // // // // // // // //           i++
// // // // // // // // // // // // // // // // // // //           j = i + 1
// // // // // // // // // // // // // // // // // // //           k = j + 1
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else{
// // // // // // // // // // // // // // // // // // //         k++
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     if (i == nums.length - 3){
// // // // // // // // // // // // // // // // // // //           break
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }


// // // // // // // // // // // // // // // // // // // gain = [-5,1,5,0,-7]
// // // // // // // // // // // // // // // // // // // gain = [-4,-3,-2,-1,4,3,2]
// // // // // // // // // // // // // // // // // // // let arr = []
// // // // // // // // // // // // // // // // // // // arr.push(0)
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < gain.length; i++) {
// // // // // // // // // // // // // // // // // // //     sub = arr[i] + (gain[i])
// // // // // // // // // // // // // // // // // // //     arr.push(sub)
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // arr.sort((a,b)=>b-a)

// // // // // // // // // // // // // // // // // // // n = 14, k = 13
// // // // // // // // // // // // // // // // // // // c = n ^ k
// // // // // // // // // // // // // // // // // // // newk = n ^ c
// // // // // // // // // // // // // // // // // // // value = BigInt(newk).toString(2)
// // // // // // // // // // // // // // // // // // // nb = BigInt(n).toString(2)
// // // // // // // // // // // // // // // // // // // let count = 0
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < nb.length; i++) {
// // // // // // // // // // // // // // // // // // //     if (nb[i] != value[i]) {
// // // // // // // // // // // // // // // // // // //         count++
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(count)
// // // // // // // // // // // // // // // // // // // let char = 'h'
// // // // // // // // // // // // // // // // // // // console.log(char.charCodeAt(0))

// // // // // // // // // // // // // // // // // // // nums = [1,1,2,2,3,4]

// // // // // // // // // // // // // // // // // // // let map = new Map()
// // // // // // // // // // // // // // // // // // // nums.forEach(element => {
// // // // // // // // // // // // // // // // // // //     if(map.has(element)){
// // // // // // // // // // // // // // // // // // //         map.set(element,map.get(element)+1)
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else{
// // // // // // // // // // // // // // // // // // //         map.set(element,1)
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // });
// // // // // // // // // // // // // // // // // // // let j = 0
// // // // // // // // // // // // // // // // // // // for (const [key,value] of map) {
// // // // // // // // // // // // // // // // // // //     if(value>2){
// // // // // // // // // // // // // // // // // // //         console.log('false')
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log('true')


// // // // // // // // // // // // // // // // // // // s = "hello"
// // // // // // // // // // // // // // // // // // // s = "zaz"
// // // // // // // // // // // // // // // // // // // s = s.split('')
// // // // // // // // // // // // // // // // // // // let sum = 0
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < s.length - 1; i++) {
// // // // // // // // // // // // // // // // // // //     a = Math.abs(s[i].charCodeAt(0) - s[i + 1].charCodeAt(0))
// // // // // // // // // // // // // // // // // // //     sum = sum + a
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(sum)
// // // // // // // // // // // // // // // // // // // nums = [1, 2, 1, 1, 2, 1, 2]
// // // // // // // // // // // // // // // // // // // nums = [1, 5, 9, 4, 2]
// // // // // // // // // // // // // // // // // // // let count = 1
// // // // // // // // // // // // // // // // // // // b = Math.floor((nums[0] + nums[1]) % 2)
// // // // // // // // // // // // // // // // // // // let arr = []
// // // // // // // // // // // // // // // // // // // let l = 0
// // // // // // // // // // // // // // // // // // // let r = 1
// // // // // // // // // // // // // // // // // // // while (l < nums.length) {
// // // // // // // // // // // // // // // // // // //     a = (nums[l] + nums[r]) % 2
// // // // // // // // // // // // // // // // // // //     if (a == b) {
// // // // // // // // // // // // // // // // // // //         arr.push(nums[l])
// // // // // // // // // // // // // // // // // // //         count++
// // // // // // // // // // // // // // // // // // //     }

// // // // // // // // // // // // // // // // // // //     l++
// // // // // // // // // // // // // // // // // // //     r++

// // // // // // // // // // // // // // // // // // // }

// // // // // // // // // // // // // // // // // // // console.log(arr)
// // // // // // // // // // // // // // // // // // // console.log(count)

// // // // // // // // // // // // // // // // // // // arr = ["d", "b", "c", "b", "c", "a"], k = 2
// // // // // // // // // // // // // // // // // // // arr = ["aaa","aa","a"], k = 1
// // // // // // // // // // // // // // // // // // // arr = ["a","b","a"], k = 3
// // // // // // // // // // // // // // // // // // // let map = new Map()
// // // // // // // // // // // // // // // // // // // arr.forEach(element => {
// // // // // // // // // // // // // // // // // // //     if (map.has(element)) {
// // // // // // // // // // // // // // // // // // //         map.set(element, map.get(element) + 1)
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else {
// // // // // // // // // // // // // // // // // // //         map.set(element, 1)
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // });
// // // // // // // // // // // // // // // // // // // count = 0
// // // // // // // // // // // // // // // // // // // for (const [key, value] of map) {
// // // // // // // // // // // // // // // // // // //     if (value == 1) {
// // // // // // // // // // // // // // // // // // //         count++
// // // // // // // // // // // // // // // // // // //         if (count == k) {
// // // // // // // // // // // // // // // // // // //             console.log(key)
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log('')

// // // // // // // // // // // // // // // // // // // nums = [1, 2, 3, 4]
// // // // // // // // // // // // // // // // // // // let c = nums[0] % 2
// // // // // // // // // // // // // // // // // // // let even = 0
// // // // // // // // // // // // // // // // // // // let odd = 0
// // // // // // // // // // // // // // // // // // // let both = 0
// // // // // // // // // // // // // // // // // // // for (const num of nums) {
// // // // // // // // // // // // // // // // // // //     if (num % 2 == 0) {
// // // // // // // // // // // // // // // // // // //         even++
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else {
// // // // // // // // // // // // // // // // // // //         odd++
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     if (num % 2 == c){
// // // // // // // // // // // // // // // // // // //         both++
// // // // // // // // // // // // // // // // // // //         c = 1-c
// // // // // // // // // // // // // // // // // // //     }

// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(Math.max(even,odd,both))


// // // // // // // // // // // // // // // // // // // word = "234Adas"
// // // // // // // // // // // // // // // // // // // word = word.split('')
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < word.length; i++) {
// // // // // // // // // // // // // // // // // // //     if(word[i])
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // value = 115
// // // // // // // // // // // // // // // // // // // x = 3, y = 12
// // // // // // // // // // // // // // // // // // // turns = Math.floor(Math.min(x, y / 4))
// // // // // // // // // // // // // // // // // // // repeat = 1
// // // // // // // // // // // // // // // // // // // let Alice_val = 0
// // // // // // // // // // // // // // // // // // // let Bob_val = 0
// // // // // // // // // // // // // // // // // // // while (repeat <= turns) {
// // // // // // // // // // // // // // // // // // //     if (repeat % 2 != 0) {
// // // // // // // // // // // // // // // // // // //         Alice_val = 75 + 10 * 4
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else {
// // // // // // // // // // // // // // // // // // //         Bob_val = 75 + 10 * 4
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     repeat++
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // if(Alice_val == 0){
// // // // // // // // // // // // // // // // // // //    console.log('bob')
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // else if(Bob_val == 0){
// // // // // // // // // // // // // // // // // // //     console.log('alice')
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // else if(Alice_val == Bob_val){
// // // // // // // // // // // // // // // // // // //     console.log('bob')
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // else if(Alice_val > Bob_val){
// // // // // // // // // // // // // // // // // // //     console.log('Alice')
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // else{
// // // // // // // // // // // // // // // // // // //     console.log('Bob')
// // // // // // // // // // // // // // // // // // // }




// // // // // // // // // // // // // // // // // // // const regex = /^(?=.*[bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ])(?=.*[aeiouAEIOU])(?=.*[0-9]).{3,}$/;
// // // // // // // // // // // // // // // // // // // word = 'aya'
// // // // // // // // // // // // // // // // // // // console.log(regex.test(word))


// // // // // // // // // // // // // // // // // // // let n = 13 , k = 4
// // // // // // // // // // // // // // // // // // // if((n&k) !==k){
// // // // // // // // // // // // // // // // // // //     console.log('-1')
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // let res = 0
// // // // // // // // // // // // // // // // // // // for (const i of n.toString(2)) {
// // // // // // // // // // // // // // // // // // //     res = +parseInt(i)
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // for (const i of k.toString(2)) {
// // // // // // // // // // // // // // // // // // //     res -= parseInt(i)
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(res)



// // // // // // // // // // // // // // // // // // // pattern = "aaaa", s = "dog cat cat dog"
// // // // // // // // // // // // // // // // // // // pattern = "abba", s = "dog cat cat fish"
// // // // // // // // // // // // // // // // // // // pattern = "aaa" ,s = "aa aa aa aa"
// // // // // // // // // // // // // // // // // // // pattern = "abab", s = "dog cat cat dog"
// // // // // // // // // // // // // // // // // // // pattern = "abba", s = "dog cat cat dog"
// // // // // // // // // // // // // // // // // // // pattern = pattern.split('')
// // // // // // // // // // // // // // // // // // // s = s.split(' ')
// // // // // // // // // // // // // // // // // // // let count_p = 0
// // // // // // // // // // // // // // // // // // // let count_s = 0
// // // // // // // // // // // // // // // // // // // let r = pattern.length - 1
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < s.length; i++) {
// // // // // // // // // // // // // // // // // // //     if (pattern[i] == pattern[r]) {
// // // // // // // // // // // // // // // // // // //         count_p++
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     if (s[i] == s[r]) {
// // // // // // // // // // // // // // // // // // //         count_s++
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     if (count_p == count_s) {
// // // // // // // // // // // // // // // // // // //         continue
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else {
// // // // // // // // // // // // // // // // // // //         console.log('false')
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     r--
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // let map = new Map()
// // // // // // // // // // // // // // // // // // // s = "abcabcabcabc"
// // // // // // // // // // // // // // // // // // // s = s.split("")
// // // // // // // // // // // // // // // // // // // s.forEach(element => {
// // // // // // // // // // // // // // // // // // //     if (map.has(element)) {
// // // // // // // // // // // // // // // // // // //         map.set(element, map.get(element) + 1)
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else {
// // // // // // // // // // // // // // // // // // //         map.set(element, 1)
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // });
// // // // // // // // // // // // // // // // // // // array = Array.from(map.values())
// // // // // // // // // // // // // // // // // // // console.log(array)
// // // // // // // // // // // // // // // // // // // let count = 0
// // // // // // // // // // // // // // // // // // // let p = array.filter((value) => {
// // // // // // // // // // // // // // // // // // //     if (value == array[0]) {
// // // // // // // // // // // // // // // // // // //         count++
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // })
// // // // // // // // // // // // // // // // // // // console.log(count == array.length)



// // // // // // // // // // // // // // // // // // // console.log(6%10)

// // // // // // // // // // // // // // // // // // // a = Math.floor(Math.random() * 4)
// // // // // // // // // // // // // // // // // // // const numbers = [18, 6, 10, 3];

// // // // // // // // // // // // // // // // // // // function gcd(a, b) {
// // // // // // // // // // // // // // // // // // //     while (b !== 0) {
// // // // // // // // // // // // // // // // // // //         [a, b] = [b, a % b];
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     return a;
// // // // // // // // // // // // // // // // // // // }

// // // // // // // // // // // // // // // // // // // let result = [];

// // // // // // // // // // // // // // // // // // // for (let i = 0; i < numbers.length - 1; i++) {
// // // // // // // // // // // // // // // // // // //     result.push(numbers[i]); 
// // // // // // // // // // // // // // // // // // //     const gcdValue = gcd(numbers[i], numbers[i + 1]); 
// // // // // // // // // // // // // // // // // // //     result.push(gcdValue); 
// // // // // // // // // // // // // // // // // // // }

// // // // // // // // // // // // // // // // // // // result.push(numbers[numbers.length - 1]);

// // // // // // // // // // // // // // // // // // // s = "lEetcOde"
// // // // // // // // // // // // // // // // // // // s = s.split('')
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < s.length; i++) {
// // // // // // // // // // // // // // // // // // //     console.log(s[i].charCodeAt(0))
// // // // // // // // // // // // // // // // // // // }

// // // // // // // // // // // // // // // // // // // t = "lEOtcede"
// // // // // // // // // // // // // // // // // // // t = t.split('')
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < t.length; i++) {
// // // // // // // // // // // // // // // // // // //     console.log(t[i].charCodeAt(0))
// // // // // // // // // // // // // // // // // // // }


// // // // // // // // // // // // // // // // // // // matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
// // // // // // // // // // // // // // // // // // // matrix = [[1,2,3],[4,5,6]]
// // // // // // // // // // // // // // // // // // // let columns = matrix[0].length
// // // // // // // // // // // // // // // // // // // let rows = matrix.length
// // // // // // // // // // // // // // // // // // // let arr = []
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < columns; i++) {
// // // // // // // // // // // // // // // // // // //     for (let j = 0; j < rows; j++) {
// // // // // // // // // // // // // // // // // // //         arr.push(matrix[j][i])
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(arr)
// // // // // // // // // // // // // // // // // // // let result = []
// // // // // // // // // // // // // // // // // // // size = rows
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < arr.length; i += size) {
// // // // // // // // // // // // // // // // // // //     result.push(arr.slice(i, i + size));
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(result)




// // // // // // // // // // // // // // // // // // // image = [[1,1,0],[1,0,1],[0,0,0]]
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < image.length; i++) {
// // // // // // // // // // // // // // // // // // //     image[i] = image[i].reverse()
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < image.length; i++) {
// // // // // // // // // // // // // // // // // // //     for (let j = 0; j < image.length; j++) {
// // // // // // // // // // // // // // // // // // //         if(image[i][j] == 1){
// // // // // // // // // // // // // // // // // // //             image[i][j] = 0
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //         else{
// // // // // // // // // // // // // // // // // // //             image[i][j] = 1
// // // // // // // // // // // // // // // // // // //         }

// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(image)


// // // // // // // // // // // // // // // // // // // mat = [[1, 1, 0, 0, 0], [1, 1, 1, 1, 0], [1, 0, 0, 0, 0], [1, 1, 0, 0, 0], [1, 1, 1, 1, 1]]
// // // // // // // // // // // // // // // // // // // k = 3
// // // // // // // // // // // // // // // // // // // let arr = []
// // // // // // // // // // // // // // // // // // // let length = mat[0].length
// // // // // // // // // // // // // // // // // // // let count = 0
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < mat.length; i++) {
// // // // // // // // // // // // // // // // // // //     for (let j = 0; j < length; j++) {
// // // // // // // // // // // // // // // // // // //         if (mat[i][j] == 1) {
// // // // // // // // // // // // // // // // // // //             count++
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     arr.push(count)
// // // // // // // // // // // // // // // // // // //     count = 0

// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(arr)
// // // // // // // // // // // // // // // // // // // const indexedArr = arr.map((value, index) => [value, index]);
// // // // // // // // // // // // // // // // // // // indexedArr.sort((a, b) => a[0] - b[0]);

// // // // // // // // // // // // // // // // // // // const smallestIndexes = indexedArr.slice(0, k).map(pair => pair[1]);
// // // // // // // // // // // // // // // // // // // console.log(smallestIndexes)

// // // // // // // // // // // // // // // // // // word = "abcde"
// // // // // // // // // // // // // // // // // // // word = word.split("")
// // // // // // // // // // // // // // // // // // // let array = new Array(26).fill(0)
// // // // // // // // // // // // // // // // // // // //Count frequency
// // // // // // // // // // // // // // // // // // // for (const countf of word) {
// // // // // // // // // // // // // // // // // // //     array[countf.charCodeAt(0) - 'a'.charCodeAt(0)]++
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // // Sort frequency
// // // // // // // // // // // // // // // // // // // array.sort((a,b)=>b-a)
// // // // // // // // // // // // // // // // // // // console.log(array)
// // // // // // // // // // // // // // // // // // // // Count Passes
// // // // // // // // // // // // // // // // // // // let passes = 0
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < 26; i++) {
// // // // // // // // // // // // // // // // // // //     if(array[i] == 0) break
// // // // // // // // // // // // // // // // // // //     passes = passes + Math.floor(i/8 +1) * array[i]
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(passes)
// // // // // // // // // // // // // // // // // // // word = "aabbccddeeffgghhiiiiii"
// // // // // // // // // // // // // // // // // // // word = word.split("")
// // // // // // // // // // // // // // // // // // // let map = new Map()
// // // // // // // // // // // // // // // // // // // word.forEach(element => {
// // // // // // // // // // // // // // // // // // //     if (map.has(element)) {
// // // // // // // // // // // // // // // // // // //         map.set(element, map.get(element) + 1)
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else {
// // // // // // // // // // // // // // // // // // //         map.set(element, 1)
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // });
// // // // // // // // // // // // // // // // // // // array = Array.from((map.values()))
// // // // // // // // // // // // // // // // // // // array.sort((a, b) => b - a)
// // // // // // // // // // // // // // // // // // // let passes = 0
// // // // // // // // // // // // // // // // // // // let count = 0
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < array.length; i++) {
// // // // // // // // // // // // // // // // // // //     if (count < 8) {
// // // // // // // // // // // // // // // // // // //         passes += array[i] * 1
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else if (count >= 8 && count < 16) {
// // // // // // // // // // // // // // // // // // //         passes += array[i] * 2
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else if (count >= 16 && count <= 24) {
// // // // // // // // // // // // // // // // // // //         passes += array[i] * 3
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else if (count >= 24 && count< 32) {
// // // // // // // // // // // // // // // // // // //         passes += array[i] * 4
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     count++
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(passes)












// // // // // // // // // // // // // // // // // // // let map = new Map()
// // // // // // // // // // // // // // // // // // // let map2 = new Map()
// // // // // // // // // // // // // // // // // // // pattern = pattern.split('')
// // // // // // // // // // // // // // // // // // // s = s.split(' ')
// // // // // // // // // // // // // // // // // // // pattern.forEach(element => {
// // // // // // // // // // // // // // // // // // //     if (map.has(element)) {
// // // // // // // // // // // // // // // // // // //         map.set(element, map.get(element) + 1)
// // // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else {
// // // // // // // // // // // // // // // // // // //         map.set(element, 1)
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // });
// // // // // // // // // // // // // // // // // // // s.forEach(element => {
// // // // // // // // // // // // // // // // // // //     if (map2.has(element)) {
// // // // // // // // // // // // // // // // // // //         map2.set(element, map2.get(element) + 1)
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else {
// // // // // // // // // // // // // // // // // // //         map2.set(element, 1)
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // });
// // // // // // // // // // // // // // // // // // // array = Array.from(map.keys())
// // // // // // // // // // // // // // // // // // // array2 = Array.from(map2.keys())
// // // // // // // // // // // // // // // // // // // console.log(array)
// // // // // // // // // // // // // // // // // // // console.log(array2)
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < array.length; i++) {
// // // // // // // // // // // // // // // // // // //     if (array[i] == array2[i]) {
// // // // // // // // // // // // // // // // // // //         continue
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else {
// // // // // // // // // // // // // // // // // // //         console.log('false')
// // // // // // // // // // // // // // // // // // //     }

// // // // // // // // // // // // // // // // // // // }

// // // // // // // // // // // // // // // // // // // [2, 4, 6], [5, 7, 9]
// // // // // // // // // // // // // // // // // // // nums1 = [2, 6, 4], nums2 = [9, 7, 5]
// // // // // // // // // // // // // // // // // // // nums1 = [10], nums2 = [5]
// // // // // // // // // // // // // // // // // // // nums1 = [908, 543, 925, 690, 327, 599, 940, 845, 628, 397, 438, 173, 618, 437, 709, 971, 866, 866, 272, 660, 868, 886, 208, 937, 841, 740, 215, 39, 898, 100, 629, 648, 863, 87, 79, 106, 876, 955, 263, 456, 726, 380, 798, 974, 641, 374, 902, 634, 369, 68, 332, 752, 974, 671, 642, 45, 358, 251, 913, 780, 254, 485, 779, 944, 565, 511, 438, 892, 57]
// // // // // // // // // // // // // // // // // // // nums2 = [340, 547, 236, 691, 653, 351, 610, 420, 956, 624, 420, 623, 937, 722, 419, 362, 780, 197, 467, 69, 926, 642, 39, 314, 761, 827, 21, 611, 493, 919, 27, 82, 907, 50, 734, 356, 874, 845, 922, 880, 190, 616, 850, 254, 884, 848, 953, 956, 848, 672, 379, 895, 868, 233, 155, 823, 88, 309, 438, 600, 630, 525, 581, 762, 61, 245, 890, 708, 858]
// // // // // // // // // // // // // // // // // // // let first = Math.min(...nums1)
// // // // // // // // // // // // // // // // // // // let second = Math.min(...nums2)
// // // // // // // // // // // // // // // // // // // if (first < second) {
// // // // // // // // // // // // // // // // // // //     a = Math.min(first - second)
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // else {
// // // // // // // // // // // // // // // // // // //     a = (Math.min(second - first))
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(a)
// // // // // // // // // // // // // // // // // // // // if (nums1[0] < nums2[0]) {
// // // // // // // // // // // // // // // // // // // //     a = Math.abs(nums1[0] - nums2[0])
// // // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // // else {
// // // // // // // // // // // // // // // // // // // //     a = nums2[0] - nums1[0]
// // // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // // for (let i = 0; i < nums1.length; i++) {
// // // // // // // // // // // // // // // // // // // //     if (nums1[0] < nums2[0]) {
// // // // // // // // // // // // // // // // // // // //         b = Math.abs(nums1[0] - nums2[0])
// // // // // // // // // // // // // // // // // // // //         if (a == b) {
// // // // // // // // // // // // // // // // // // // //             continue
// // // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // // //         else {
// // // // // // // // // // // // // // // // // // // //             console.log('false')
// // // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // //     else {
// // // // // // // // // // // // // // // // // // // //         b = nums2[0] - nums1[0]
// // // // // // // // // // // // // // // // // // // //         if (a == b) {
// // // // // // // // // // // // // // // // // // // //             continue
// // // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // // //         else {
// // // // // // // // // // // // // // // // // // // //             console.log('false')
// // // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // // //     }

// // // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // // console.log(b)



// // // // // // // // // // // // // // // // // // // nums1 = [2,3,2], nums2 = [1,2]
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < nums1.length; i++) {
// // // // // // // // // // // // // // // // // // //     if()
// // // // // // // // // // // // // // // // // // // }

// // // // // // // // // // // // // // // // // // // salary = [4000, 3000, 1000, 2000]
// // // // // // // // // // // // // // // // // // // salary = [25000,48000,57000,86000,33000,10000,42000,3000,54000,29000,79000,40000]
// // // // // // // // // // // // // // // // // // // salary = salary.sort((a,b)=>a-b)
// // // // // // // // // // // // // // // // // // // let sum = 0
// // // // // // // // // // // // // // // // // // // let count = 0
// // // // // // // // // // // // // // // // // // // console.log(salary)
// // // // // // // // // // // // // // // // // // // for (let i = 1; i < salary.length - 1; i++) {
// // // // // // // // // // // // // // // // // // //     sum = sum + salary[i]
// // // // // // // // // // // // // // // // // // //     count++
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(sum/count)
// // // // // // // // // // // // // // // // // // // let a = Math.min(...salary)
// // // // // // // // // // // // // // // // // // // let b = Math.max(...salary)
// // // // // // // // // // // // // // // // // // // index_a = salary.indexOf(a)
// // // // // // // // // // // // // // // // // // // index_b = salary.indexOf(b)
// // // // // // // // // // // // // // // // // // // salary.splice(index_a, 1)
// // // // // // // // // // // // // // // // // // // salary.splice(index_b, 1)
// // // // // // // // // // // // // // // // // // // let sum = 0
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < salary.length; i++) {
// // // // // // // // // // // // // // // // // // //     sum = sum + salary[i]
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(sum / salary.length)


// // // // // // // // // // // // // // // // // // // nums = [2, 1, 3]
// // // // // // // // // // // // // // // // // // // nums = [5,4,3,8]
// // // // // // // // // // // // // // // // // // // let arr1 = []
// // // // // // // // // // // // // // // // // // // let arr2 = []
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < nums.length; i++) {
// // // // // // // // // // // // // // // // // // //     if (arr1.length == 0) {
// // // // // // // // // // // // // // // // // // //         arr1.push(nums[i])
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else if (arr2.length == 0) {
// // // // // // // // // // // // // // // // // // //         arr2.push(nums[i])
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else if (arr1[arr1.length - 1] > arr2[arr2.length - 1]){
// // // // // // // // // // // // // // // // // // //         arr1.push(nums[i])
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else{
// // // // // // // // // // // // // // // // // // //         arr2.push(nums[i])
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(arr1.concat(arr2))
// // // // // // // // // // // // // // // // // // // nums = [1,2,3,3,2,1]
// // // // // // // // // // // // // // // // // // // nums = [1,2,3]
// // // // // // // // // // // // // // // // // // // nums = [1,2,1,3]
// // // // // // // // // // // // // // // // // // // nums = [1, 2, 2, 1]
// // // // // // // // // // // // // // // // // // // let map = new Map()
// // // // // // // // // // // // // // // // // // // nums.forEach(element => {
// // // // // // // // // // // // // // // // // // //     if (map.has(element)) {
// // // // // // // // // // // // // // // // // // //         map.set(element, map.get(element) + 1)
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else {
// // // // // // // // // // // // // // // // // // //         map.set(element, 1)
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // });
// // // // // // // // // // // // // // // // // // // let arr = []
// // // // // // // // // // // // // // // // // // // for (const [values, keys] of map) {
// // // // // // // // // // // // // // // // // // //     if (keys == 2) {
// // // // // // // // // // // // // // // // // // //         arr.push(values)
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }

// // // // // // // // // // // // // // // // // // // let xor = 0
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < arr.length; i++) {
// // // // // // // // // // // // // // // // // // //     xor = xor ^ arr[i]
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(xor)

// // // // // // // // // // // // // // // // // // // if (arr.length > 1){
// // // // // // // // // // // // // // // // // // //    xor = arr[0] ^ arr[1]
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // else if(arr.length == 1){
// // // // // // // // // // // // // // // // // // //     console.log(arr[0])
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // else{
// // // // // // // // // // // // // // // // // // //     console.log(0)
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(xor)

// // // // // // // // // // // // // // // // // // // word = "abBCab"
// // // // // // // // // // // // // // // // // // // word = "aaAbcBC"
// // // // // // // // // // // // // // // // // // // word = "abBCab"
// // // // // // // // // // // // // // // // // // // word = "AbB"
// // // // // // // // // // // // // // // // // // // let a;
// // // // // // // // // // // // // // // // // // // let set = new Set([...word])
// // // // // // // // // // // // // // // // // // // console.log(set)
// // // // // // // // // // // // // // // // // // // const letters = 'abcdefghijklmnopqrstuvwxyz';
// // // // // // // // // // // // // // // // // // // let count = 0
// // // // // // // // // // // // // // // // // // // for (const letter of letters) {
// // // // // // // // // // // // // // // // // // //     if(set.has(letter) && set.has(letter.toUpperCase())){
// // // // // // // // // // // // // // // // // // //         count = count + 1
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(count)
// // // // // // // // // // // // // // // // // // // word = word.split('')
// // // // // // // // // // // // // // // // // // // let map = new Map()
// // // // // // // // // // // // // // // // // // // word.forEach(element => {
// // // // // // // // // // // // // // // // // // //     if (map.has(element)) {
// // // // // // // // // // // // // // // // // // //         map.set(element, map.get(element) + 1)
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     else {
// // // // // // // // // // // // // // // // // // //         map.set(element, 1)
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // });
// // // // // // // // // // // // // // // // // // // let array = Array.from(map.keys())

// // // // // // // // // // // // // // // // // // // let count = 0
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < array.length; i++) {
// // // // // // // // // // // // // // // // // // //     for (let j = i + 1; j < array.length; j++) {
// // // // // // // // // // // // // // // // // // //         if (array[i] == array[i].toUpperCase()) {
// // // // // // // // // // // // // // // // // // //             a = array[i].toLowerCase()
// // // // // // // // // // // // // // // // // // //             if (a == array[j]) {
// // // // // // // // // // // // // // // // // // //                 count++
// // // // // // // // // // // // // // // // // // //             }
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //         else if (array[i] == array[i].toLowerCase()) {
// // // // // // // // // // // // // // // // // // //             a = array[i].toUpperCase()
// // // // // // // // // // // // // // // // // // //             if (a == array[j]) {
// // // // // // // // // // // // // // // // // // //                 count++
// // // // // // // // // // // // // // // // // // //             }
// // // // // // // // // // // // // // // // // // //         }

// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(count)


// // // // // // // // // // // // // // // // // // // nums1 = [4,3,2,3,1], nums2 = [2,2,5,2,3,6]
// // // // // // // // // // // // // // // // // // // let answer1 = 0
// // // // // // // // // // // // // // // // // // // let answer2 = 0
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < nums1.length; i++) {
// // // // // // // // // // // // // // // // // // //     if(nums2.includes(nums1[i])){
// // // // // // // // // // // // // // // // // // //         answer1++
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < nums2.length; i++) {
// // // // // // // // // // // // // // // // // // //     if(nums1.includes(nums2[i])){
// // // // // // // // // // // // // // // // // // //         answer2++
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(answer1,answer2)
// // // // // // // // // // // // // // // // // // // nums = [1,2,3], k = 0
// // // // // // // // // // // // // // // // // // // nums = [10, 5, 2, 6], k = 100
// // // // // // // // // // // // // // // // // // // let count = 0
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < nums.length; i++) {
// // // // // // // // // // // // // // // // // // //     product = 1
// // // // // // // // // // // // // // // // // // //     for (let j = i; j < nums.length; j++) {
// // // // // // // // // // // // // // // // // // //         product = product * nums[j]
// // // // // // // // // // // // // // // // // // //         if(product<k){
// // // // // // // // // // // // // // // // // // //             count++
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //         else{
// // // // // // // // // // // // // // // // // // //             continue
// // // // // // // // // // // // // // // // // // //         }

// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(count)
// // // // // // // // // // // // // // // // // // // let subsets = []
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < nums.length; i++) {
// // // // // // // // // // // // // // // // // // //     for (let j = i + 1; j <= nums.length; j++) {
// // // // // // // // // // // // // // // // // // //         subsets.push(nums.slice(i, j))
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // let count = 0
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < subsets.length; i++) {
// // // // // // // // // // // // // // // // // // //     let p = subsets[i].reduce((acc,dcc)=>acc*dcc*1)
// // // // // // // // // // // // // // // // // // //     if(p<k){
// // // // // // // // // // // // // // // // // // //         count++
// // // // // // // // // // // // // // // // // // //     }

// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(count)


// // // // // // // // // // // // // // // // // // // nums1 = [1, 2, 3, 2, 1], nums2 = [3, 2, 1, 4, 7]
// // // // // // // // // // // // // // // // // // // let subsets = []
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < nums1.length; i++) {
// // // // // // // // // // // // // // // // // // //     for (let j = i + 1; j <= nums1.length; j++) {
// // // // // // // // // // // // // // // // // // //         subsets.push(nums1.slice(i, j))
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(subsets)
// // // // // // // // // // // // // // // // // // // let subset2 = []
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < nums2.length; i++) {
// // // // // // // // // // // // // // // // // // //     for (let j = i + 1; j <= nums2.length; j++) {
// // // // // // // // // // // // // // // // // // //         subset2.push(nums2.slice(i, j))
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(subset2)
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < subset2.length; i++) {
// // // // // // // // // // // // // // // // // // //     for (let j = 0; j < subsets.length; j++) {
// // // // // // // // // // // // // // // // // // //         if (subset2[i] == subsets[j]) {
// // // // // // // // // // // // // // // // // // //             console.log(subset2)
// // // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // }

// // // // // // // // // // // // // // // // // // // head = [1,2,3], k = 5
// // // // // // // // // // // // // // // // // // // let arr = []
// // // // // // // // // // // // // // // // // // // for (let i = 0; i < k; i++) {
// // // // // // // // // // // // // // // // // // //     arr.push([head[i]])
// // // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // // console.log(arr)

// // // // // // // // // // // // // // // // // // nums = [1, 2], operations = [[1, 3], [2, 1], [3, 2]]
// // // // // // // // // // // // // // // // // // nums = [1, 2, 4, 6], operations = [[1, 3], [4, 7], [6, 1]]
// // // // // // // // // // // // // // // // // // let nums = [1, 2];
// // // // // // // // // // // // // // // // // // let operations = [[1, 3], [2, 1], [3, 2]];

// // // // // // // // // // // // // // // // // // // Step 1: Create a map of direct replacements
// // // // // // // // // // // // // // // // // // let map = new Map();
// // // // // // // // // // // // // // // // // // for (const [value, key] of operations) {
// // // // // // // // // // // // // // // // // //     map.set(value, key);
// // // // // // // // // // // // // // // // // // }

// // // // // // // // // // // // // // // // // // // Step 2: Optimize the map to resolve all transitive replacements
// // // // // // // // // // // // // // // // // // let optimizedReplaceMap = new Map();
// // // // // // // // // // // // // // // // // // for (let [key, value] of map) {
// // // // // // // // // // // // // // // // // //     let current = key;
// // // // // // // // // // // // // // // // // //     while (map.has(current)) {
// // // // // // // // // // // // // // // // // //         current = map.get(current);
// // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // //     optimizedReplaceMap.set(key, current);
// // // // // // // // // // // // // // // // // // }

// // // // // // // // // // // // // // // // // // // Step 3: Apply the optimized replacements to nums
// // // // // // // // // // // // // // // // // // let result = nums.map(num => optimizedReplaceMap.get(num) || num);
// // // // // // // // // // // // // // // // // // console.log(result); // Output: [2, 1]


// // // // // // // // // // // // // // // // // // // let include = 0
// // // // // // // // // // // // // // // // // // // let not = 1
// // // // // // // // // // // // // // // // // // // i = 0
// // // // // // // // // // // // // // // // // // // while (j <= operations.length - 1) {
// // // // // // // // // // // // // // // // // // //     if (nums.includes(operations[j][include]) && !nums.includes(operations[j][not])) {
// // // // // // // // // // // // // // // // // // //         let index = nums.indexOf(operations[j][include])
// // // // // // // // // // // // // // // // // // //         nums[index] = operations[j][not]

// // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // //     j++
// // // // // // // // // // // // // // // // // // //     i++
// // // // // // // // // // // // // // // // // // // }

// // // // // // // // // // // // // // // // // // // console.log(nums)

// // // // // // // // // // // // // // // // // // nums = [[7, 2, 1], [6, 4, 2], [6, 5, 3], [3, 2, 1]]
// // // // // // // // // // // // // // // // // // nums = [[1, 8, 16, 15, 12, 9, 15, 11, 18, 6, 16, 4, 9, 4], [3, 19, 8, 17, 19, 4, 9, 3, 2, 10, 15, 17, 3, 11], [13, 10, 19, 20, 6, 17, 15, 14, 16, 8, 1, 17, 0, 2], [12, 20, 0, 19, 15, 10, 7, 10, 2, 6, 18, 7, 7, 4], [17, 14, 2, 2, 10, 16, 15, 3, 9, 17, 9, 3, 17, 10], [17, 6, 19, 17, 18, 9, 14, 2, 19, 12, 10, 18, 7, 9], [5, 6, 5, 1, 19, 8, 15, 2, 2, 4, 4, 1, 2, 17], [12, 16, 8, 16, 7, 6, 18, 13, 18, 8, 14, 15, 20, 11], [2, 10, 19, 3, 15, 18, 20, 10, 6, 7, 0, 8, 3, 7], [11, 5, 10, 13, 1, 3, 4, 7, 1, 18, 20, 17, 19, 2], [0, 3, 20, 6, 19, 18, 3, 12, 2, 11, 3, 1, 19, 0], [6, 5, 3, 15, 6, 1, 0, 17, 13, 19, 3, 8, 2, 7], [2, 20, 9, 11, 13, 5, 1, 16, 14, 1, 19, 3, 12, 6]]
// // // // // // // // // // // // // // // // // // for (let i = 0; i < nums.length; i++) {
// // // // // // // // // // // // // // // // // //     nums[i] = nums[i].sort((a, b) => b - a)
// // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // let a = 0
// // // // // // // // // // // // // // // // // // let i = 0
// // // // // // // // // // // // // // // // // // let j = 0
// // // // // // // // // // // // // // // // // // let arr = []
// // // // // // // // // // // // // // // // // // let sum = 0, max = 0
// // // // // // // // // // // // // // // // // // console.log(nums)
// // // // // // // // // // // // // // // // // // while (nums[i].length != 0) {
// // // // // // // // // // // // // // // // // //     arr.push(nums[i].shift())
// // // // // // // // // // // // // // // // // //     i++
// // // // // // // // // // // // // // // // // //     if (i == nums.length) {
// // // // // // // // // // // // // // // // // //         let max = Math.max(...arr)
// // // // // // // // // // // // // // // // // //         sum = sum + max
// // // // // // // // // // // // // // // // // //         arr = []
// // // // // // // // // // // // // // // // // //         j++
// // // // // // // // // // // // // // // // // //         i = 0
// // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // console.log(sum)


// // // // // // // // // // // // // // // // // // head = [1,4,3,2,5,2], x = 3
// // // // // // // // // // // // // // // // // // head = [2,1], x = 2
// // // // // // // // // // // // // // // // // // let str = ''
// // // // // // // // // // // // // // // // // // let str2 = ''
// // // // // // // // // // // // // // // // // // for (let i = 0; i < head.length; i++) {
// // // // // // // // // // // // // // // // // //     if(head[i] < x){
// // // // // // // // // // // // // // // // // //         str = str + head[i]
// // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // //     else{
// // // // // // // // // // // // // // // // // //         str2 =  str2 + head[i]
// // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // console.log(str+str2)

// // // // // // // // // // // // // // // // // // for (let i = 0; i < nums.length; i++) {
// // // // // // // // // // // // // // // // // //     for (let j = i; j < nums.length; j++) {

// // // // // // // // // // // // // // // // // //         if (Math.abs(i - j) >= indexDifference && Math.abs(nums[i] - nums[j] >= valueDifference)) {
// // // // // // // // // // // // // // // // // //             console.log([i, j])

// // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // console.log([-1, -1])

// // // // // // // // // // // // // // // // // // nums = [5, 1, 4, 1], indexDifference = 2, valueDifference = 4
// // // // // // // // // // // // // // // // // // nums = [1, 2, 3], indexDifference = 2, valueDifference = 4
// // // // // // // // // // // // // // // // // // nums = [2, 1], indexDifference = 0, valueDifference = 0
// // // // // // // // // // // // // // // // // // function search(nums, indexDifference, valueDifference) {
// // // // // // // // // // // // // // // // // //     let i = 0
// // // // // // // // // // // // // // // // // //     let j = 0

// // // // // // // // // // // // // // // // // //     while (i <= nums.length - 1) {
// // // // // // // // // // // // // // // // // //         if (j != nums.length - 1) {
// // // // // // // // // // // // // // // // // //             j++
// // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // //         if (j == nums.length - 1) {
// // // // // // // // // // // // // // // // // //             i++
// // // // // // // // // // // // // // // // // //             j = i
// // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // //         if (Math.abs(i - j) >= indexDifference && Math.abs(nums[i] - nums[j] >= valueDifference)) {
// // // // // // // // // // // // // // // // // //             return [i, j]
// // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // let s = search([5, 1, 4, 1], 2, 4)
// // // // // // // // // // // // // // // // // // console.log(s)

// // // // // // // // // // // // // // // // // // // 
// // // // // // // // // // // // // // // // // // nums = [5, 10, 1, 5, 2], k = 1
// // // // // // // // // // // // // // // // // // let arr = []
// // // // // // // // // // // // // // // // // // for (let i = 0; i < nums.length; i++) {
// // // // // // // // // // // // // // // // // //     let b = BigInt(i).toString(2)
// // // // // // // // // // // // // // // // // //     arr.push(b)
// // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // console.log(arr)
// // // // // // // // // // // // // // // // // // let count = 0
// // // // // // // // // // // // // // // // // // let sum = 0
// // // // // // // // // // // // // // // // // // for (let j = 0; j < arr.length; j++) {
// // // // // // // // // // // // // // // // // //     let c = arr[j].split("")
// // // // // // // // // // // // // // // // // //     for (let l = 0; l < c.length; l++) {
// // // // // // // // // // // // // // // // // //         if (c[l] == '1') {
// // // // // // // // // // // // // // // // // //             count++
// // // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // //     if (count == k) {
// // // // // // // // // // // // // // // // // //         sum = sum + nums[j]
// // // // // // // // // // // // // // // // // //         count = 0
// // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // //     else {
// // // // // // // // // // // // // // // // // //         count = 0
// // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // console.log(sum)

// // // // // // // // // // // // // // // // // // s1 = "abcd", s2 = "dacb"
// // // // // // // // // // // // // // // // // // s1 = "abcd", s2 = "cdab"
// // // // // // // // // // // // // // // // // // let j = 1
// // // // // // // // // // // // // // // // // // let i = 0
// // // // // // // // // // // // // // // // // // s2 = s2.split("")
// // // // // // // // // // // // // // // // // // s1 = s1.split('')

// // // // // // // // // // // // // // // // // // while (i <= s2.length - 1) {
// // // // // // // // // // // // // // // // // //     if (j - i == 2 && s1[i] != s2[i]) {
// // // // // // // // // // // // // // // // // //         let temp = s2[i]
// // // // // // // // // // // // // // // // // //         s2[i] = s2[j]
// // // // // // // // // // // // // // // // // //         s2[j] = temp
// // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // //     if (j < s2.length - 1) {
// // // // // // // // // // // // // // // // // //         j++
// // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // //     else {
// // // // // // // // // // // // // // // // // //         i++
// // // // // // // // // // // // // // // // // //         j = i + 1
// // // // // // // // // // // // // // // // // j = 1
// // // // // // // // // // // // // // // // // let max_sum = 0
// // // // // // // // // // // // // // // // // while (i <= nums.length - 1) {
// // // // // // // // // // // // // // // // //   if(j>nums.length-1){
// // // // // // // // // // // // // // // // //     break}
// // // // // // // // // // // // // // // // //     let array = nums[i].toString().split('').map(Number);
// // // // // // // // // // // // // // // // //     let array2 = nums[j].toString().split('').map(Number);
// // // // // // // // // // // // // // // // //     let max = Math.max(...array)
// // // // // // // // // // // // // // // // //     let max2 = Math.max(...array2)
// // // // // // // // // // // // // // // // //     if (max == max2) {
// // // // // // // // // // // // // // // // //         let sum = nums[i] + nums[j]
// // // // // // // // // // // // // // // // //         if (sum > max_sum) {
// // // // // // // // // // // // // // // // //             max_sum = sum
// // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // //     if (j < nums.length - 1){
// // // // // // // // // // // // // // // // //         j++
// // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // //     else{
// // // // // // // // // // // // // // // // //         i++
// // // // // // // // // // // // // // // // //         j = i+1
// // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // console.log(max_sum)//     }
// // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // if (s1 == s2.join('')) {
// // // // // // // // // // // // // // // // // //     console.log('true')
// // // // // // // // // // // // // // // // // // }

// // // // // // // // // // // // // // // // // let nums = [2536, 1613, 3366, 162]
// // // // // // // // // // // // // // // // // let max2 = 0
// // // // // // // // // // // // // // // // // let i = 0
// // // // // // // // // // // // // // // // // let 
// // // // // // // // // // // // // // // // // let nums = [3, 1, 5, 4, 2], k = 5
// // // // // // // // // // // // // // // // // nums = [3, 2, 5, 3, 1], k = 3
// // // // // // // // // // // // // // // // // nums = [1,2,2], k = 2
// // // // // // // // // // // // // // // // // let count = 0
// // // // // // // // // // // // // // // // // let set = new Set()
// // // // // // // // // // // // // // // // // for (let i = nums.length - 1; i >= 0; i--) {
// // // // // // // // // // // // // // // // //     if (nums[i] <= k) {
// // // // // // // // // // // // // // // // //         set.add(nums[i])
// // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // //     if (set.size == k) {
// // // // // // // // // // // // // // // // //         console.log(nums.length - i)
// // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // } 


// // // // // // // // // // // // // // // // // nums = [1, 2, 3, 4]

// // // // // // // // // // // // // // // // // let n = nums.length
// // // // // // // // // // // // // // // // // let array = Array(n).fill(1)
// // // // // // // // // // // // // // // // // let left = 1
// // // // // // // // // // // // // // // // // for (let i = 0; i < nums.length; i++) {
// // // // // // // // // // // // // // // // //     array[i] = array[i] * left
// // // // // // // // // // // // // // // // //     left = left * nums[i]
// // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // let right = 1
// // // // // // // // // // // // // // // // // for (let i = nums.length - 1; i >= 0; i--) {
// // // // // // // // // // // // // // // // //     array[i] = array[i] * right
// // // // // // // // // // // // // // // // //     right = right * nums[i]
// // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // console.log(array)

// // // // // // // // // // // // // // // // // nums = [5, 6, 2, 7, 4]
// // // // // // // // // // // // // // // // // nums = [4,2,5,9,7,4,8]
// // // // // // // // // // // // // // // // // nums.sort((a, b) => b - a)
// // // // // // // // // // // // // // // // // let str = ''
// // // // // // // // // // // // // // // // // let str2 = ''
// // // // // // // // // // // // // // // // // for (let i = 0; i < 1; i++) {
// // // // // // // // // // // // // // // // //     str = nums[i] * nums[i + 1]
// // // // // // // // // // // // // // // // //     str2 = nums[nums.length - 1] * nums[nums.length - 2]
// // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // console.log(str - str2)

// // // // // // // // // // // // // // // // // console.log(s.trim())
// // // // // // // // // // // // // // // // // 
// // // // // // // // // // // // // // // // // s = '    -  43'
// // // // // // // // // // // // // // // // // if (s == null) {
// // // // // // // // // // // // // // // // //     console.log(0)
// // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // s = s.trim()
// // // // // // // // // // // // // // // // // sign = 1
// // // // // // // // // // // // // // // // // if (s[0] == '+' || s[0] == '-') {
// // // // // // // // // // // // // // // // //     if (s[0] == '-') {
// // // // // // // // // // // // // // // // //         sign = -1
// // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // //     else {
// // // // // // // // // // // // // // // // //         sign = 1
// // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // s = s.split("")
// // // // // // // // // // // // // // // // // let res = 0
// // // // // // // // // // // // // // // // // if (s[0] != '-') {
// // // // // // // // // // // // // // // // //     for (let i = 0; i < s.length; i++) {


// // // // // // // // // // // // // // // // //         if (!Number(s[i])) {
// // // // // // // // // // // // // // // // //             break
// // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // //         res = res * 10 + Number(s[i])
// // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // else {

// // // // // // // // // // // // // // // // //     for (let i = 1; i < s.length; i++) {


// // // // // // // // // // // // // // // // //         if (!Number(s[i])) {
// // // // // // // // // // // // // // // // //             break
// // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // //         res = res * 10 + Number(s[i])
// // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // res = res * sign
// // // // // // // // // // // // // // // // // res = Math.max(Math.min(res, 2 ** 31 - 1), Math.pow(-2, 31))

// // // // // // // // // // // // // // // // // console.log(res)



// // // // // // // // // // // // // // // // asteroids = [10, 2, -5]
// // // // // // // // // // // // // // // // asteroids = [5, 10, -5]
// // // // // // // // // // // // // // // // asteroids = [-2, -1, 1, 2]
// // // // // // // // // // // // // // // // asteroids = [8, -8]
// // // // // // // // // // // // // // // // // asteroids = [-2,1,1,-1]
// // // // // // // // // // // // // // // // // let stack = []
// // // // // // // // // // // // // // // // // for (let i = 0; i < asteroids.length; i++) {
// // // // // // // // // // // // // // // // //     if (stack.length == 0) {
// // // // // // // // // // // // // // // // //         stack.push(asteroids[i])
// // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // //     else {
// // // // // // // // // // // // // // // // //         if (stack[stack.length - 1] < 0 && asteroids[i] > 0) {
// // // // // // // // // // // // // // // // //             stack.push(asteroids[i])
// // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // //         else if (stack[stack.length - 1] > 0 && asteroids[i] < 0) {

// // // // // // // // // // // // // // // // //             while (stack.length > 0 && stack[stack.length - 1] > 0 && asteroids[i] < 0) {
// // // // // // // // // // // // // // // // //                 a = asteroids[i] * -1
// // // // // // // // // // // // // // // // //                 if (a > stack[stack.length - 1]) {
// // // // // // // // // // // // // // // // //                     stack.pop()
// // // // // // // // // // // // // // // // //                     if (stack.length === 0 || stack[stack.length - 1] < 0) {
// // // // // // // // // // // // // // // // //                         stack.push(asteroids[i]);
// // // // // // // // // // // // // // // // //                         break;
// // // // // // // // // // // // // // // // //                     }
// // // // // // // // // // // // // // // // //                 }
// // // // // // // // // // // // // // // // //                 else if (a == stack[stack.length - 1]) {
// // // // // // // // // // // // // // // // //                     stack.pop()
// // // // // // // // // // // // // // // // //                 }
// // // // // // // // // // // // // // // // //                 else {
// // // // // // // // // // // // // // // // //                     break
// // // // // // // // // // // // // // // // //                 }
// // // // // // // // // // // // // // // // //             }
// // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // //         else if (stack[stack.length - 1] > 0 && asteroids[i] > 0) {
// // // // // // // // // // // // // // // // //             stack.push(asteroids[i])
// // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // //         else {
// // // // // // // // // // // // // // // // //             stack.push(asteroids[i])
// // // // // // // // // // // // // // // // //         }

// // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // console.log(stack)

// // // // // // // // // // // // // // // // // nums = [1, 2, 2, 1], k = 1
// // // // // // // // // // // // // // // // // let count = 0
// // // // // // // // // // // // // // // // // for (let i = 0; i < nums.length;i++){
// // // // // // // // // // // // // // // // //     for (let j = i+1; j < nums.length; j++) {
// // // // // // // // // // // // // // // // //         if(Math.abs(nums[i] - nums[j]) == k && i<j){
// // // // // // // // // // // // // // // // //             count++
// // // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // console.log(count)


// // // // // // // // // // // // // // // // original = [1, 2, 3, 4], m = 2, n = 2
// // // // // // // // // // // // // // // // onsole.log('0')
// // // // // // // // // // // // // // // // } else {
// // // // // // // // // // // // // // // //     for (let i = 0; i < 4; i++) {
// // // // // // // // // // // // // // // //         for (let j = 0; j < 2; j++) {
// // // // // // // // // // // // // // // //             if(j == m){
// // // // // // // // // // // // // // // //                 original.slice(i,j)
// // // // // // // // // // // // // // // //             }
// // // // // // // // // // // // // // // //             arr.push([original[j]])
// // // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // // // // 
// // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // }let arr = []
// // // // // // // // // // // // // // // // if (m * n !== original.length) {
// // // // // // // // // // // // // // // //     c
// // // // // // // // // // // // // // // // console.log(arr)

// // // // // // // // // // // // // // // // seats = [4,1,5,9], students = [1,3,2,6]
// // // // // // // // // // // // // // // // // seats = [2,2,6,6], students = [1,3,2,6]
// // // // // // // // // // // // // // // // // // seats = seats.sort((a,b)=>a-b)
// // // // // // // // // // // // // // // // // // students = students.sort((a,b)=>a-b)
// // // // // // // // // // // // // // // // // // console.log(seats,students)
// // // // // // // // // // // // // // // // // // sum = 0
// // // // // // // // // // // // // // // // // // for (let i = 0; i < seats.length; i++) {
// // // // // // // // // // // // // // // // // //     if(seats[i] != students[i]){
// // // // // // // // // // // // // // // // // //         a = Math.abs(seats[i] - students[i])
// // // // // // // // // // // // // // // // // //         sum = sum + a
// // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // // // console.log(sum)

// // // // // // // // // // // // // // // // console.log(Math.round(2/2))
// // // // // // // // // // // // // // // // nums = [2,5]
// // // // // // // // // // // // // // // // nums = [2,3,-1,8,4]
// // // // // // // // // // // // // // // // nums = [4,0]
// // // // // // // // // // // // // // // // index = Math.floor(nums.length/2)
// // // // // // // // // // // // // // // // left_sum = nums.slice(0,index)
// // // // // // // // // // // // // // // // right_sum = nums.slice(index+1,nums.length)
// // // // // // // // // // // // // // // // let left = left_sum.reduce((acc,dcc)=>acc+dcc,0)
// // // // // // // // // // // // // // // // let right = right_sum.reduce((acc,dcc)=>acc+dcc,0)
// // // // // // // // // // // // // // // // if(left == right){
// // // // // // // // // // // // // // // //     console.log(index+1)
// // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // else{
// // // // // // // // // // // // // // // //     console.log('-1')
// // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // nums = [2,5,6,9,10]
// // // // // // // // // // // // // // // nums = [7,5,6,8,3]

// // // // // // // // // // // // // // // let min = Math.min(...nums)
// // // // // // // // // // // // // // // let max = Math.max(...nums)
// // // // // // // // // // // // // // // let min_2 = -Infinity
// // // // // // // // // // // // // // // let max_2 = -Infinity
// // // // // // // // // // // // // // // for (let i = 1; i <= min; i++) {
// // // // // // // // // // // // // // //     if(min % i == 0 && max % i == 0){
// // // // // // // // // // // // // // //         if(i>max_2){
// // // // // // // // // // // // // // //             min_2 = max_2
// // // // // // // // // // // // // // //             max_2 = i
// // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // console.log(max_2)
// // // // // // // // // // // // // // // s = "abacbc"
// // // // // // // // // // // // // // // // s = s.split("")
// // // // // // // // // // // // // // // // let map = new Map()
// // // // // // // // // // // // // // // // s.forEach(element => {
// // // // // // // // // // // // // // // //     if(map.has(element)){
// // // // // // // // // // // // // // // //         map.set(element,map.get(element)+1)
// // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // //     else{
// // // // // // // // // // // // // // // //         map.set(element,1)
// // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // });
// // // // // // // // // // // // // // // // let arr = Array.from(map.values())
// // // // // // // // // // // // // // // // console.log(arr)
// // // // // // // // // // // // // // // // let i = arr[0]
// // // // // // // // // // // // // // // // for (const  j of arr) {
// // // // // // // // // // // // // // // //     if(i !== j){
// // // // // // // // // // // // // // // //         console.log('false')
// // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // console.log('true')

// // // // // // // // // // // // // // // patterns = ["a", "abc", "bc", "d"], word = "abc"
// // // // // // // // // // // // // // // // console.log(word.includes(patterns[3]))
// // // // // // // // // // // // // // // let count = 0
// // // // // // // // // // // // // // // for (let i = 0; i < patterns.length; i++) {
// // // // // // // // // // // // // // //     if(word.includes(patterns[i])){
// // // // // // // // // // // // // // //         count++
// // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // console.log(count)

// // // // // // // // // // // // // // // nums = [1, 3, 4, 1, 2, 3, 1]
// // // // // // // // // // // // // // // let map = new Map()
// // // // // // // // // // // // // // // let arr = []
// // // // // // // // // // // // // // // let v = []
// // // // // // // // // // // // // // // let i = 0
// // // // // // // // // // // // // // // while (i <= nums.length - 1) {
// // // // // // // // // // // // // // //     if (!arr.includes(nums[i])) {
// // // // // // // // // // // // // // //         arr.push(nums[i])
// // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // //     else if (arr.includes(nums[i])) {
// // // // // // // // // // // // // // //         while (arr.length != 0) {
// // // // // // // // // // // // // // //             v.push([arr.shift()])
// // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // //         arr.push(nums[i])
// // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // //     i++
// // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // console.log(v)
// // // // // // // // // // // // // // // score = [[64766, 11978, 20502, 21365, 79611, 36797, 58431, 89540, 59373, 25955], [51305, 66104, 88468, 5333, 17233, 32521, 14087, 42738, 46669, 65662], [93306, 92793, 54009, 9715, 24354, 24895, 20069, 93332, 73836, 64359], [23358, 84599, 4675, 20979, 76889, 34630, 64098, 23468, 71448, 17848]]
// // // // // // // // // // // // // // // let k = 5
// // // // // // // // // // // // // // // console.log(score.length)
// // // // // // // // // // // // // // // // score = [[3, 4], [5, 6]], k = 0
// // // // // // // // // // // // // // // for (let i = 0; i < score.length - 1; i++) {
// // // // // // // // // // // // // // //     for (let j = i+1; j < score.length; j++) {

// // // // // // // // // // // // // // //         if (score[i][k] < score[j][k]) {
// // // // // // // // // // // // // // //             [score[i], score[j]] = [score[j], score[i]]
// // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // console.log(score)
// // // // // // // // // // // // // // // nums = [3,2,1,4]
// // // // // // // // // // // // // // // let max = Math.max(...nums)
// // // // // // // // // // // // // // // let min = Math.min(...nums)
// // // // // // // // // // // // // // // for (let i = 0; i < nums.length; i++) {
// // // // // // // // // // // // // // //     if(nums[i] !== max && nums[i] != min){
// // // // // // // // // // // // // // //         console.log(nums[i])
// // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // }

// // // // // // // // // // // // // // // reward1 = [1, 1, 3, 4], reward2 = [4, 4, 1, 1], k = 2
// // // // // // // // // // // // // // // reward1 = reward1.sort((a, b) => b - a)
// // // // // // // // // // // // // // // reward2 = reward2.sort((a, b) => b - a)
// // // // // // // // // // // // // // // console.log(reward1, reward2)
// // // // // // // // // // // // // // // let sum = 0
// // // // // // // // // // // // // // // for (let i = 0; i < k; i++) {
// // // // // // // // // // // // // // //     sum = reward1[i] + reward2[i] + sum
// // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // console.log(sum)

// // // // // // // // // // // // // // // nums = [2,0,2,2,6,5,2]
// // // // // // // // // // // // // // // nums = [1, 3, 1, 1, 2]
// // // // // // // // // // // // // // // let arr = [],a= 0,b=0
// // // // // // // // // // // // // // // for (let i = 0; i < nums.length; i++) {
// // // // // // // // // // // // // // //     for (let j = 0; j < nums.length; j++) {
// // // // // // // // // // // // // // //         if (nums[i] == nums[j] && j != i) {
// // // // // // // // // // // // // // //             b = a
// // // // // // // // // // // // // // //             a = Math.abs(i - j)
// // // // // // // // // // // // // // //             if (a != 0 && b != 0 && nums[i] == nums[j] && j != i) {
// // // // // // // // // // // // // // //               if(arr[i] != 0){
// // // // // // // // // // // // // // //                 arr[i] = arr[i] + a}
// // // // // // // // // // // // // // //               else{
// // // // // // // // // // // // // // //                 arr[i] = a + b + arr[i]
// // // // // // // // // // // // // // //               }
// // // // // // // // // // // // // // //             }
// // // // // // // // // // // // // // //         }

// // // // // // // // // // // // // // //         else if (arr[i] == undefined || isNaN(arr[i])) {
// // // // // // // // // // // // // // //             arr[i] = 0
// // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // console.log(arr)

// // // // // // // // // // // // // // // operations = ["--X", "X++", "X++"]
// // // // // // // // // // // // // // // operations = ["++X","++X","X++"]
// // // // // // // // // // // // // // // let x = 0
// // // // // // // // // // // // // // // for (let i = 0; i < operations.length; i++) {
// // // // // // // // // // // // // // //     if (operations[i] == 'X++') {
// // // // // // // // // // // // // // //         x = x + 1
// // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // //     else if (operations[i] == '--X') {
// // // // // // // // // // // // // // //         x = x - 1
// // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // //     else if (operations[i] = '++X') {
// // // // // // // // // // // // // // //         x = x + 1
// // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // //     else if (operations[i] == 'X--') {
// // // // // // // // // // // // // // //         x = x - 1
// // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // console.log(x)

// // // // // // // // // // // // // // // grid = [[3, 1, 2, 2], [1, 4, 4, 5], [2, 4, 2, 2], [2, 4, 2, 2]]
// // // // // // // // // // // // // // // grid = [[3, 2, 1], [1, 7, 6], [2, 7, 7]]
// // // // // // // // // // // // // // // grid = [[11, 1], [1, 11]]
// // // // // // // // // // // // // // // let row = new Map()
// // // // // // // // // // // // // // // let columns = new Map()
// // // // // // // // // // // // // // // for (let i = 0; i < grid.length; i++) {
// // // // // // // // // // // // // // //     let concatenatedValue = grid[i].join(',');

// // // // // // // // // // // // // // //     row.set(i, concatenatedValue);
// // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // let k = 0
// // // // // // // // // // // // // // // let add = ''
// // // // // // // // // // // // // // // for (let i = 0; i < grid.length; i++) {
// // // // // // // // // // // // // // //     let add = []
// // // // // // // // // // // // // // //     for (let j = 0; j < grid.length; j++) {
// // // // // // // // // // // // // // //         add.push(grid[j][i])
// // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // //     columns.set(i,add.join(','))

// // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // array = Array.from(row.values())
// // // // // // // // // // // // // // // array2 = Array.from(columns.values())
// // // // // // // // // // // // // // // console.log(array, array2)
// // // // // // // // // // // // // // // let count = 0
// // // // // // // // // // // // // // // for (let i = 0; i < array.length; i++) {
// // // // // // // // // // // // // // //     for (let j = 0; j < array2.length; j++) {
// // // // // // // // // // // // // // //         if (array[i] == array2[j]) {
// // // // // // // // // // // // // // //             count++
// // // // // // // // // // // // // // //         }

// // // // // // // // // // // // // // //     }

// // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // console.log(count)




// // // // // // // // // // // // // // // nums = [1, 3, 1, 7], queries = [1, 3, 2, 4], x = 1
// // // // // // // // // // // // // // // nums = [1,2,3], queries = [10], x = 5
// // // // // // // // // // // // // // // indices = []
// // // // // // // // // // // // // // // let arr = []
// // // // // // // // // // // // // // // for (let i = 0; i < nums.length; i++) {
// // // // // // // // // // // // // // //     if (nums[i] == x) {
// // // // // // // // // // // // // // //         indices.push(i)
// // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // console.log(indices)
// // // // // // // // // // // // // // // for (let i = 0; i < queries.length; i++) {
// // // // // // // // // // // // // // //     if (queries[i] <= indices.length) {
// // // // // // // // // // // // // // //         arr.push(indices[queries[i] - 1])
// // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // //     else{
// // // // // // // // // // // // // // //         arr.push(-1)
// // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // console.log(arr)

// // // // // // // // // // // // // // // words = ["pay", "attention", "practice", "attend"]
// // // // // // // // // // // // // // // pref = "at"
// // // // // // // // // // // // // // // words = ["leetcode","win","loops","success"], pref = "code"
// // // // // // // // // // // // // // // let count = 0
// // // // // // // // // // // // // // // for (let i = 0; i <= words.length - 1; i++) {
// // // // // // // // // // // // // // //     if (words[i].includes(pref) && words[i][0] == pref[0]) {
// // // // // // // // // // // // // // //         count++
// // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // console.log(count)


// // // // // // // // // // // // // // // nums = [1, 2, 2, 4]
// // // // // // // // // // // // // // // let p = nums.filter((value, index) => {
// // // // // // // // // // // // // // //     return nums.indexOf(value) == index
// // // // // // // // // // // // // // // })
// // // // // // // // // // // // // // // let arr = []
// // // // // // // // // // // // // // // console.log(p)
// // // // // // // // // // // // // // // for (let i = 0; i < p.length - 1; i++) {
// // // // // // // // // // // // // // //     if (p[i + 1] == p[i] + 1) {
// // // // // // // // // // // // // // //         continue
// // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // //     else {
// // // // // // // // // // // // // // //         arr.push(p[i], p[i] + 1)
// // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // console.log(arr)


// // // // // // // // // // // // // // // nums = [4, 2, 9, 5, 3]
// // // // // // // // // // // // // // // function isPrime(n) {
// // // // // // // // // // // // // // //     if (n <= 1) return false;
// // // // // // // // // // // // // // //     if (n <= 3) return true;
// // // // // // // // // // // // // // //     if (n % 2 === 0 || n % 3 === 0) return false;
// // // // // // // // // // // // // // //     for (let i = 5; i * i <= n; i += 6) {
// // // // // // // // // // // // // // //         if (n % i === 0 || n % (i + 2) === 0) return false;
// // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // //     return true;
// // // // // // // // // // // // // // // }

// // // // // // // // // // // // // // // let primes = [];

// // // // // // // // // // // // // // // for (let i = 0; i < nums.length; i++) {
// // // // // // // // // // // // // // //     if (isPrime(nums[i])) {
// // // // // // // // // // // // // // //         primes.push(i);
// // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // console.log(primes)
// // // // // // // // // // // // // // // primes.sort((a, b) => a - b)
// // // // // // // // // // // // // // // return primes[primes.length - 1] - primes[0]

// // // // // // // // // // // // // // // spells = [5, 1, 3], potions = [1, 2, 3, 4, 5], success = 7
// // // // // // // // // // // // // // // spells = [3, 1, 2], potions = [8, 5, 8], success = 16
// // // // // // // // // // // // // // // let i = 0
// // // // // // // // // // // // // // // let j = 0
// // // // // // // // // // // // // // // let count = 0
// // // // // // // // // // // // // // // let occurrences = []
// // // // // // // // // // // // // // // while (i < spells.length) {
// // // // // // // // // // // // // // //     if (j > potions.length - 1) {
// // // // // // // // // // // // // // //         i++
// // // // // // // // // // // // // // //         j = 0
// // // // // // // // // // // // // // //         occurrences.push(count)
// // // // // // // // // // // // // // //         count = 0
// // // // // // // // // // // // // // //         arr = []
// // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // //     else {

// // // // // // // // // // // // // // //         a = potions[j] * spells[i]
// // // // // // // // // // // // // // //         if (a >= success) {
// // // // // // // // // // // // // // //             count++
// // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // //         j++
// // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // console.log(occurrences)
// // // // // // // // // // // // // // // nums = [1, 2, 2, 4]
// // // // // // // // // // // // // // // let arr = []
// // // // // // // // // // // // // // // let map = new Map()
// // // // // // // // // // // // // // // for (let i = 0; i < nums.length; i++) {
// // // // // // // // // // // // // // //     if (map.has(nums[i])) {
// // // // // // // // // // // // // // //         arr.push(i)
// // // // // // // // // // // // // // //         map.set(nums[i], map.get(nums[i]) + 1)
// // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // //     else {
// // // // // // // // // // // // // // //         map.set(nums[i], 1)
// // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // console.log(map)
// // // // // // // // // // // // // // // console.log(arr)

// // // // // // // // // // // // // // // nums = [1, 2, 4, 6], operations = [[1, 3], [4, 7], [6, 1]]
// // // // // // // // // // // // // // // let include = 0
// // // // // // // // // // // // // // // let not = 1
// // // // // // // // // // // // // // // let map = new Map()
// // // // // // // // // // // // // // // nums.forEach((num, index) => map.set(num, index));
// // // // // // // // // // // // // // // for (let j = 0; j < operations.length; j++) {
// // // // // // // // // // // // // // //     let includevalue = operations[j][include]
// // // // // // // // // // // // // // //     notvalue = operations[j][not]
// // // // // // // // // // // // // // //     if (map.has(includevalue) && !map.has(notvalue)) {
// // // // // // // // // // // // // // //         let index = map.get(includevalue)
// // // // // // // // // // // // // // //         map.delete(includevalue)
// // // // // // // // // // // // // // //         map.set(notvalue, index)
// // // // // // // // // // // // // // //         nums[index] = notvalue
// // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // console.log(nums)
// // // // // // // // // // // // // // // // while (j <= operations.length - 1) {d
// // // // // // // // // // // // // // // //     if (nums.includes(operations[j][include]) && !nums.includes(operations[j][not])) {
// // // // // // // // // // // // // // // //         let index = nums.indexOf(operations[j][include])
// // // // // // // // // // // // // // // //         nums[index] = operations[j][not]

// // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // //     j++
// // // // // // // // // // // // // // // //     i++
// // // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // // return nums

// // // // // // // // // // // // // // // nums = [2, 3, -2, 4]
// // // // // // // // // // // // // // // nums = [10, 5, 2, 6], k = 100
// // // // // // // // // // // // // // // // subarray = []
// // // // // // // // // // // // // // // let count = 0
// // // // // // // // // // // // // // // for (let i = 0; i < nums.length; i++) {
// // // // // // // // // // // // // // //     for (let j = i; j < nums.length; j++) {
// // // // // // // // // // // // // // //         let a  = nums.slice(i,j+1)
// // // // // // // // // // // // // // //         subarray.push(a)
// // // // // // // // // // // // // // //         b = a.reduce((acc,dcc)=>acc*dcc,1)
// // // // // // // // // // // // // // //         if(b < k){
// // // // // // // // // // // // // // //             count++
// // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // console.log(count)

// // // // // // // // // // // // // // // nums = [1,12,-5,-6,50,3], k = 4
// // // // // // // // // // // // // // // subarray = []
// // // // // // // // // // // // // // // let count = -Infinity
// // // // // // // // // // // // // // // for (let i = 0; i < nums.length; i++) {
// // // // // // // // // // // // // // //     for (let j = i; j < nums.length; j++) {
// // // // // // // // // // // // // // //         let a = nums.slice(i, j + 1)
// // // // // // // // // // // // // // //         subarray.push(a)
// // // // // // // // // // // // // // //         if (a.length == k) {
// // // // // // // // // // // // // // //             sum = a.reduce((acc, dcc) => acc + dcc, 1)
// // // // // // // // // // // // // // //             if ((sum / a.length) > count) {
// // // // // // // // // // // // // // //                 count = (sum / a.length)
// // // // // // // // // // // // // // //             }
// // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // console.log(count)

// // // // // // // // // // // // // // // nums = [1,12,-5,-6,50,3], k = 4
// // // // // // // // // // // // // // // s = "abab"
// // // // // // // // // // // // // // // s = "aba"
// // // // // // // // // // // // // // // s = 
// // // // // // // // // // // // // // // "ababab"
// // // // // // // // // // // // // // // let arr = []
// // // // // // // // // // // // // // // k = s.split("")
// // // // // // // // // // // // // // // for (let i = 0; i < s.length; i++) {
// // // // // // // // // // // // // // //     arr.shift(k.pop())
// // // // // // // // // // // // // // //     c
// // // // // // // // // // // // // // //     if(arr.join('') == s){
// // // // // // // // // // // // // // //         console.log('true')
// // // // // // // // // // // // // // //     }

// // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // console.log(arr)
// // // // // // // // // // // // // // // console.log('false')
// // // // // // // // // // // // // // // nums = s.split('')
// // // // // // // // // // // // // // // subarray = []
// // // // // // // // // // // // // // // let count = -Infinity
// // // // // // // // // // // // // // // for (let i = 0; i < nums.length; i++) {
// // // // // // // // // // // // // // //     for (let j = i; j < nums.length; j++) {
// // // // // // // // // // // // // // //         let a = nums.slice(i, j + 1)
// // // // // // // // // // // // // // //         subarray.push(a)
// // // // // // // // // // // // // // //         if (subarray.includes(s)) {
// // // // // // // // // // // // // // //             console.log('true')
// // // // // // // // // // // // // // //         }

// // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // console.log(subarray)


// // // // // // // // // // // // // // // nums = [5, 4, 2, 1]
// // // // // // // // // // // // // // // let a = []
// // // // // // // // // // // // // // // let max = -Infinity
// // // // // // // // // // // // // // // for (let i = 0; i < nums.length / 2; i++) {
// // // // // // // // // // // // // // //     a.push(nums[i], nums[nums.length - 1 - i])
// // // // // // // // // // // // // // //     let mul = nums[i] + nums[nums.length - 1 - i]
// // // // // // // // // // // // // // //     if (mul > max) {
// // // // // // // // // // // // // // //         max = mul
// // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // console.log(max)



// // // // // // // // // // // // // // // nums = [1,12,-5,-6,50,3], k = 4
// // // // // // // // // // // // // // // nums = [10, 20, 30, 5, 10, 50]
// // // // // // // // // // // // // // // subarray = []
// // // // // // // // // // // // // // // let count = 0
// // // // // // // // // // // // // // // for (let i = 0; i < nums.length; i++) {
// // // // // // // // // // // // // // //     for (let j = i; j < nums.length; j++) {
// // // // // // // // // // // // // // //         let a = nums.slice(i, j + 1)
// // // // // // // // // // // // // // //         subarray.push(a)
// // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // console.log(count)
// // // // // // // // // // // // // // // console.log(subarray)

// // // // // // // // // // // // // // // s = "abca"
// // // // // // // // // // // // // // // s = "cbzxy"
// // // // // // // // // // // // // // // s = "mgntdygtxrvxjnwksqhxuxtrv"
// // // // // // // // // // // // // // // s = s.split("")
// // // // // // // // // // // // // // // let map = new Map()
// // // // // // // // // // // // // // // let max = -1
// // // // // // // // // // // // // // // for (let i = 0; i < s.length; i++) {
// // // // // // // // // // // // // // //     if (map.has(s[i])) {
// // // // // // // // // // // // // // //         map.set(s[i], map.get(s[i]))
// // // // // // // // // // // // // // //         let length = i - map.get(s[i]) - 1
// // // // // // // // // // // // // // //         if(length>max){
// // // // // // // // // // // // // // //             max = length
// // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // //     else {
// // // // // // // // // // // // // // //         map.set(s[i], i)
// // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // console.log(max)

// // // // // // // // // // // // // // // sequence = "ababc", word = "ba"
// // // // // // // // // // // // // // // sequence = "ababc", word = "ab"
// // // // // // // // // // // // // // // sequence = "ababc", word = "ac"
// // // // // // // // // // // // // // // sequence = "aaabaaaabaaabaaaabaaaabaaaabaaaaba", word = "aaaba"
// // // // // // // // // // // // // // // // sequence = sequence.split("")
// // // // // // // // // // // // // // // let j = 0
// // // // // // // // // // // // // // // let count = 0
// // // // // // // // // // // // // // // length = word.length
// // // // // // // // // // // // // // // let l2 = sequence.length
// // // // // // // // // // // // // // // for (let i = 0; i <= l2 - length; i++) {
// // // // // // // // // // // // // // //     if(sequence.substring(i, i + length) == word){
// // // // // // // // // // // // // // //         count++
// // // // // // // // // // // // // // //     }

// // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // console.log(count)

// // // // // // // // // // // // // // // lowLimit = 19, highLimit = 28
// // // // // // // // // // // // // // // let map = new Map()
// // // // // // // // // // // // // // // let arr = []
// // // // // // // // // // // // // // // let count = 1
// // // // // // // // // // // // // // // for (let i = lowLimit; i <= highLimit; i++) {
// // // // // // // // // // // // // // //     let sum = 0
// // // // // // // // // // // // // // //     let number = i
// // // // // // // // // // // // // // //     while (number > 0) {
// // // // // // // // // // // // // // //         sum += number % 10
// // // // // // // // // // // // // // //         number = Math.floor(number / 10)
// // // // // // // // // // // // // // //     }

// // // // // // // // // // // // // // //     if (map.has(sum)) {
// // // // // // // // // // // // // // //         map.set(sum, map.get(sum) + 1)
// // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // //     else {
// // // // // // // // // // // // // // //         map.set(sum, 1)
// // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // let max = -Infinity
// // // // // // // // // // // // // // // for (const [key,value] of map) {
// // // // // // // // // // // // // // //     if(value>max){
// // // // // // // // // // // // // // //         max = value
// // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // console.log(max)

// // // // // // // // // // // // // // // s1 = "bank", s2 = "kanb"
// // // // // // // // // // // // // // // if (s1 == s2 && s1.length == s2.length) {
// // // // // // // // // // // // // // //     console.log('true')
// // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // let arr = []
// // // // // // // // // // // // // // // for (let i = 0; i < s1.length; i++) {
// // // // // // // // // // // // // // //     if(s1[i] !== s2[i]){
// // // // // // // // // // // // // // //         arr.push(i)
// // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // s2 = s2.split('')
// // // // // // // // // // // // // // // for (let i = 0; i < arr.length; i+=2) {
// // // // // // // // // // // // // // //     let temp = s2[arr[i]]
// // // // // // // // // // // // // // //     s2[arr[i]] = s2[arr[i+1]]
// // // // // // // // // // // // // // //     s2[arr[i+1]] = temp
// // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // console.log(s2.join(''))


// // // // // // // // // // // // // // // l1 = [2, 4, 3], l2 = [5, 6, 4]
// // // // // // // // // // // // // // // l1 = [7, 2, 4, 3], l2 = [5, 6, 4]
// // // // // // // // // // // // // // // let carry = 0
// // // // // // // // // // // // // // // let length = Math.max(l1.length, l2.length)
// // // // // // // // // // // // // // // l1.reverse()
// // // // // // // // // // // // // // // l2.reverse()

// // // // // // // // // // // // // // // let arr = []
// // // // // // // // // // // // // // // for (let i = 0; i < length; i++) {
// // // // // // // // // // // // // // //     let first = i < l1.length ? l1[i] : 0;
// // // // // // // // // // // // // // //     let second = i < l2.length ? l2[i] : 0;

// // // // // // // // // // // // // // //     sum = first + second + carry
// // // // // // // // // // // // // // //     carry = Math.floor(sum / 10);

// // // // // // // // // // // // // // //     arr.unshift(sum % 10);
// // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // if (carry > 0) {
// // // // // // // // // // // // // // //     arr.push(carry);
// // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // console.log(arr)


// // // // // // // // // // // // // // // nums = [1, 2, 1]
// // // // // // // // // // // // // // // let result = []
// // // // // // // // // // // // // // // let stack = []
// // // // // // // // // // // // // // // for (let i = 0; i < 2 * nums.length; i++) {
// // // // // // // // // // // // // // //     let a = nums[i % nums.length]
// // // // // // // // // // // // // // //     if (stack.length == 0) {
// // // // // // // // // // // // // // //         stack.push(a)
// // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // //     else if (stack[stack.length - 1] < (a)) {
// // // // // // // // // // // // // // //         stack.pop()
// // // // // // // // // // // // // // //         stack.push(nums[i])
// // // // // // // // // // // // // // //         result.push(nums[i])
// // // // // // // // // // // // // // //     }


// // // // // // // // // // // // // // // }


// // // // // // // // // // // // // // // nums = [3,1,2,4]
// // // // // // // // // // // // // // // subarray = []
// // // // // // // // // // // // // // // let count = 0
// // // // // // // // // // // // // // // for (let i = 0; i < nums.length; i++) {
// // // // // // // // // // // // // // //     for (let j = i; j < nums.length; j++) {
// // // // // // // // // // // // // // //         let a = nums.slice(i, j + 1)
// // // // // // // // // // // // // // //         let min = Math.min(...a)
// // // // // // // // // // // // // // //         subarray.push(min)
// // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // let sum = subarray.reduce((acc,dcc)=>acc+dcc,0)
// // // // // // // // // // // // // // // console.log(sum)


// // // // // // // // // // // // // // // nums = [1, 13, 10, 12, 31]
// // // // // // // // // // // // // // // length = 2 * nums.length
// // // // // // // // // // // // // // // let array = Array(length).fill(0)
// // // // // // // // // // // // // // // let i = 0
// // // // // // // // // // // // // // // let j = 0
// // // // // // // // // // // // // // // while (i < length / 2) {
// // // // // // // // // // // // // // //     array[i] = nums[j]
// // // // // // // // // // // // // // //     i++
// // // // // // // // // // // // // // //     j++
// // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // let k = length / 2
// // // // // // // // // // // // // // // let l = 0
// // // // // // // // // // // // // // // while (k < length){
// // // // // // // // // // // // // // //     a = nums[l].toString().split('').reverse().join("")
// // // // // // // // // // // // // // //     a = Number(a)
// // // // // // // // // // // // // // //     array[k] = a
// // // // // // // // // // // // // // //     k++
// // // // // // // // // // // // // // //     l++
// // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // let set = new Set(array)
// // // // // // // // // // // // // // // console.log(set.size)

// // // // // // // // // // // // // // // sentences = ["alice and bob love leetcode", "i think so too", "this is great thanks very much"]
// // // // // // // // // // // // // // // let max = -Infinity
// // // // // // // // // // // // // // // for (let i = 0; i < sentences.length; i++) {
// // // // // // // // // // // // // // //     a = sentences[i].split(' ')
// // // // // // // // // // // // // // //     if(a.length > max){
// // // // // // // // // // // // // // //         max = a.length
// // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // console.log(max)

// // // // // // // // // // // // // // // nums = [1,2,3,4]
// // // // // // // // // // // // // // // let count = 0
// // // // // // // // // // // // // // // for (let i = 0; i < nums.length; i++) {
// // // // // // // // // // // // // // //     if(nums[i] % 3 == 0){
// // // // // // // // // // // // // // //         continue
// // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // //     else if ((nums[i] - 1) % 3 == 0 || (nums[i] + 1) % 3 == 0) {
// // // // // // // // // // // // // // //         count++
// // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // console.log(count)

// // // // // // // // // // // // // // // nums = [3, 6, 1, 0]
// // // // // // // // // // // // // // // let max = Math.max(...nums)
// // // // // // // // // // // // // // // index = nums.indexOf(max)
// // // // // // // // // // // // // // // nums.splice(index,1)
// // // // // // // // // // // // // // // for (let i = 0; i < nums.length; i++) {
// // // // // // // // // // // // // // //     if(nums[i] * 2 <= max){
// // // // // // // // // // // // // // //         continue
// // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // //     else{
// // // // // // // // // // // // // // //         return -1
// // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // }

// // // // // // // // // // // // // // // let a = [1, 2, 3, 4, 5]
// // // // // // // // // // // // // // // let nums = [...a,...a]
// // // // // // // // // // // // // // // let stack = []
// // // // // // // // // // // // // // // let array = Array(a.length).fill(-1)
// // // // // // // // // // // // // // // for (let i = 0; i < nums.length; i++) {
// // // // // // // // // // // // // // //     while (stack.length > 0 && nums[stack[stack.length - 1]] < nums[i]) {
// // // // // // // // // // // // // // //         let index = stack.pop()
// // // // // // // // // // // // // // //         if (index < a.length) {
// // // // // // // // // // // // // // //             array[index] = nums[i]
// // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // //     stack.push(i)

// // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // console.log(array)

// // // // // // // // // // // // // // // arr = [6,2,7,5,1,2,0,3,10,2,5,0,5,5,0,8,7,6,8,0]
// // // // // // // // // // // // // // // arr.sort() 

// // // // // // // // // // // // // // // let n = arr.length;
// // // // // // // // // // // // // // // let count = Math.max(1, Math.floor(n * 0.05));
// // // // // // // // // // // // // // // let smallest2Percent = arr.slice(0, count);
// // // // // // // // // // // // // // // let largest2Percent = arr.slice(-count);
// // // // // // // // // // // // // // // console.log(smallest2Percent,largest2Percent)

// // // // // // // // // // // // // // // let n = 14
// // // // // // // // // // // // // // // let matches = 0
// // // // // // // // // // // // // // // while (n != 1) {
// // // // // // // // // // // // // // //     // for even 
// // // // // // // // // // // // // // //     if (n % 2 == 0) {
// // // // // // // // // // // // // // //         matches = matches +( n / 2 )
// // // // // // // // // // // // // // //         n = n / 2
// // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // //     else {
// // // // // // // // // // // // // // //         matches = matches + (n - 1) /2
// // // // // // // // // // // // // // //         n = n - matches
// // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // console.log(matches)

// // // // // // // // // // // // // // // arr = [0, 1, 2, 3, 4, 5, 6, 7, 8]
// // // // // // // // // // // // // // // let arr2 = []
// // // // // // // // // // // // // // // for (let i = 0; i < arr.length; i++) {
// // // // // // // // // // // // // // //     a = parseInt(arr[i]).toString(2)
// // // // // // // // // // // // // // //     arr2.push(a)
// // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // console.log(arr2)
// // // // // // // // // // // // // // // arr3 = []
// // // // // // // // // // // // // // // arr2.sort((a, b) => {
// // // // // // // // // // // // // // //     let countA = a.split('1').length - 1;
// // // // // // // // // // // // // // //     let countB = b.split('1').length - 1;
// // // // // // // // // // // // // // //     let c = countA - countB
// // // // // // // // // // // // // // //     arr3.push(c)

// // // // // // // // // // // // // // // });
// // // // // // // // // // // // // // // arr3.sort()
// // // // // // // // // // // // // // // console.log(arr3.sort())

// // // // // // // // // // // // // // // words = ["abc","car","ada","racecar","cool"]
// // // // // // // // // // // // // // // for (let i = 0; i < words.length; i++) {
// // // // // // // // // // // // // // //     if(words[i].split('').reverse().join("") == words[i]){
// // // // // // // // // // // // // // //         console.log(words[i])
// // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // grid = [[4, 3, 2, -1], [3, 2, 1, -1], [1, 1, -1, -2], [-1, -1, -2, -3]]
// // // // // // // // // // // // // // // let count = 0
// // // // // // // // // // // // // // // let k = 0
// // // // // // // // // // // // // // // let length = grid.length * grid[0].length
// // // // // // // // // // // // // // // for (let i = 0; i < grid.length; i++) {
// // // // // // // // // // // // // // //     for (let j = 0; j < grid[0].length; j++) {
// // // // // // // // // // // // // // //         if (grid[i][j] < 0) {
// // // // // // // // // // // // // // //             count++
// // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // //     }

// // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // console.log(count)

// // // // // // // // // // // // // // // nums1 = [1,2,3,2,1], nums2 = [3,2,1,4,7]
// // // // // // // // // // // // // // // let subarray1 = []
// // // // // // // // // // // // // // // for (let i = 0; i < nums1.length; i++) {
// // // // // // // // // // // // // // //     for (let j = i; j < nums1.length; j++) {
// // // // // // // // // // // // // // //         a = nums1.slice(i,j+1)
// // // // // // // // // // // // // // //         subarray1.push(a)
// // // // // // // // // // // // // // //     }   
// // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // console.log(subarray1)
// // // // // // // // // // // // // // // let subarray2 = []
// // // // // // // // // // // // // // // for (let i = 0; i < nums2.length; i++) {
// // // // // // // // // // // // // // //     for (let j = i; j < nums2.length; j++) {
// // // // // // // // // // // // // // //         a = nums1.slice(i,j+1)
// // // // // // // // // // // // // // //         subarray2.push(a)
// // // // // // // // // // // // // // //     }   
// // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // console.log(subarray2)
// // // // // // // // // // // // // // // let s = "ababcbacadefegdehijhklij"
// // // // // // // // // // // // // // // const last = {};
// // // // // // // // // // // // // // // for (let i = 0; i < s.length; i++) {
// // // // // // // // // // // // // // //   last[s[i]] = i;
// // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // console.log(last)


// // // // // // // // // // // // // // // grid = [
// // // // // // // // // // // // // // //     [1, 0, 0],
// // // // // // // // // // // // // // //     [0, 0, 0],
// // // // // // // // // // // // // // //     [0, 0, 1]
// // // // // // // // // // // // // // // ]
// // // // // // // // // // // // // // // grid = [[0,0],[1,0],[1,1],[1,0]]
// // // // // // // // // // // // // // // function isPalindromic(arr) {
// // // // // // // // // // // // // // //     let left = 0;
// // // // // // // // // // // // // // //     let right = arr.length - 1;

// // // // // // // // // // // // // // //     while (left < right) {
// // // // // // // // // // // // // // //         if (arr[left] !== arr[right]) {
// // // // // // // // // // // // // // //             return false;
// // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // //         left++;
// // // // // // // // // // // // // // //         right--;
// // // // // // // // // // // // // // //     }

// // // // // // // // // // // // // // //     return true;
// // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // function isColumnPalindromic(grid, colIndex) {
// // // // // // // // // // // // // // //     let top = 0;
// // // // // // // // // // // // // // //     let bottom = grid.length - 1;

// // // // // // // // // // // // // // //     while (top < bottom) {
// // // // // // // // // // // // // // //         if (grid[top][colIndex] !== grid[bottom][colIndex]) {
// // // // // // // // // // // // // // //             return false;
// // // // // // // // // // // // // // //         }
// // // // // // // // // // // // // // //         top++;
// // // // // // // // // // // // // // //         bottom--;
// // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // //     return true;
// // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // let Rowcount = 0
// // // // // // // // // // // // // // // for (let i = 0; i < grid.length; i++) {
// // // // // // // // // // // // // // //     if (!isPalindromic(grid[i])) {
// // // // // // // // // // // // // // //         Rowcount++
// // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // let columncount = 0
// // // // // // // // // // // // // // // for (let j = 0; j < grid[0].length; j++) {
// // // // // // // // // // // // // // //     if(!isColumnPalindromic(grid,j)){
// // // // // // // // // // // // // // //         columncount++
// // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // }

// // // // // // // // // // // // // // // let min = Math.min(columncount,Rowcount)
// // // // // // // // // // // // // // // console.log(min)




// // // // // // // // // // // // // // // nums = [-100, -98, -1, 2, 3, 4]
// // // // // // // // // // // // // // // nums.sort((a, b) => a - b)
// // // // // // // // // // // // // // // console.log(nums)
// // // // // // // // // // // // // // // let mul = 1
// // // // // // // // // // // // // // // for (let i = 0; i < 3; i++) {
// // // // // // // // // // // // // // //     if(nums[i] < 0){
// // // // // // // // // // // // // // //         a = nums[i] * -1
// // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // //     else{
// // // // // // // // // // // // // // //         a = nums[i]
// // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // //     mul = a * mul
// // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // console.log(mul)

// // // // // // // // // // // // // // candidates = [10, 1, 2, 7, 6, 1, 5], target = 8
// // // // // // // // // // // // // // candidates = [2,5,2,1,2], target = 5
// // // // // // // // // // // // // // // let result = [[]]
// // // // // // // // // // // // // // // for (const num of candidates) {
// // // // // // // // // // // // // // //     result = result.concat(result.map(value => value.concat(num)))
// // // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // let seen = new Map();
// // // // // // // // // // // // // // // let uniqueSubsets = [];

// // // // // // // // // // // // // // // for (let subset of result) {

// // // // // // // // // // // // // // //     sortedSubset = [...subset].sort((a, b) => a - b);

// // // // // // // // // // // // // // //     key = sortedSubset.join(',');

// // // // // // // // // // // // // // //     if (!seen.has(key)) {
// // // // // // // // // // // // // // //         seen.set(key, subset)
// // // // // // // // // // // // // // //         uniqueSubsets.push(subset)
// // // // // // // // // // // // // // //     }


// // // // // // // // // // // // // // // };
// // // // // // // // // // // // // // // for (let i = 0; i < uniqueSubsets.length; i++) {
// // // // // // // // // // // // // // //     const rowSum = uniqueSubsets[i].reduce((acc, num) => acc + num, 0);
// // // // // // // // // // // // // // //     if (rowSum == target) {
// // // // // // // // // // // // // // //         console.log(uniqueSubsets[i])
// // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // n[-1,2,-3,3]
// // // // // // // // // // // // // // nums = [-10,8,6,7,-2,-3]
// // // // // // // // // // // // // // let arr = []
// // // // // // // // // // // // // // for (let i = 0; i < nums.length; i++) {
// // // // // // // // // // // // // //     a = nums[i] * -1
// // // // // // // // // // // // // //     if(nums.includes(a)){
// // // // // // // // // // // // // //         arr.push(nums[i])
// // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // }
// // // // // // // // // // // // // // console.log(arr)
// // // // // // // // // // // // // // console.log(Math.max(...arr))ums = [-1,10,6,7,-7,1]
// // // // // // // // // // // // // // nums = 

// // // // // // // // // // // // // // ["10:00", "11:00"], event2 = ["14:00", "15:00"]
// // // // // // // // // // // // // // event1 = ["01:15", "02:00"], event2 = ["02:00", "03:00"]
// // // // // // // // // // // // // // const [start1, end1] = event1.map(time => time.split(':')[0]);
// // // // // // // // // // // // // // const [start2, end2] = event2.map(time => time.split(':')[0]);
// // // // // // // // // // // // // // const start1Int = parseInt(start1, 10);
// // // // // // // // // // // // // // const end1Int = parseInt(end1, 10);
// // // // // // // // // // // // // // const start2Int = parseInt(start2, 10);
// // // // // // // // // // // // // // const end2Int = parseInt(end2, 10);

// // // // // // // // // // // // // // if (start1 < end2 && start1 < end1){

// // // // // // // // // // // // // // }
// // // // // // // // // // // // // // if(result2[0] <= result[1] ){
// // // // // // // // // // // // // //     return true
// // // // // // // // // // // // // // }
// // // // // // // // // // // // // // else{
// // // // // // // // // // // // // //     return false
// // // // // // // // // // // // // // }
// // // // // // // // // // // // // // console.log(result,result2)


// // // // // // // // // // // // // // nums = [4, 4, 2, 4, 3]
// // // // // // // // // // // // // // let i = 0
// // // // // // // // // // // // // // let j = 1
// // // // // // // // // // // // // // let k = 1
// // // // // // // // // // // // // // for (let i = 0; i < nums.length; i++) {
// // // // // // // // // // // // // //     for (let j = 0; j < nums.length; j++) {
// // // // // // // // // // // // // //         for (let k = 0; k < nums.length; k++) {
// // // // // // // // // // // // // //             if (nums[i] != nums[j] && nums[j] != nums[k] && nums[i] != nums[k] && i < j && j < k && i < k) {
// // // // // // // // // // // // // //                 console.log(i, j, k)
// // // // // // // // // // // // // //             }

// // // // // // // // // // // // // //         }

// // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // }


// // // // // // // // // // // // // // console.log(words[0][].charCodeAt(0) - 'a'.charCodeAt(0))
// // // // // // // // // // // // // // words = [[3,-1],[3,-1],[1,1]]
// // // // // // // // // // // // // // words = ["adc", "wzy", "abc"]
// // // // // // // // // // // // // // let j = 0
// // // // // // // // // // // // // // let k = 1
// // // // // // // // // // // // // // let i = 0
// // // // // // // // // // // // // // let arr = []

// // // // // // // // // // // // // // for (let i = 0; i < words.length; i++) {
// // // // // // // // // // // // // //     second = words[i][j + 1].charCodeAt(0) - 'a'.charCodeAt(0)
// // // // // // // // // // // // // //     first = words[i][j].charCodeAt(0) - 'a'.charCodeAt(0)
// // // // // // // // // // // // // //     pre = second - first
// // // // // // // // // // // // // //     third = words[i][k + 1].charCodeAt(0) - 'a'.charCodeAt(0)
// // // // // // // // // // // // // //     forth = words[i][k].charCodeAt(0) - 'a'.charCodeAt(0)
// // // // // // // // // // // // // //     post = third - forth
// // // // // // // // // // // // // //     arr.push([pre, post])
// // // // // // // // // // // // // // }
// // // // // // // // // // // // // // console.log(arr)
// // // // // // // // // // // // // // let map = new Map()
// // // // // // // // // // // // // // for (let i = 0; i < arr.length; i++) {

// // // // // // // // // // // // // //     key = arr[i].join(",")
// // // // // // // // // // // // // //     map.set(key, (map.get(key) || 0) + 1)
// // // // // // // // // // // // // // }
// // // // // // // // // // // // // // console.log(map)
// // // // // // // // // // // // // // for (const [key, value] of map) {
// // // // // // // // // // // // // //     if (value == 1) {
// // // // // // // // // // // // // //         a = key.split(',').map(Number)
// // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // }
// // // // // // // // // // // // // // let find = arr.findIndex((arr)=>arr.length == a.length && arr.every((val,index)=> val == a[index]))
// // // // // // // // // // // // // // return words[find]

// // // // // // // // // // // // // // strs = ["alic3", "bob", "3", "4", "00000"]
// // // // // // // // // // // // // // let max = -Infinity
// // // // // // // // // // // // // // for (let i = 0; i < strs.length; i++) {
// // // // // // // // // // // // // //     if (isNaN(Number(strs[i]))) {
// // // // // // // // // // // // // //         length = strs[i].length
// // // // // // // // // // // // // //         if(length > max){
// // // // // // // // // // // // // //             max = length
// // // // // // // // // // // // // //         }
// // // // // // // // // // // // // //     }
// // // // // // // // // // // // // //     else{
// // // // // // // // // // // // // //         length = Number(strs[i])
// // // // // // // // // // // // // //         if(length > max){
// // // // // // // // // // // // // //             max = length
// // // // // // // // // // // // // //         }
// // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // }
// // // // // // // // // // // // // // console.log(max)

// // // // // // // // // // // // // // grid = [[1, 2, 4], [3, 3, 1]]
// // // // // // // // // // // // // // grid =
// // // // // // // // // // // // // // [[9,81],[33,17]]
// // // // // // // // // // // // // // res = []
// // // // // // // // // // // // // // for (let i = 0; i < grid.length; i++) {
// // // // // // // // // // // // // //     grid[i].sort()
// // // // // // // // // // // // // // }
// // // // // // // // // // // // // // console.log(grid)
// // // // // // // // // // // // // // let element = []
// // // // // // // // // // // // // // let sum = 0
// // // // // // // // // // // // // // for (let i = 0; i < grid[0].length; i++) {
// // // // // // // // // // // // // //     for (let j = 0; j < grid.length; j++) {
// // // // // // // // // // // // // //         element.push(grid[j][i])
// // // // // // // // // // // // // //     }
// // // // // // // // // // // // // //     let max = Math.max(...element)
// // // // // // // // // // // // // //     sum = max + sum
// // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // console.log(sum)

// // // // // // // // // // // // // // nums = [9,1,-3,2,4,8,3,-1,6,-2,-4,7]
// // // // // // // // // // // // // // nums = [100, 4, 200, 1, 3, 2]
// // // // // // // // // // // // // // nums = [9,1,4,7,3,-1,0,5,8,-1,6]
// // // // // // // // // // // // // // let count = 0
// // // // // // // // // // // // // // let map = new Map()
// // // // // // // // // // // // // // nums.forEach(element => {
// // // // // // // // // // // // // //     if (map.has(element)) {
// // // // // // // // // // // // // //         map.set(element, map.get(element) + 1)
// // // // // // // // // // // // // //     }
// // // // // // // // // // // // // //     else {
// // // // // // // // // // // // // //         map.set(element, 1)
// // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // });
// // // // // // // // // // // // // // let arr = []
// // // // // // // // // // // // // // let max = 0
// // // // // // // // // // // // // // let array = Array.from(map.keys()).sort((a, b) => a - b)
// // // // // // // // // // // // // // console.log(array)
// // // // // // // // // // // // // // for (let i = 0; i < array.length; i++) {
// // // // // // // // // // // // // //     let a = array[i] - 1
// // // // // // // // // // // // // //     if (!map.has(a)) {
// // // // // // // // // // // // // //         for (let j = 0; j < array.length; j++) {
// // // // // // // // // // // // // //           a = a + 1
// // // // // // // // // // // // // //             if(map.has(a)){
// // // // // // // // // // // // // //                 count++
// // // // // // // // // // // // // //             }
// // // // // // // // // // // // // //             else{
// // // // // // // // // // // // // //               break
// // // // // // // // // // // // // //             }
// // // // // // // // // // // // // //         }
// // // // // // // // // // // // // //         if(count > max){
// // // // // // // // // // // // // //             max = count
// // // // // // // // // // // // // //             count = 0
// // // // // // // // // // // // // //         }
// // // // // // // // // // // // // //         else{
// // // // // // // // // // // // // //             count = 0
// // // // // // // // // // // // // //         }
// // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // }
// // // // // // // // // // // // // // console.log(max)


// // // // // // // // // // // // // // arr = [1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3]
// // // // // // // // // // // // // // arr = [6,2,7,5,1,2,0,3,10,2,5,0,5,5,0,8,7,6,8,0]
// // // // // // // // // // // // // // arr.sort((a, b) => a - b)
// // // // // // // // // // // // // // length = arr.length * 0.05

// // // // // // // // // // // // // // let sum = 0
// // // // // // // // // // // // // // for (let i = 0; i < arr.length-length; i++) {
// // // // // // // // // // // // // //     sum = arr[i] + sum
// // // // // // // // // // // // // // }
// // // // // // // // // // // // // // console.log(sum / (arr.length - length * 2))

// // // // // // // // // // // // // // nums1 = [1, 3, 5, 2, 4], nums2 = [6, 5, 4, 3, 2, 1, 7]
// // // // // // // // // // // // // // nums1 = [2, 4], nums2 = [1, 2, 3, 4]
// // // // // // // // // // // // // // nums1 = [4, 1, 2], nums2 = [1, 3, 4, 2]
// // // // // // // // // // // // // // let map = new Map()
// // // // // // // // // // // // // // let stack = []
// // // // // // // // // // // // // // for (const num of nums2) {
// // // // // // // // // // // // // //     while (stack.length > 0 && stack[stack.length - 1] < num){
// // // // // // // // // // // // // //         map.set(stack.pop(),num)
// // // // // // // // // // // // // //     }
// // // // // // // // // // // // // //     stack.push(num)
// // // // // // // // // // // // // // }
// // // // // // // // // // // // // // console.log(stack)
// // // // // // // // // // // // // // console.log(map)






// // // // // // // // // // // // // // nums1 = [0] , nums2 = [0]
// // // // // // // // // // // // // // let indices = []
// // // // // // // // // // // // // // for (let i = 0; i < nums1.length; i++) {
// // // // // // // // // // // // // //     let index = nums2.indexOf(nums1[i])
// // // // // // // // // // // // // //     indices.push(index)
// // // // // // // // // // // // // // }
// // // // // // // // // // // // // // console.log(indices)
// // // // // // // // // // // // // // let b;
// // // // // // // // // // // // // // let max = 0
// // // // // // // // // // // // // // for (let i = 0; i < indices.length; i++) {
// // // // // // // // // // // // // //     let a = indices[i]
// // // // // // // // // // // // // //     let comp = nums2[a]
// // // // // // // // // // // // // //     for (let j = a; j < nums2.length; j++) {
// // // // // // // // // // // // // //         b = nums2[j]
// // // // // // // // // // // // // //         if (b > comp) {
// // // // // // // // // // // // // //             max = b
// // // // // // // // // // // // // //             break
// // // // // // // // // // // // // //         }
// // // // // // // // // // // // // //         else {
// // // // // // // // // // // // // //             max = 0
// // // // // // // // // // // // // //         }
// // // // // // // // // // // // // //     }
// // // // // // // // // // // // // //     if (max < comp || ) {
// // // // // // // // // // // // // //         nums1[i] = -1
// // // // // // // // // // // // // //     }
// // // // // // // // // // // // // //     else {
// // // // // // // // // // // // // //         nums1[i] = max
// // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // }
// // // // // // // // // // // // // // console.log(nums1)

// // // // // // // // // // // // // // nums = [1, 2, 1]
// // // // // // // // // // // // // // let stack = []
// // // // // // // // // // // // // // array = Array.from(nums.length / 2).fill(-1)
// // // // // // // // // // // // // // console.log(array)
// // // // // // // // // // // // // // nums = [1, 6, 1, 2, 9], k = 3.
// // // // // // // // // // // // // // nums = [1, 3, 1], k = 1
// // // // // // // // // // // // // // let arr = []
// // // // // // // // // // // // // // nums.sort((a, b) => a - b)
// // // // // // // // // // // // // // nums = [1, 15, 6, 3]
// // // // // // // // // // // // // // let sum = 0
// // // // // // // // // // // // // // for (let i = 0; i < nums.length; i++) {
// // // // // // // // // // // // // //     sum = nums[i] + sum
// // // // // // // // // // // // // // }
// // // // // // // // // // // // // // nums = nums.toString().split("")
// // // // // // // // // // // // // // sum2 = 0
// // // // // // // // // // // // // // for (let j = 0; j < nums.length; j++) {
// // // // // // // // // // // // // //     a = Number(nums[j])
// // // // // // // // // // // // // //     if(isNaN(a)){
// // // // // // // // // // // // // //         continue
// // // // // // // // // // // // // //     }
// // // // // // // // // // // // // //     else{
// // // // // // // // // // // // // //         sum2 = sum2 + Number(nums[j])
// // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // }
// // // // // // // // // // // // // // nums = [13,25,83,77]
// // // // // // // // // // // // // // nums = nums.toString().split('')
// // // // // // // // // // // // // // let arr = []
// // // // // // // // // // // // // // for (let i = 0; i < nums.length; i++) {
// // // // // // // // // // // // // //     a = Number(nums[i])
// // // // // // // // // // // // // //     if(isNaN(a)){
// // // // // // // // // // // // // //         continue
// // // // // // // // // // // // // //     }
// // // // // // // // // // // // // //     else{
// // // // // // // // // // // // // //         arr.push(nums[i])
// // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // }
// // // // // // // // // // // // // // console.log(arr)
// // // // // // // // // // // // // // let a = [5, 4, 3, 2, 1]
// // // // // // // // // // // // // // let array = Array(a.length).fill(-1)
// // // // // // // // // // // // // // let n = a.length 
// // // // // // // // // // // // // // let stack = []
// // // // // // // // // // // // // // let k = 0
// // // // // // // // // // // // // // for (let i = 0; i < 2*n; i++) {
// // // // // // // // // // // // // //     let index = i % n
// // // // // // // // // // // // // //     while (stack.length > 0 && a[stack[stack.length - 1]] < a[index]){
// // // // // // // // // // // // // //         array[stack.pop()] = a[index]
// // // // // // // // // // // // // //     }
// // // // // // // // // // // // // //     stack.push(index)
// // // // // // // // // // // // // // }
// // // // // // // // // // // // // // console.log(array)
// // // // // // // // // // // // // // nums = [3,6,9,1]
// // // // // // // // // // // // // // nums.sort()
// // // // // // // // // // // // // // let arr = []
// // // // // // // // // // // // // // let left = 0
// // // // // // // // // // // // // // let right = left + 1
// // // // // // // // // // // // // // while (left <= nums.length - 2) {
// // // // // // // // // // // // // //     distance = Math.abs(nums[left] - nums[right])
// // // // // // // // // // // // // //     arr.push(distance)
// // // // // // // // // // // // // //     left++
// // // // // // // // // // // // // //     right = left + 1
// // // // // // // // // // // // // // }
// // // // // // // // // // // // // // console.log(arr)
// // // // // // // // // // // // // // nums = [-2, 1, -3, 4, -1, 2, 1, -5, 4]
// // // // // // // // // // // // // // nums = [2,1,4,3,5], k = 10
// // // // // // // // // // // // // // let count = 0
// // // // // // // // // // // // // // for (let i = 0; i < nums.length; i++) {
// // // // // // // // // // // // // //     for (let j = i; j < nums.length; j++) {
// // // // // // // // // // // // // //         a = nums.slice(i, j + 1)
// // // // // // // // // // // // // //         let p = a.reduce((acc, dcc) => acc + dcc, 0)
// // // // // // // // // // // // // //         q = p*(a.length)
// // // // // // // // // // // // // //         if(q<k){
// // // // // // // // // // // // // //             count++
// // // // // // // // // // // // // //         }
// // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // }
// // // // // // // // // // // // // // console.log(count)

// // // // // // // // // // // // // // head = [0, 1, 0, 3, 0, 2, 2, 0]
// // // // // // // // // // // // // // head = [0,3,1,0,4,5,2,0]
// // // // // // // // // // // // // // let p = head.filter((value) => {
// // // // // // // // // // // // // //     return value !== 0
// // // // // // // // // // // // // // })
// // // // // // // // // // // // // // console.log(p)
// // // // // // // // // // // // // // let map = new Map()
// // // // // // // // // // // // // // p.forEach(element => {
// // // // // // // // // // // // // //     if (map.has(element)) {
// // // // // // // // // // // // // //         map.set(element, map.get(element) + 1)
// // // // // // // // // // // // // //     }
// // // // // // // // // // // // // //     else {
// // // // // // // // // // // // // //         map.set(element, 1)
// // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // });
// // // // // // // // // // // // // // console.log(map)
// // // // // // // // // // // // // // let sum = 0
// // // // // // // // // // // // // // for (let [value, key] of map) {
// // // // // // // // // // // // // //     if (key > 1) {
// // // // // // // // // // // // // //         map.delete(value,key)
// // // // // // // // // // // // // //         map.set(value*key,1)
// // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // }
// // // // // // // // // // // // // // array = Array.from(map.keys())
// // // // // // // // // // // // // // console.log(array)


// // // // // // // // // // // // // // head = [0, 3, 1, 0, 4, 5, 2, 0]
// // // // // // // // // // // // // // head = [0,1,0,3,0,2,2,0]
// // // // // // // // // // // // // // let arr = []
// // // // // // // // // // // // // // let sum1 = 0
// // // // // // // // // // // // // // for (let i = 0; i < head.length; i++) {
// // // // // // // // // // // // // //     if (head[i] != 0) {
// // // // // // // // // // // // // //         sum1 = sum1 + head[i]
// // // // // // // // // // // // // //     }
// // // // // // // // // // // // // //     else if (sum1 != 0) {
// // // // // // // // // // // // // //         arr.push(sum1)
// // // // // // // // // // // // // //         sum1 = 0
// // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // }
// // // // // // // // // // // // // // console.log(arr)

// // // // // // // // // // // // // // nums = [1, 3, -1, -3, 5, 3, 6, 7], k = 3
// // // // // // // // // // // // // // nums = [1], k = 1
// // // // // // // // // // // // // // let res = []
// // // // // // // // // // // // // // let left = 0
// // // // // // // // // // // // // // console.log(nums.slice(left+1,k+1))
// // // // // // // // // // // // // // let i = k
// // // // // // // // // // // // // // while (left <= nums.length - i) {

// // // // // // // // // // // // // //     a = nums.slice(left, k)
// // // // // // // // // // // // // //     let max=  Math.max(...a)
// // // // // // // // // // // // // //     res.push(max)
// // // // // // // // // // // // // //     left++
// // // // // // // // // // // // // //     k++

// // // // // // // // // // // // // // }

// // // // // // // // // // // // // // console.log(res)

// // // // // // // // // // // // // // bills = [5, 5, 5, 10, 20]
// // // // // // // // // // // // // // bills = [5, 5, 5, 5, 20, 20, 5, 5, 20, 5]
// // // // // // // // // // // // // // bills = [5, 5, 10, 10, 20]
// // // // // // // // // // // // // // bills = [5,5,5,20,5,5,5,10,20,5,10,20,5,20,5,10,5,5,5,5]
// // // // // // // // // // // // // // let five = 0
// // // // // // // // // // // // // // let ten = 0
// // // // // // // // // // // // // // for (let i = 0; i < bills.length; i++) {
// // // // // // // // // // // // // //     if (bills[i] == 5) {
// // // // // // // // // // // // // //         five++
// // // // // // // // // // // // // //     }
// // // // // // // // // // // // // //     else if (bills[i] == 10) {
// // // // // // // // // // // // // //         if (five > 1) {
// // // // // // // // // // // // // //             five--
// // // // // // // // // // // // // //             ten++
// // // // // // // // // // // // // //         }
// // // // // // // // // // // // // //         else {
// // // // // // // // // // // // // //             console.log('false')
// // // // // // // // // // // // // //         }
// // // // // // // // // // // // // //     }
// // // // // // // // // // // // // //     else if (bills[i] == 20) {
// // // // // // // // // // // // // //         if (five > 2) {
// // // // // // // // // // // // // //             five-=3
// // // // // // // // // // // // // //         }
// // // // // // // // // // // // // //         else if (five > 1 && ten > 0) {
// // // // // // // // // // // // // //             five--
// // // // // // // // // // // // // //             ten--
// // // // // // // // // // // // // //         }
// // // // // // // // // // // // // //         else {
// // // // // // // // // // // // // //             console.log('false')
// // // // // // // // // // // // // //         }
// // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // }

// // // // // // // // // // // // // // nums = [1, 2, 3, 6]
// // // // // // // // // // // // // // nums = [3,3,6,4,5]
// // // // // // // // // // // // // // nums = [1,1,1,3,5]
// // // // // // // // // // // // // // let count = 0
// // // // // // // // // // // // // // for (let i = 0; i < nums.length - 3; i++) {
// // // // // // // // // // // // // //     let j = i + 1
// // // // // // // // // // // // // //     let k = j + 1
// // // // // // // // // // // // // //     let l = k + 1
// // // // // // // // // // // // // //     if (nums[i] + nums[j] + nums[k] == nums[l]) {
// // // // // // // // // // // // // //         count++
// // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // }
// // // // // // // // // // // // // // console.log(count)
// // // // // // // // // // // // // // nums = [7, 1, 5, 4]
// // // // // // // // // // // // // // nums = [9,4,3,2]
// // // // // // // // // // // // // // nums = [1,5,2,10]
// // // // // // // // // // // // // // let i = 0
// // // // // // // // // // // // // // let max = -1
// // // // // // // // // // // // // // let j = i + 1
// // // // // // // // // // // // // // while (i <= nums.length - 2) {
// // // // // // // // // // // // // //     if (i < j && nums[i] < nums[j]) {
// // // // // // // // // // // // // //         diff = nums[j] - nums[i]
// // // // // // // // // // // // // //         if (diff > max) {
// // // // // // // // // // // // // //             max = diff
// // // // // // // // // // // // // //         }
// // // // // // // // // // // // // //     }
// // // // // // // // // // // // // //     j++
// // // // // // // // // // // // // //     if (j > nums.length - 1) {
// // // // // // // // // // // // // //         i++
// // // // // // // // // // // // // //         j = i + 1
// // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // }
// // // // // // // // // // // // // // console.log(max)


// // // // // // // // // // // // // // s = "XXOX"
// // // // // // // // // // // // // // let k = 3
// // // // // // // // // // // // // // s = s.split('')
// // // // // // // // // // // // // // let count = 0
// // // // // // // // // // // // // // let haa = 0
// // // // // // // // // // // // // // for (let i = 0; i < s.length; i++) {
// // // // // // // // // // // // // //     for (let j = 0; j < k; j++) {
// // // // // // // // // // // // // //         if(s[j] == 'X'){
// // // // // // // // // // // // // //             haa++
// // // // // // // // // // // // // //             s[j] = '0'
// // // // // // // // // // // // // //         }
// // // // // // // // // // // // // //     }
// // // // // // // // // // // // // //     if(haa>0){
// // // // // // // // // // // // // //         count++
// // // // // // // // // // // // // //         haa++
// // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // }
// // // // // // // // // // // // // // console.log(count)

// // // // // // // // // // // // // // s = "1 box has 3 blue 4 red 6 green and 12 yellow marbles"
// // // // // // // // // // // // // // s = s.split(' ')
// // // // // // // // // // // // // // let arr = []
// // // // // // // // // // // // // // for (let i = 0; i < s.length; i++) {
// // // // // // // // // // // // // //     if (Number(s[i])) {
// // // // // // // // // // // // // //         arr.push(Number(s[i]))
// // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // }
// // // // // // // // // // // // // // let count = 0
// // // // // // // // // // // // // // for (let i = 0; i < arr.length; i++) {
// // // // // // // // // // // // // //     if (arr[i] < arr[i + 1]) {
// // // // // // // // // // // // // //         count++
// // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // }
// // // // // // // // // // // // // // // if (count == arr.length - 1){
// // // // // // // // // // // // // //     console.log('true')
// // // // // // // // // // // // // // }


// // // // // // // // // // // // // // nums = [1, 12, -5, -6, 50, 3], k = 4
// // // // // // // // // // // // // // nums = [5], k = 1
// // // // // // // // // // // // // // let left = 0
// // // // // // // // // // // // // // let right = 0
// // // // // // // // // // // // // // let max = -Infinity
// // // // // // // // // // // // // // for (let i = 0; i < k; i++) {
// // // // // // // // // // // // // //     right = right + nums[i]
// // // // // // // // // // // // // // }
// // // // // // // // // // // // // // let i = k - 1
// // // // // // // // // // // // // // while (left <= nums.length - k) {
// // // // // // // // // // // // // //     avg = right / k
// // // // // // // // // // // // // //     if (avg > max) {
// // // // // // // // // // // // // //         max = avg
// // // // // // // // // // // // // //     }
// // // // // // // // // // // // // //     i++
// // // // // // // // // // // // // //     right = right - nums[left] + nums[i]
// // // // // // // // // // // // // //     left++
// // // // // // // // // // // // // // }
// // // // // // // // // // // // // // console.log(max)

// // // // // // // // // // // // // // s = "xyzzaz"
// // // // // // // // // // // // // // s = "aababcabc"
// // // // // // // // // // // // // // s = s.split("")
// // // // // // // // // // // // // // let k = 3
// // // // // // // // // // // // // // let str = ''
// // // // // // // // // // // // // // for (let i = 0; i < k; i++) {
// // // // // // // // // // // // // //     str = str + s[i]
// // // // // // // // // // // // // // }
// // // // // // // // // // // // // // let count = 0
// // // // // // // // // // // // // // str = str.split("")
// // // // // // // // // // // // // // let l = 0
// // // // // // // // // // // // // // for (let i = 0; i <= s.length -k; i++) {
// // // // // // // // // // // // // //     if (str[l] != str[l + 1] && str[l+1] != str[l + 2] && str[l] != str[l+2]) {
// // // // // // // // // // // // // //         count++
// // // // // // // // // // // // // //     }
// // // // // // // // // // // // // //     str.push(s[k+i])
// // // // // // // // // // // // // //     str.shift(0)
// // // // // // // // // // // // // // }
// // // // // // // // // // // // // // console.log(count)

// // // // // // // // // // // // // // nums = [2,1,4,3,5], k = 10
// // // // // // // // // // // // // // nums.sort()
// // // // // // // // // // // // // // console.log(nums)

// // // // // // // // // // // // // // nums = [4, 3, 2, 1]
// // // // // // // // // // // // // // let arr = []
// // // // // // // // // // // // // // for (let i = 0; i <= nums.length - 1; i++) {
// // // // // // // // // // // // // //     if(i%10 == nums[i]){
// // // // // // // // // // // // // //         arr.push(i)
// // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // }
// // // // // // // // // // // // // // return Math.min(...arr)

// // // // // // // // // // // // // // word = "cuaieuouac"
// // // // // // // // // // // // // // word = word.split("")
// // // // // // // // // // // // // // let k = 5
// // // // // // // // // // // // // // str = ''
// // // // // // // // // // // // // // for (let i = 0; i < k; i++) {
// // // // // // // // // // // // // //     str = str + word[i]
// // // // // // // // // // // // // // }
// // // // // // // // // // // // // // console.log(str)
// // // // // // // // // // // // // // str = str.split("")
// // // // // // // // // // // // // // let i = k - 1
// // // // // // // // // // // // // // let count = 0
// // // // // // // // // // // // // // for (let i = 0; i < word.length; i++) {
// // // // // // // // // // // // // //     if (str.includes('a') && str.includes('e') && str.includes('i') && str.includes('o') && str.includes('u')) {
// // // // // // // // // // // // // //         count++
// // // // // // // // // // // // // //     }
// // // // // // // // // // // // // //     i++
// // // // // // // // // // // // // //     let a = 
// // // // // // // // // // // // // //     str.push()
// // // // // // // // // // // // // // }
// // // // // // // // // // // // // let word1 = "aaaa", word2 = "aaaa"
// // // // // // // // // // // // // word1 = "aaaa", word2 = "bccb"
// // // // // // // // // // // // // word1 =
// // // // // // // // // // // // //     "zzzyyy"
// // // // // // // // // // // // // word2 =
// // // // // // // // // // // // //     "iiiiii"
// // // // // // // // // // // // // word1 = "abcdeef", word2 = "abaaacc"
// // // // // // // // // // // // // word1 = word1.split("").sort()
// // // // // // // // // // // // // word2 = word2.split("").sort()
// // // // // // // // // // // // // let map = new Map()
// // // // // // // // // // // // // word1.forEach(element => {
// // // // // // // // // // // // //     if (map.has(element)) {
// // // // // // // // // // // // //         map.set(element, map.get(element) + 1)
// // // // // // // // // // // // //     }
// // // // // // // // // // // // //     else {
// // // // // // // // // // // // //         map.set(element, 1)
// // // // // // // // // // // // //     }
// // // // // // // // // // // // // });
// // // // // // // // // // // // // let map2 = new Map()
// // // // // // // // // // // // // word2.forEach((value) => {
// // // // // // // // // // // // //     if (map.has(value) && map2.has(value)) {
// // // // // // // // // // // // //         let count = map.get(value)
// // // // // // // // // // // // //         let freq = count - 1
// // // // // // // // // // // // //         map.set(value, freq)
// // // // // // // // // // // // //     }
// // // // // // // // // // // // //     if (map2.has(value)) {
// // // // // // // // // // // // //         map2.set(value, map2.get(value) + 1)
// // // // // // // // // // // // //     }
// // // // // // // // // // // // //     else {
// // // // // // // // // // // // //         map2.set(value, 1)
// // // // // // // // // // // // //     }
// // // // // // // // // // // // // })
// // // // // // // // // // // // // let array = Array.from(map.values())
// // // // // // // // // // // // // let array2 = Array.from(map2.values())
// // // // // // // // // // // // // let count = 0
// // // // // // // // // // // // // for (let i = 0; i < array.length; i++) {
// // // // // // // // // // // // //     if (array[i] == undefined) {
// // // // // // // // // // // // //         array[i] = 0
// // // // // // // // // // // // //     }
// // // // // // // // // // // // //     else if (array2[i] == undefined) {
// // // // // // // // // // // // //         array2[i] = 0
// // // // // // // // // // // // //     }
// // // // // // // // // // // // //     if (array[i] <= 3 && array2[i] <= 3) {
// // // // // // // // // // // // //         count++
// // // // // // // // // // // // //     }
// // // // // // // // // // // // // }
// // // // // // // // // // // // // if (count == array.length) {
// // // // // // // // // // // // //     console.log('true')
// // // // // // // // // // // // // }
// // // // // // // // // // // // // else {
// // // // // // // // // // // // //     console.log('false')
// // // // // // // // // // // // // }



// // // // // // // // // // // // // // array = Array.from(map.values())
// // // // // // // // // // // // // // array2 = Array.from(map2.values())
// // // // // // // // // // // // // // console.log(array,array2)
// // // // // // // // // // // // // // if(array.length > array2.length) {l = array.length} else {l = array2.length}
// // // // // // // // // // // // // // for (let i = 0; i < l; i++) {
// // // // // // // // // // // // // //     if(array[i] == undefined){
// // // // // // // // // // // // // //         array[i] = 0
// // // // // // // // // // // // // //     }
// // // // // // // // // // // // // //     else if(array2[i] == undefined){
// // // // // // // // // // // // // //         array2[i] = 0
// // // // // // // // // // // // // //     }
// // // // // // // // // // // // // //     diff = Math.abs(array[i] - array2[i])
// // // // // // // // // // // // // //     if(diff == 3){
// // // // // // // // // // // // // //         return true
// // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // }
// // // // // // // // // // // // // // return false

// // // // // // // // // // // // words1 = ["a", "ab"], words2 = ["a", "a", "a", "ab"]
// // // // // // // // // // // // words1 = ["leetcode", "is", "amazing", "as", "is"], words2 = ["amazing", "leetcode", "is"]
// // // // // // // // // // // // words1 = ["a","ab"], words2 = ["a","a","a","ab"]
// // // // // // // // // // // // let map = new Map()
// // // // // // // // // // // // words2.forEach(element => {
// // // // // // // // // // // //     if (map.has(element)) {
// // // // // // // // // // // //         map.set(element, map.get(element) + 1)
// // // // // // // // // // // //     }
// // // // // // // // // // // //     else {
// // // // // // // // // // // //         map.set(element, 1)
// // // // // // // // // // // //     }
// // // // // // // // // // // // });
// // // // // // // // // // // // let map2 = new Map()
// // // // // // // // // // // // words1.forEach(element => {
// // // // // // // // // // // //     if (map2.has(element)) {
// // // // // // // // // // // //         map2.delete(element)
// // // // // // // // // // // //     }
// // // // // // // // // // // //     else {
// // // // // // // // // // // //         map2.set(element, 1)
// // // // // // // // // // // //     }
// // // // // // // // // // // // });
// // // // // // // // // // // // console.log(map,map2)
// // // // // // // // // // // // let array = Array.from(map.keys())
// // // // // // // // // // // // let array2 = Array.from(map2.keys())
// // // // // // // // // // // // let count = 0
// // // // // // // // // // // // for (let i = 0; i < array.length; i++) {
// // // // // // // // // // // //     if(array.includes(array2[i])){
// // // // // // // // // // // //         count++
// // // // // // // // // // // //     }
// // // // // // // // // // // // }
// // // // // // // // // // // // console.log(count)
// // // // // // // // // // // // nums = [-100000, -100000]
// // // // // // // // // // // // nums = [-4, -2, 1, 4, 8]
// // // // // // // // // // // // let arr = []
// // // // // // // // // // // // let min = -Infinity
// // // // // // // // // // // // let max = -Infinity
// // // // // // // // // // // // for (let i = 0; i < nums.length; i++) {
// // // // // // // // // // // //     diff = (Math.abs(nums[i]) - 0)
// // // // // // // // // // // //     a = nums.indexOf(nums[i])
// // // // // // // // // // // //     console.log(a)
// // // // // // // // // // // //     if (diff > max) {
// // // // // // // // // // // //         min = max
// // // // // // // // // // // //         max = diff
// // // // // // // // // // // //     }
// // // // // // // // // // // //     arr.push(a)
// // // // // // // // // // // // }
// // // // // // // // // // // // console.log(Math.min(...arr))
// // // // // // // // // // // // console.log(min)


// // // // // // // // // // // // arrays = [[1, 2, 3], [4, 5], [1, 2, 3]]
// // // // // // // // // // // // let min = arrays[0][0]
// // // // // // // // // // // // let max = arrays[0][arrays[0].length - 1]
// // // // // // // // // // // // let maxdiff = 0
// // // // // // // // // // // // for (let i = 1; i < arrays.length; i++) {
// // // // // // // // // // // //     let first_diff = arrays[i][arrays[i].length - 1] - min
// // // // // // // // // // // //     let second_diff = max - arrays[i][0]
// // // // // // // // // // // //     maxdiff = Math.max(maxdiff, first_diff, second_diff)

// // // // // // // // // // // //     min = Math.min(min, arrays[i][0])
// // // // // // // // // // // //     max = Math.max(max, arrays[i][arrays[i].length - 1])

// // // // // // // // // // // // }
// // // // // // // // // // // // console.log(maxdiff)


// // // // // // // // // // // // prices = [3, 2, 3], money = 3
// // // // // // // // // // // // prices = [69, 91, 78, 19, 40, 13], money = 94
// // // // // // // // // // // // prices.sort((a, b) => a - b)
// // // // // // // // // // // // let count = 0
// // // // // // // // // // // // for (let i = 0; i < prices.length - 1; i++) {
// // // // // // // // // // // //     a = prices[i] + prices[i + 1]
// // // // // // // // // // // //     if (a <= money) {
// // // // // // // // // // // //         money = money - a
// // // // // // // // // // // //     }
// // // // // // // // // // // // }
// // // // // // // // // // // // console.log(money)

// // // // // // // // // // // // nums1 =
// // // // // // // // // // // // [1,1,2]
// // // // // // // // // // // // nums2 =
// // // // // // // // // // // // [2,4]

// // // // // // // // // // // // items1 = [[1, 1], [4, 5], [3, 8]], items2 = [[3, 1], [1, 5]]
// // // // // // // // // // // // let map = new Map()
// // // // // // // // // // // // let map2 = new Map()
// // // // // // // // // // // // items1.forEach(element => {
// // // // // // // // // // // //     if (map.has(element)) {
// // // // // // // // // // // //         map.set(element, map.get(element) + 1)
// // // // // // // // // // // //     }
// // // // // // // // // // // //     else {
// // // // // // // // // // // //         map.set(element, 1)
// // // // // // // // // // // //     }

// // // // // // // // // // // // })
// // // // // // // // // // // // items2.forEach((value)=>{
// // // // // // // // // // // //     if(map2.has(value)){
// // // // // // // // // // // //         map2.set(value,map2.get(value)+1)
// // // // // // // // // // // //     }
// // // // // // // // // // // //     else{
// // // // // // // // // // // //         map2.set(value,1)
// // // // // // // // // // // //     }
// // // // // // // // // // // // })
// // // // // // // // // // // // console.log(map)
// // // // // // // // // // // // console.log(map2)

// // // // // // // // // // // // values = [8, 1, 5, 2, 6]
// // // // // // // // // // // // values = [1, 2]
// // // // // // // // // // // // let max = -Infinity
// // // // // // // // // // // // a = values[i] + values[j] + i - j
// // // // // // // // // // // // a = values[i] - i + values[j] + j
// // // // // // // // // // // // let sum = 0
// // // // // // // // // // // // for (let right = 0; right < values.length; right++) {

// // // // // // // // // // // // }
// // // // // // // // // // // // console.log(max)

// // // // // // // // // // // // nums = [11, 7, 2, 15]
// // // // // // // // // // // // nums = [-71, -71, 93, -71, 40]
// // // // // // // // // // // // nums = [-3, 3, 3, 90]

// // // // // // // // // // // // nums.sort((a, b) => a - b)
// // // // // // // // // // // // let min = Math.min(...nums)
// // // // // // // // // // // // let max = Math.max(...nums)
// // // // // // // // // // // // let count = 0
// // // // // // // // // // // // for (let i = 1; i < nums.length - 1; i++) {
// // // // // // // // // // // //     if (nums[i] > min && nums[i] < max) {
// // // // // // // // // // // //         count++
// // // // // // // // // // // //     }
// // // // // // // // // // // // }
// // // // // // // // // // // // console.log(count)
// // // // // // // // // // // // nums = [1, 2, 3, 3, 4]
// // // // // // // // // // // // let map = new Map()
// // // // // // // // // // // // nums.forEach((value) => {
// // // // // // // // // // // //     if (map.has(value)) {
// // // // // // // // // // // //         map.set(value, map.get(value) + 1)
// // // // // // // // // // // //     }
// // // // // // // // // // // //     else {
// // // // // // // // // // // //         map.set(value, 1)
// // // // // // // // // // // //     }
// // // // // // // // // // // // })
// // // // // // // // // // // // for (let [key, value] of map) {
// // // // // // // // // // // //     if (value > 1) {
// // // // // // // // // // // //         return key
// // // // // // // // // // // //     }
// // // // // // // // // // // //

// // // // // // // // // // // // let nums = [1, 1, 1, 2, 2, 3]
// // // // // // // // // // // // nums = [0,0,1,1,1,1,2,3,3]
// // // // // // // // // // // // let slow = 2
// // // // // // // // // // // // let fast = 2
// // // // // // // // // // // // for (let i = 0; i < nums.length - 2; i++) {
// // // // // // // // // // // //     if (nums[slow - 2] == nums[fast]) {
// // // // // // // // // // // //         fast++
// // // // // // // // // // // //     }
// // // // // // // // // // // //     else if (nums[slow - 2] != nums[fast]) {
// // // // // // // // // // // //         nums[slow++] = nums[fast++]
// // // // // // // // // // // //         slow++
// // // // // // // // // // // //     }
// // // // // // // // // // // // }
// // // // // // // // // // // // console.log(nums)
// // // // // // // // // // // // console.log(slow)
// // // // // // // // // // // // console.log(fast)

// // // // // // // // // // // // sentence = "thequickbrownfoxjumpsoverthelazydog"
// // // // // // // // // // // // sentence = sentence.split('')
// // // // // // // // // // // // for (let i = 97; i <= 122; i++) {
// // // // // // // // // // // //     a = String.fromCharCode(i)
// // // // // // // // // // // //     if(!sentence.includes(a)){
// // // // // // // // // // // //         console.log('false')
// // // // // // // // // // // //     }
// // // // // // // // // // // // }
// // // // // // // // // // // // console.log('true')


// // // // // // // // // // // // s = "dart", k = 3

// // // // // // // // // // // // let n = s.length
// // // // // // // // // // // // s = s.split('')
// // // // // // // // // // // // let str = ''
// // // // // // // // // // // // for (let i = 0; i < s.length; i++) {
// // // // // // // // // // // //     a = (i + k) % n
// // // // // // // // // // // //     str = str + s[a]
// // // // // // // // // // // // }
// // // // // // // // // // // // console.log(str)

// // // // // // // // // // // // hours = [12, 12, 30, 24, 24]
// // // // // // // // // // // // let count = 0
// // // // // // // // // // // // for (let i = 0; i < hours.length - 1; i++) {
// // // // // // // // // // // //     for (let j = i + 1; j < hours.length; j++) {
// // // // // // // // // // // //         a = hours[i] / 24
// // // // // // // // // // // //         b = a * hours[i]
// // // // // // // // // // // //         if (a == b) {
// // // // // // // // // // // //             count++
// // // // // // // // // // // //         }
// // // // // // // // // // // //     }
// // // // // // // // // // // // }
// // // // // // // // // // // // console.log(count)

// // // // // // // // // // // // nums = [4, 3, 1, 6]
// // // // // // // // // // // // nums = [2, 1, 4]
// // // // // // // // // // // // let count = 0
// // // // // // // // // // // // for (let i = 0; i < nums.length - 1; i++) {
// // // // // // // // // // // //     let j = i + 1
// // // // // // // // // // // //     if (nums[i] % 2 == 0 && nums[j] % 2 == 0) {
// // // // // // // // // // // //         console.log('false')
// // // // // // // // // // // //     }
// // // // // // // // // // // //     else if (nums[i] % 2 != 0 && nums[j] % 2 != 0) {
// // // // // // // // // // // //         console.log('false')
// // // // // // // // // // // //     }
// // // // // // // // // // // // }

// // // // // // // // // // // // nums = [10, 21, 31]
// // // // // // // // // // // // nums = [1, 2, 3]

// // // // // // // // // // // // nums = [109]
// // // // // // // // // // // // let sum = 0
// // // // // // // // // // // // for (let i = 0; i < nums.length; i++) {
// // // // // // // // // // // //     a = nums[i].toString().split('')
// // // // // // // // // // // //     if (a.length > 1) {
// // // // // // // // // // // //         max = Math.max(...a)
// // // // // // // // // // // //         a = a.filter((acc, dcc) => {
// // // // // // // // // // // //             if (acc < max) {
// // // // // // // // // // // //                 max = acc
// // // // // // // // // // // //             }
// // // // // // // // // // // //         })
// // // // // // // // // // // //         console.log(a)
// // // // // // // // // // // //         sum = sum + b
// // // // // // // // // // // //     }
// // // // // // // // // // // //     else {
// // // // // // // // // // // //         sum = sum + nums[i]
// // // // // // // // // // // //     }
// // // // // // // // // // // // }
// // // // // // // // // // // // console.log(sum)


// // // // // // // // // // // // n = 3
// // // // // // // // // // // // if (n == 1) {
// // // // // // // // // // // //     console.log('0')
// // // // // // // // // // // // }
// // // // // // // // // // // // let num = 2
// // // // // // // // // // // // sum = 0
// // // // // // // // // // // // while (n > 1) {
// // // // // // // // // // // //     while (n % num == 0) {
// // // // // // // // // // // //         sum = sum + num
// // // // // // // // // // // //         n = n / num
// // // // // // // // // // // //     }
// // // // // // // // // // // //     num++
// // // // // // // // // // // // }
// // // // // // // // // // // // console.log(sum)

// // // // // // // // // // // // m = 2, n = 3, indices = [[0, 1], [1, 1]]
// // // // // // // // // // // // let arr = []
// // // // // // // // // // // // let matrix = Array.from({ length: m }, () => Array(3).fill(0));
// // // // // // // // // // // // console.log(matrix)
// // // // // // // // // // // // let j = 0
// // // // // // // // // // // // for (let i = 0; i < indices[0].length; i++) {

// // // // // // // // // // // //     a = indices[j][i]


// // // // // // // // // // // // }
// // // // // // // // // // // // matrix = [[1, 3, 5, 7], [10, 11, 16, 20], [23, 30, 34, 60]], target = 3
// // // // // // // // // // // // let array = []
// // // // // // // // // // // // for (let i = 0; i < matrix.length; i++) {
// // // // // // // // // // // //     array = array.concat(matrix[i])
// // // // // // // // // // // // }
// // // // // // // // // // // // console.log(array)
// // // // // // // // // // // // array = array.sort((a, b) => a - b)
// // // // // // // // // // // // if (array.includes(target)) {
// // // // // // // // // // // //     console.log('true')
// // // // // // // // // // // // }


// // // // // // // // // // // // target = 7, nums = [2,3,1,2,4,3]
// // // // // // // // // // // // s1 = s1.split('')
// // // // // // // // // // // // let m1 = new Map()
// // // // // // // // // // // // s1.forEach(element => {
// // // // // // // // // // // //     if(m1.has(element)){
// // // // // // // // // // // //         m1.set(element,m1.get(element)+1)
// // // // // // // // // // // //     }
// // // // // // // // // // // //     else{
// // // // // // // // // // // //         m1.set(element,1)
// // // // // // // // // // // //     }
// // // // // // // // // // // // });
// // // // // // // // // // // // s2 = s2.split("")
// // // // // // // // // // // // for (let i = 0; i < s2.length; i++) {

// // // // // // // // // // // // }

// // // // // // // // // // // // let count = 0
// // // // // // // // // // // // let l = 0
// // // // // // // // // // // // s2 = s2.split('')
// // // // // // // // // // // // let n = s1.length
// // // // // // // // // // // // s1 = s1.split('')
// // // // // // // // // // // // let i = 0
// // // // // // // // // // // // while (s2.length != 0) {
// // // // // // // // // // // //     if (s1.includes(s2[i])) {
// // // // // // // // // // // //         count++
// // // // // // // // // // // //         a = s2[i]
// // // // // // // // // // // //         index = s1.indexOf(a)
// // // // // // // // // // // //         s2.splice(i, 1)
// // // // // // // // // // // //         s1.splice(index, 1)
// // // // // // // // // // // //         l++
// // // // // // // // // // // //         if (count == n) {
// // // // // // // // // // // //             console.log('true')
// // // // // // // // // // // //         }
// // // // // // // // // // // //     }
// // // // // // // // // // // //     else {
// // // // // // // // // // // //         s2.splice(i, 1)
// // // // // // // // // // // //         count = 0
// // // // // // // // // // // //     }
// // // // // // // // // // // // }

// // // // // // // // // // // // console.log('false')


// // // // // // // // // // // // s1 = "ab", s2 = "eidbaoo"
// // // // // // // // // // // // s1 = "hello", s2 = "ooolleoooleh"
// // // // // // // // // // // // let length = s1.length
// // // // // // // // // // // // for (let i = 0; i < s2.length - s1.length; i++) {
// // // // // // // // // // // //     let a = s2.slice(i, length + i).split('').sort().join('')
// // // // // // // // // // // //     if (s1.split('').sort().join('') == a) {
// // // // // // // // // // // //         console.log('true')
// // // // // // // // // // // //     }

// // // // // // // // // // // // }


// // // // // // // // // // // // let target = 6,nums =[10,2,3]
// // // // // // // // // // // //     let sum = nums[0]
// // // // // // // // // // // //     let length = 1
// // // // // // // // // // // //     let max_l = Infinity
// // // // // // // // // // // //     let k = 0
// // // // // // // // // // // //     for (let i = 1; i < nums.length; i++) {
// // // // // // // // // // // //         while (sum >= target) {
// // // // // // // // // // // //             if (length < max_l) {
// // // // // // // // // // // //                 max_l = length
// // // // // // // // // // // //             }
// // // // // // // // // // // //             sum = sum - nums[k]
// // // // // // // // // // // //             k++
// // // // // // // // // // // //             length--
// // // // // // // // // // // //         }
// // // // // // // // // // // //         sum = sum + nums[i]
// // // // // // // // // // // //         length++
// // // // // // // // // // // //     }
// // // // // // // // // // // //     if (max_l == Infinity) {
// // // // // // // // // // // //         max_l = 0
// // // // // // // // // // // //     }
// // // // // // // // // // // // console.log(length)



// // // // // // // // // // // // words = ["cat", "bt", "hat", "tree"], chars = "atach"
// // // // // // // // // // // // words = ["hello", "world", "leetcode"], chars = "welldonehoneyr"
// // // // // // // // // // // // let charsCopy = [...chars]
// // // // // // // // // // // // let i = 0
// // // // // // // // // // // // let count = 0
// // // // // // // // // // // // let sum = 0
// // // // // // // // // // // // while (i < words.length) {
// // // // // // // // // // // //     let length = words[i].length
// // // // // // // // // // // //     a = words[i].split('')
// // // // // // // // // // // //     for (let i = 0; i < a.length; i++) {
// // // // // // // // // // // //         if (chars.includes(a[i])) {
// // // // // // // // // // // //             let index = charsCopy.indexOf(a[i]);  // Find the index of the character
// // // // // // // // // // // //             charsCopy.splice(index, 1);
// // // // // // // // // // // //             count++
// // // // // // // // // // // //         }
// // // // // // // // // // // //         else {
// // // // // // // // // // // //             count = 0
// // // // // // // // // // // //             break
// // // // // // // // // // // //         }
// // // // // // // // // // // //     }
// // // // // // // // // // // //     if (count == length) {
// // // // // // // // // // // //         sum = sum + count
// // // // // // // // // // // //     }
// // // // // // // // // // // //     i++
// // // // // // // // // // // // }
// // // // // // // // // // // // console.log(sum)

// // // // // // // // // // // nums = [2, -3, -1, 5, -4], k = 2
// // // // // // // // // // // nums = [3, -1, 0, 2], k = 3
// // // // // // // // // // // nums = [4, 2, 3], k = 1
// // // // // // // // // // // nums = [5, 6, 9, -3, 3], k = 2


// // // // // // // // // // // nums.sort((a, b) => a - b)
// // // // // // // // // // // let l = 0
// // // // // // // // // // // for (let i = 0; i < k; i++) {
// // // // // // // // // // //     if (nums[i] < 0 && l < k) {
// // // // // // // // // // //         nums[i] = nums[i] * -1
// // // // // // // // // // //         l++
// // // // // // // // // // //     }
// // // // // // // // // // //     else if (nums[i] > 0 && l < k) {
// // // // // // // // // // //         let a = Math.min(...nums)
// // // // // // // // // // //         let index = nums.indexOf(a)
// // // // // // // // // // //         nums[index] *= -1
// // // // // // // // // // //     }
// // // // // // // // // // // }
// // // // // // // // // // // let sum = 0
// // // // // // // // // // // for (let i = 0; i < nums.length; i++) {
// // // // // // // // // // //     sum = sum + nums[i]
// // // // // // // // // // // }
// // // // // // // // // // // console.log(sum)

// // // // // // // // // // nums = [1, 1, 1], k = 2
// // // // // // // // // // nums = [1,2,3], k = 3
// // // // // // // // // // let first = nums[0]
// // // // // // // // // // let count = 0
// // // // // // // // // // let left = 0
// // // // // // // // // // if (first == k) {
// // // // // // // // // //     count++
// // // // // // // // // // }
// // // // // // // // // // for (let i = 1; i < nums.length; i++) {
// // // // // // // // // //     first = first + nums[i]
// // // // // // // // // //     while (first > k) {
// // // // // // // // // //         first = first - nums[left]
// // // // // // // // // //         left++
// // // // // // // // // //     }
// // // // // // // // // //     if (first == k) {
// // // // // // // // // //         count++
// // // // // // // // // //     }
// // // // // // // // // // }
// // // // // // // // // // console.log(count)

// // // // // // // // // // let nums = [1, 3, 4, 1, 2, 3, 1]

// // // // // // // // // // let result = []
// // // // // // // // // // let col = []
// // // // // // // // // // for (let i = 0; i < nums.length; i++) {
// // // // // // // // // //     for (let j = i; j < nums.length; j++) {
// // // // // // // // // //         if(!col.includes(nums[j])){
// // // // // // // // // //             col.push(nums[j])
// // // // // // // // // //         }
// // // // // // // // // //         else {
// // // // // // // // // //             result.push(col)
// // // // // // // // // //             col = []
// // // // // // // // // //             col.push(nums[i])
// // // // // // // // // //             break
// // // // // // // // // //         }
// // // // // // // // // //     }

// // // // // // // // // // }
// // // // // // // // // // console.log(result)



// // // // // // // // // // original = [1, 2], m = 1, n = 1
// // // // // // // // // // original = [1, 2, 3], m = 1, n = 3
// // // // // // // // // // original = [1, 2, 3, 4], m = 2, n = 2
// // // // // // // // // // if (m * n !== original.length) {
// // // // // // // // // //     console.log('[]')
// // // // // // // // // // }
// // // // // // // // // // let res = []
// // // // // // // // // // let org = []
// // // // // // // // // // for (let i = 0; i < m; i++) {
// // // // // // // // // //     for (let i = 0; i < n; i++) {
// // // // // // // // // //         res.push(original[j])
// // // // // // // // // //     }
// // // // // // // // // //     org.push(res)
// // // // // // // // // //     res = []
// // // // // // // // // // }
// // // // // // // // // // console.log(org)

// // // // // // // // // nums = [1, 3, 4, 1, 2, 3, 1]
// // // // // // // // // let arr = []
// // // // // // // // // while (nums.length > 0) {
// // // // // // // // //     let two = []
// // // // // // // // //     for (let i = 0; i < nums.length; i++) {
// // // // // // // // //         if (!two.includes(nums[i])) {
// // // // // // // // //             two.push(nums[i])
// // // // // // // // //             nums.splice(i, 1)
// // // // // // // // //             i--
// // // // // // // // //         }
// // // // // // // // //     }
// // // // // // // // //     arr.push(two)
// // // // // // // // // }
// // // // // // // // // console.log(arr)

// // // // // // // // // nums = [1, 1, 2, 3, 3, 4, 4, 8, 8]
// // // // // // // // // let left = 0
// // // // // // // // // let right = nums.length - 1
// // // // // // // // // for (let i = 0; i < nums.length; i++) {
// // // // // // // // //     let mid = left + (left + right) / 2
// // // // // // // // //     if (nums[mid] !== nums[mid + 1]) {
// // // // // // // // //         right = mid - 1
// // // // // // // // //     }
// // // // // // // // //     if (nums[mid] == )

// // // // // // // // // }
// // // // // // // // // left = '24'
// // // // // // // // // right = '42'
// // // // // // // // // console.log(left.split('').reverse().join(''))

// // // // // // // // // matrix = [[1, 5, 9], [10, 11, 13], [12, 13, 15]], k = 8
// // // // // // // // // matrix = [[-5]], k = 1
// // // // // // // // // let arr = []
// // // // // // // // // for (let i = 0; i < matrix.length; i++) {
// // // // // // // // //     arr = arr.concat(matrix[i])
// // // // // // // // // }
// // // // // // // // // arr.sort((a, b) => a - b)
// // // // // // // // // console.log(arr[k - 1])
// // // // // // // // // nums = [1, 2, 3, 4]
// // // // // // // // // let set = new Set()
// // // // // // // // // set.add(nums[0])
// // // // // // // // // console.log(Array.from(set))


// // // // // // // // // let n = 3
// // // // // // // // // let arr = []
// // // // // // // // // for (let i = 1; i <= n; i++) {
// // // // // // // // //     if (i % 3 == 0 && i % 5 == 0) {
// // // // // // // // //         arr.push('FizzBuzz')
// // // // // // // // //     }
// // // // // // // // //     else if (i % 3 == 0 && i % 5 != 0) {
// // // // // // // // //         arr.push('Fizz')
// // // // // // // // //     }
// // // // // // // // //     else if (i % 5 == 0 && i % 3 != 0) {
// // // // // // // // //         arr.push("Buzz")
// // // // // // // // //     }
// // // // // // // // //     else {
// // // // // // // // //         a = i.toString()
// // // // // // // // //         arr.push(a)
// // // // // // // // //     }
// // // // // // // // // }
// // // // // // // // // console.log(arr)

// // // // // // // // // strs = ["cba","daf","ghi"]

// // // // // // // // // for (let i = 0; i < strs.length; i++) {
// // // // // // // // //     a = str[i].split("")
// // // // // // // // //     for (let j = 0; j < a.length; j++) {

// // // // // // // // //     }
// // // // // // // // // }


// // // // // // // // // values = [8, 1, 5, 2, 6]
// // // // // // // // // let max = -Infinity
// // // // // // // // // let maxl = values[0] + 0
// // // // // // // // // for (let j = 1; j < values.length; j++) {
// // // // // // // // //     a = maxl + values[j] - j
// // // // // // // // //     max = Math.max(a, max)
// // // // // // // // //     maxl = Math.max(maxl, values[j] + j)
// // // // // // // // // }
// // // // // // // // // console.log(max)

// // // // // // // // // let comb = [2,5]
// // // // // // // // // let arr = []
// // // // // // // // // // comb = comb.reverse()
// // // // // // // // // // console.log(arr.concat(comb))
// // // // // // // // // nums = [1,2,3,3]
// // // // // // // // // let map = new Map()
// // // // // // // // // nums.forEach((value)=>{
// // // // // // // // //     if(map.has(value)){
// // // // // // // // //         map.set(value,map.get(value)+1)
// // // // // // // // //     }
// // // // // // // // //     else{
// // // // // // // // //         map.set(value,1)
// // // // // // // // //     }
// // // // // // // // // })
// // // // // // // // // for(let [value,key] of map){
// // // // // // // // //     console.log(value,key)
// // // // // // // // //     if(value > 1){
// // // // // // // // //         // return false
// // // // // // // // //     }
// // // // // // // // // }
// // // // // // // // // return true

// // // // // // // // // trs = ["flower", "flow", "flight"]
// // // // // // // // // let length = -1
// // // // // // // // // for (let i = 0; i < trs.length; i++) {
// // // // // // // // //     a = trs[i].length
// // // // // // // // //     if (a > length) {
// // // // // // // // //         length = a
// // // // // // // // //     }
// // // // // // // // // }
// // // // // // // // // s


// // // // // // // // // matrix = [[1, 1, 1], [1, 0, 1], [1, 1, 1]]
// // // // // // // // // matrix = [[0, 1, 2, 0], [3, 4, 5, 2], [1, 3, 1, 5]]
// // // // // // // // // let arr = []
// // // // // // // // // for (let i = 0; i < matrix.length; i++) {
// // // // // // // // //     let all_zeros = matrix[i].reduce((acc, value, index) => {
// // // // // // // // //         if (value === 0) arr.push(index)
// // // // // // // // //         return acc
// // // // // // // // //     }, [])
// // // // // // // // //     if (matrix[i].includes(0)) {
// // // // // // // // //         matrix[i] = matrix[i].map((value) => value * 0)

// // // // // // // // //     }
// // // // // // // // // }
// // // // // // // // // let i = 0
// // // // // // // // // while (arr.length != 0) {
// // // // // // // // //     a = arr.shift()
// // // // // // // // //     for (let i = 0; i < matrix.length; i++) {
// // // // // // // // //         matrix[i][a] = 0
// // // // // // // // //     }
// // // // // // // // // }
// // // // // // // // // console.log(matrix)

// // // // // // // // nums = [2, 2, 3, 3, 3, 4]
// // // // // // // // let i = 0
// // // // // // // // let arr = []
// // // // // // // // while (nums.length != 0) {
// // // // // // // //     a = nums.splice(i, 1)
// // // // // // // //     if (nums.includes(a[0] + 1)) {
// // // // // // // //         let j = 0
// // // // // // // //         while (j < nums.length) {
// // // // // // // //             if (nums[j] == (a[0] + 1)) {
// // // // // // // //                 nums.splice(j, 1)
// // // // // // // //                 j--
// // // // // // // //             }
// // // // // // // //             j++
// // // // // // // //         }
// // // // // // // //     }
// // // // // // // //     else if (nums.includes(a[0] - 1)) {
// // // // // // // //         let k = 0
// // // // // // // //         while (k < nums.length) {
// // // // // // // //             if (nums[k] == (a[0] + 1)) {
// // // // // // // //                 nums.splice(k, 1)
// // // // // // // //                 k--
// // // // // // // //             }
// // // // // // // //             k++
// // // // // // // //         }
// // // // // // // //     }

// // // // // // // // }
// // // // // // // nums = [0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], k = 3
// // // // // // // nums = [1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0], k = 2
// // // // // // // nums = [0, 0, 1, 1, 1, 0, 0], k = 0
// // // // // // // // let left = 0
// // // // // // // // let right = 0
// // // // // // // // let val = 0
// // // // // // // // let length = 0
// // // // // // // // let max_l = 0
// // // // // // // // while (right < nums.length) {
// // // // // // // //     if (val > k) {
// // // // // // // //         val = 0
// // // // // // // //         left = right
// // // // // // // //         right = left
// // // // // // // //         max_l = Math.max(max_l, right - left + 1)
// // // // // // // //         length = 1
// // // // // // // //     }
// // // // // // // //     else if (nums[right] == 0) {
// // // // // // // //         val++
// // // // // // // //         length++
// // // // // // // //     }
// // // // // // // //     else if (nums[right] != 0) {
// // // // // // // //         length++
// // // // // // // //     }
// // // // // // // //     right++
// // // // // // // // }
// // // // // // // // console.log(max_l)




// // // // // // // // let nums = [0, 0, 1, 1, 1, 0, 0], k = 0
// // // // // // // // let left = 0
// // // // // // // // let right = 0
// // // // // // // // let max_l = 0
// // // // // // // // let zerocount = 0
// // // // // // // // while (right < nums.length) {
// // // // // // // //     if (nums[right] === 0) {
// // // // // // // //         zerocount++
// // // // // // // //     }
// // // // // // // //     while (zerocount > k) {
// // // // // // // //         if (nums[left] == 0) {
// // // // // // // //             zerocount--
// // // // // // // //         }
// // // // // // // //         left++
// // // // // // // //     }
// // // // // // // //     max_l = Math.max(max_l, right - left + 1)
// // // // // // // //     right++
// // // // // // // // }
// // // // // // // // console.log(max_l)


// // // // // // // // [0, 1, 1, 1, 1]
// // // // // // // // nums = [1, 0, 1, 0, 1], goal = 2
// // // // // // // // let left = 0
// // // // // // // // let right = 0
// // // // // // // // let count = 0
// // // // // // // // let sum = 0
// // // // // // // // while (right < nums.length) {
// // // // // // // //     sum = sum + nums[right]
// // // // // // // //     while (sum > goal && left <= right) {
// // // // // // // //         sum = sum - nums[left]
// // // // // // // //         left++
// // // // // // // //     }
// // // // // // // //     if (sum == goal) {
// // // // // // // //         count++
// // // // // // // //     }
// // // // // // // //     right++
// // // // // // // // }
// // // // // // // // console.log(count)

// // // // // // // let nums = [2, 20, 4, 10, 3, 4, 5]
// // // // // // // let set = new Set(nums)
// // // // // // // let max = 0
// // // // // // // let currentstreak = 0
// // // // // // // for (let num of nums) {
// // // // // // //     if (!set.has(num - 1)) {
// // // // // // //         currentstreak = 1
// // // // // // //         currentnum = num
// // // // // // //         while (set.has(currentnum+ 1)) {
// // // // // // //             currentstreak++
// // // // // // //             currentnum++
// // // // // // //         }
// // // // // // //         max = Math.max(max, currentstreak)
// // // // // // //     }
// // // // // // // }
// // // // // // // console.log(max)

// // // // // // // s = "ADOBECODEBANC", t = "ABC"
// // // // // // // t = t.split('')
// // // // // // // s = s.split("")
// // // // // // // let map = new Map()
// // // // // // // t.forEach(element => {
// // // // // // //     if (map.has(element)) {
// // // // // // //         map.set(element, map.get(element) + 1)
// // // // // // //     }
// // // // // // //     else {
// // // // // // //         map.set(element, 0)
// // // // // // //     }
// // // // // // // });
// // // // // // // let tcount = map.size
// // // // // // // let windows = new Map()
// // // // // // // let have = 0
// // // // // // // let need = 0
// // // // // // // let r = 0
// // // // // // // let res = [-1, -1]
// // // // // // // let minlength = Infinity

// // // // // // // for (let i = 0; i < s.length; i++) {
// // // // // // //     let c = s[i];
// // // // // // //     windows.set(c, (windows.get(c) || 0) + 1);

// // // // // // //     if (windows.has(c) && windows.get(c) == map.get(c)) {
// // // // // // //         have++
// // // // // // //     }
// // // // // // //     while (have === need) {
// // // // // // //         if (i - r + 1 < minlength) {
// // // // // // //             res = [r, i]
// // // // // // //             minlength = i - r + 1
// // // // // // //         }
// // // // // // //         windows.set(s[r], windows.get(s[r] - 1))
// // // // // // //         if (map.has(s[r]) && windows.get(s[r]) < map.get(s[r])) {
// // // // // // //             have--
// // // // // // //         }
// // // // // // //         r++
// // // // // // //     }
// // // // // // //     res = [start, end]
// // // // // // //     if (minlength != Infinity) {
// // // // // // //         console.log(res.slice(start, end + 1).join(""))
// // // // // // //     }
// // // // // // // }

// // // // // // // for (let i = 0; i < s.length - t.length; i++) {
// // // // // // //     if(map.has)
// // // // // // // }

// // // // // // // nums = [0,1,0], k = 1
// // // // // // // let flips = 0
// // // // // // // for (let i = 0; i < k; i++) {
// // // // // // //     if (nums[i] == 0) {
// // // // // // //         flips++
// // // // // // //         nums[i] = 1 - nums[i]
// // // // // // //         nums[i + 1] = 1 - nums[i + 1]
// // // // // // //         nums[i + 2] = 1 - nums[i + 2]
// // // // // // //     }
// // // // // // // }
// // // // // // // if (nums[nums.length - 1] == 1 && nums[nums.length - 2] == 1) {
// // // // // // //     console.log('-1')
// // // // // // // }
// // // // // // // console.log(flips)
// // // // // // // console.log(nums)

// // // // // // nums = [1, 3, 2, 3, 3], k = 2
// // // // // // let max = Math.max(...nums)
// // // // // // let arr = []
// // // // // // let count = 0
// // // // // // let left = 0
// // // // // // let right = 0
// // // // // // let total = 0
// // // // // // while (right < nums.length) {


// // // // // //     arr.push(nums[right])
// // // // // //     if (nums[right] == max) {
// // // // // //         count++
// // // // // //     }
// // // // // //     if (count == k) {
// // // // // //         total++
// // // // // //     }
// // // // // //     while (right == nums.length - 1 && count >= k) {
// // // // // //         total++
// // // // // //         a = arr.shift()
// // // // // //         if (a == max) {
// // // // // //             count--
// // // // // //         }
// // // // // //     }
// // // // // //     right++
// // // // // // }
// // // // // // console.log(total)




// // // // // // let arr = [1, 1, 2, 2, 2]
// // // // // // let map = new Map()
// // // // // // arr.forEach((value) => {
// // // // // //     if (map.has(value)) {
// // // // // //         map.set(value, map.get(value) + 1)
// // // // // //     }
// // // // // //     else {
// // // // // //         map.set(value, 1)
// // // // // //     }
// // // // // // })
// // // // // // let repeat = []
// // // // // // let non = []
// // // // // // array = Array.from((map.entries())).sort((a, b) => b[0] - a[0])
// // // // // // console.log(array)
// // // // // // let a = array[0][1]
// // // // // // for (let [value, key] of map) {
// // // // // //     if (key == a) {
// // // // // //         repeat.push(value)
// // // // // //     }
// // // // // // }
// // // // // // if (repeat.length == 0) {
// // // // // //     p = arr.filter((value, index) => {
// // // // // //         return arr.indexOf(value) == index
// // // // // //     })
// // // // // //     return p
// // // // // // }
// // // // // // else {
// // // // // //     return repeat
// // // // // // }


// // // // // // [[7, 4, 1], [8, 5, 2], [9, 6, 3]]
// // // // // // matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
// // // // // // let arr = []
// // // // // // let total = []
// // // // // // for (let i = 0; i < matrix[0].length; i++) {
// // // // // //     for (let j = 0; j < matrix.length; j++) {
// // // // // //         arr.unshift(matrix[j][i])
// // // // // //     }
// // // // // //     total.push(arr)
// // // // // //     arr = []
// // // // // // }
// // // // // // console.log(total)
// // // // // // matrix = [
// // // // // //     [1, 2, 3],
// // // // // //     [4, 5, 6],
// // // // // //     [7, 8, 9]
// // // // // // ]

// // // // // // for (let i = 0; i < matrix.length; i++) {
// // // // // //     for (let j = 0; j < matrix.length; j++) {

// // // // // //     }

// // // // // // }
// // // // // // matrix = [[7,8],[1,2]]
// // // // // // matrix = [
// // // // // //     [3,6],
// // // // // //     [7,1],
// // // // // //     [5,2],
// // // // // //     [4,8]]
// // // // // // let arr = []

// // // // // // s = "Was it a car or a cat I saw?"
// // // // // // s = "tab a cat"
// // // // // // s = s.toLowerCase()
// // // // // // w = s.split("").reverse().join("")
// // // // // // w = w.replace(/[?,.]/g, '')
// // // // // // s = s.replace(/[.,?]/g, '')
// // // // // // s = s.replaceAll(" ", '')
// // // // // // w = w.replaceAll(" ", '')
// // // // // // console.log(w)
// // // // // // console.log(s)


// // // // // // nums = [5,1,4,1], indexDifference = 2, valueDifference = 4
// // // // // // for (let i = 0; i < nums.length; i++) {
// // // // // //     a = Math.abs(i-j)
// // // // // //     b = Math.abs(nums[i]-nums[j])
// // // // // //     if(a >= indexDifference && b >=valueDifference){
// // // // // //         console.log([a,b])
// // // // // //     }
// // // // // // }

// // // // // // nums = [4, 3, 2, 4], x = 2
// // // // // // let left = 0
// // // // // // let right = nums.length - 1
// // // // // // while (left < right) {

// // // // // //     a = Math.abs(left - right)
// // // // // //     b = Math.abs(nums[left] - nums[right])
// // // // // //     if (a >= x && )
// // // // // // }


// // // // // // letters = ["c", "f", "j"], target = "c"
// // // // // // letters = ["c", "f", "j"], target = "a"
// // // // // // let min = Infinity
// // // // // // for (let i = 0; i < letters.length; i++) {
// // // // // //     a = letters[i].charCodeAt() - 'a'.charCodeAt()
// // // // // //     min = letters[i]
// // // // // //     k = target.charCodeAt() - 'a'.charCodeAt()
// // // // // //     if (a > k) {
// // // // // //         console.log(letters[i])
// // // // // //     }
// // // // // // }


// // // // // // let matrix = [
// // // // // //     [1, 2, 3],
// // // // // //     [4, 5, 6],
// // // // // //     [7, 8, 9]
// // // // // // ]
// // // // // // for (let i = 0; i < matrix.length; i++) {
// // // // // //     for (let j = i; j < matrix.length; j++) {
// // // // // //         [matrix[i][j], matrix[j][i]] = [matrix[j][i], matrix[i][j]]

// // // // // //     }
// // // // // //     matrix[i] = matrix[i].reverse()
// // // // // // }
// // // // // // console.log(matrix)
// // // // // // for (let i = 0; i < matrix.length; i++) {

// // // // // // }


// // // // // // matrix = [
// // // // // //     [3, 7, 8],
// // // // // //     [9, 11, 13],
// // // // // //     [15, 16, 17]
// // // // // // ]
// // // // // // let arr = []
// // // // // // for (let i = 0; i < matrix.length; i++) {
// // // // // //     let min = Math.min(...matrix[i])
// // // // // //     let index = matrix[i].indexOf(min)
// // // // // //     for (let j = 0; j < matrix.length; j++) {
// // // // // //         if (min > matrix[j][index]) {
// // // // // //             arr = []
// // // // // //             arr.push(min)

// // // // // //         }
// // // // // //     }
// // // // // // }
// // // // // // console.log(arr)
// // // // // // nums = [1,2,3,3]
// // // // // // let map = {}
// // // // // // let length = nums.length
// // // // // // for (let i = 0; i < length; i++) {
// // // // // //     if (!(nums[i] in map)) {
// // // // // //         map[nums[i]] = []
// // // // // //     }
// // // // // //     map[nums[i]].push(i)
// // // // // // }
// // // // // // console.log(map)

// // // // // // matrix =
// // // // // //     [
// // // // // //         [3, 6],
// // // // // //         [7, 1],
// // // // // //         [5, 2],
// // // // // //         [4, 8]
// // // // // //     ]


// // // // // // let min = []
// // // // // // let max = []
// // // // // // for (let i = 0; i < matrix.length; i++) {
// // // // // //     a = Math.min(...matrix[i])
// // // // // //     min.push(a)
// // // // // // }
// // // // // // for (let i = 0; i < matrix.length; i++) {
// // // // // //     a = Math.max(...matrix[i])
// // // // // //     min.push(a)
// // // // // // }
// // // // // // console.log(min)


// // // // // // let cardPoints = [9, 7, 7, 9, 7, 7, 9], k = 7
// // // // // // cardPoints = [1, 2, 3, 4, 5, 6, 1], k = 3
// // // // // // let subarraysum = 0
// // // // // // let length = cardPoints.length
// // // // // // for (let i = 0; i < k; i++) {
// // // // // //     subarraysum = subarraysum + cardPoints[i]
// // // // // // }
// // // // // // let max = subarraysum
// // // // // // subarraysum = 0
// // // // // // for (let i =  1; i <= k; i++) {
// // // // // //     subarraysum = subarraysum + cardPoints[length - i] - cardPoints[k - i]
// // // // // //     max = Math.max(max, subarraysum)

// // // // // // // }
// // // // // // // console.log(max)

// // // // // // nums = [0, -4, 19, 1, 8, -2, -3, 5]
// // // // // // nums = [101]
// // // // // // nums = [2, 10, 7, 5, 4, 1, 8, 6]
// // // // // // let min = Math.min(...nums)
// // // // // // let max = Math.max(...nums)
// // // // // // let imin = 0
// // // // // // let imax = 0
// // // // // // for (let i = 0; i < nums.length; i++) {
// // // // // //     if (nums[i] == min) {
// // // // // //         imin = i
// // // // // //     }
// // // // // //     if (nums[i] == max) {
// // // // // //         imax = i
// // // // // //     }
// // // // // // }
// // // // // // if (imax < imin) {
// // // // // //     let temp = imin
// // // // // //     imin = imax
// // // // // //     imax = temp
// // // // // // }
// // // // // // console.log(imin,imax)







// // // // // // if (imin + 1 == imax || imax + 1 == imin) {
// // // // // //     console.log(imin + imax)
// // // // // // }
// // // // // // else {
// // // // // //     countmin = 0
// // // // // //     countmax = 0
// // // // // //     for (let i = 0; i <= imin; i++) {
// // // // // //         countmin = countmin + 1
// // // // // //     }
// // // // // //     for (let i = imax; i < nums.length; i++) {
// // // // // //         countmax = countmax + 1
// // // // // //     }
// // // // // // }


// // // // // // for (let i = 0; i < k; i++) {
// // // // // //     str.push(s[i])
// // // // // //     if (vowels.includes(s[i])) {
// // // // // //         count++
// // // // // //     }
// // // // // // }

// // // // // s = "aeiou", k = 2
// // // // // s = "tryhard", k = 4
// // // // // s = "abciiidef", k = 3
// // // // // s = "leetcode", k = 3
// // // // // s = s.split('')
// // // // // let vowels = 'aeiou'
// // // // // let str = []
// // // // // let count = 0
// // // // // let max = count
// // // // // for (let i = 0; i < s.length; i++) {
// // // // //     str.push(s[i])
// // // // //     if (str.length > k) {
// // // // //         let a = str.shift()
// // // // //         if (vowels.includes(a)) {
// // // // //             count--
// // // // //         }
// // // // //     }
// // // // //     if (vowels.includes(s[i])) {
// // // // //         count++
// // // // //     }
// // // // //     max = Math.max(count, max)

// // // // // }
// // // // // console.log(max)

// // // // // s = "aab"
// // // // // s = "pwwkew"
// // // // // s = "zxyzxyz"
// // // // // s = s.split("")
// // // // // let str = ''
// // // // // let length = 0
// // // // // for (let i = 0; i < s.length; i++) {
// // // // //     if (str.includes(s[i])) {
// // // // //         break
// // // // //     }
// // // // //     str = str + s[i]
// // // // //     length++
// // // // // }
// // // // // str = str.split('')
// // // // // let max = length
// // // // // let left = length
// // // // // while (left < s.length) {
// // // // //     while (str.includes(s[left])) {
// // // // //         str.shift()
// // // // //         length--
// // // // //     }
// // // // //     str.push(s[left])
// // // // //     length++
// // // // //     left++
// // // // //     max = Math.max(length, max)
// // // // // }
// // // // // console.log(max)



// // // // // nums = [1, 3, 5, 4, 7]
// // // // // nums = [2,2,2,2,2]
// // // // // let left = 1
// // // // // let res = []
// // // // // let length = 0
// // // // // let max = 0
// // // // // for (let r = 0; r < nums.length; r++) {
// // // // //     if (nums[r] <= nums[r - 1]) {
// // // // //         res = []
// // // // //         length = 0

// // // // //     }
// // // // //     res.push(nums[r])
// // // // //     length++
// // // // //     max = Math.max(length, max)
// // // // // }
// // // // // return max

// // // // // nums = [1, 1, 0, 1]
// // // // // nums = [1, 1, 1]
// // // // // nums = [0, 1, 1, 1, 0, 1, 1, 0, 1]
// // // // // let left = 0
// // // // // let right = 0
// // // // // let length = 0
// // // // // let count = 0
// // // // // while (right < nums.length) {
// // // // //     if (nums[right] == 0) {
// // // // //         count++
// // // // //         while (count > 1) {
// // // // //             if (nums[left] == 0) {
// // // // //                 count--
// // // // //             }
// // // // //             length++
// // // // //             left++
// // // // //         }
// // // // //     }
// // // // //     max = Math.max(right - left, max)
// // // // //     right++
// // // // // }
// // // // // console.log(max)


// // // // // nums = [0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1]
// // // // // let left = 0
// // // // // let right = 0
// // // // // let length = 0
// // // // // let count = 0
// // // // // while (right < nums.length) {
// // // // //     if (nums[right] == 0) {
// // // // //         count++
// // // // //         while (count > 1) {
// // // // //             if (nums[left] == 0) {
// // // // //                 count--
// // // // //             }
// // // // //             left++
// // // // //         }
// // // // //         length = Math.max(length,right-left)
// // // // //         right++
// // // // //     }
// // // // // }
// // // // // console.log(length)



// // // // // nums = [3, 1, 4, 1, 5], k = 2
// // // // // let p = nums.filter((value,index) => {
// // // // //     return nums.indexOf(value) == index
// // // // // })
// // // // // p.sort((a, b) => a - b)
// // // // // let left = 0
// // // // // let right = nums.length - 1
// // // // // while (left < right){
// // // // //     let mid = Math.floor((left+ right)/2)
// // // // // }
// // // // // // a
// // // // // original = [1, 2, 3], m = 1, n = 3
// // // // // original = [1,2,3,4], m = 2, n = 2
// // // // // original = [1,2], m = 1, n = 1
// // // // // if (m * n !== original.length) {
// // // // //     console.log('[]')
// // // // // }
// // // // // let res = []
// // // // // let org = []
// // // // // let column =  m*n
// // // // // let i = 0
// // // // // if (m * n == m || m * n == n) {
// // // // //     max = Math.max(m, n)
// // // // //     while (i < max) {
// // // // //         res.push(original[i])
// // // // //         i++
// // // // //     }
// // // // //     org.push(res)
// // // // //     console.log(org)
// // // // // }
// // // // // else {
// // // // //     i = 0
// // // // //     while (i < m) {
// // // // //         res.push(original[i])
// // // // //         i++
// // // // //     }
// // // // //     org.push(res)
// // // // //     res = []
// // // // //     while (i < column) {
// // // // //         res.push(original[i])
// // // // //         i++
// // // // //     }
// // // // //     org.push(res)
// // // // //     console.log(org)
// // // // // }
// // // // // nums = [3, 4, 5, 6], target = 7
// // // // // let map = new Map()
// // // // // let index = 0
// // // // // let index2 = 0
// // // // // for (let i = 0; i < nums.length; i++) {
// // // // //     a = target - nums[i]
// // // // //     if (map.has(a)) {
// // // // //         index = map.get(a)
// // // // //         index2 = i
// // // // //     }
// // // // //     else {
// // // // //         map.set(nums[i], i)
// // // // //     }
// // // // // }
// // // // // console.log([index,index2])

// // // // // stones = [
// // // // //       [0, 0]
// // // // //     , [0, 1]
// // // // //     , [1, 0]
// // // // //     , [1, 2]
// // // // //     , [2, 1]
// // // // //     , [2, 2]
// // // // // ]

// // // // // num = 5
// // // // // a = num.toString(2)
// // // // // a = a.split("")
// // // // // for (let i = 0; i < a.length; i++) {
// // // // //     if(a[i] == '1'){
// // // // //         a[i] = '0'
// // // // //     }
// // // // //     else{
// // // // //         a[i] = '1'
// // // // //     }
// // // // // }
// // // // // a = a.join('')
// // // // // console.log(parseInt(a,2))


// // // // // let nums = [0, 1, 0, 1, 1, 0, 0]
// // // // // let count = 0
// // // // // //Length of sliding window
// // // // // for (let i = 0; i < nums.length; i++) {
// // // // //     if (nums[i] == 1) {
// // // // //         count++
// // // // //     }
// // // // // }
// // // // // let array = [...nums]
// // // // // let new_array = nums.concat(array)
// // // // // // [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0]
// // // // // let max = 0
// // // // // let left = 0
// // // // // let ones = 0
// // // // // for (let right = 0; right < new_array.length; right++) {
// // // // //     if(new_array[right] == 1){
// // // // //         ones++
// // // // //     }
// // // // //     if(right - left + 1 > count){
// // // // //         if(new_array[left] == 1){
// // // // //             ones--
// // // // //         }
// // // // //         left++
// // // // //     }
// // // // //     max = Math.max(max,ones)
// // // // // }
// // // // // console.log(count - max)


// // // // // let s = "(u(love)i)"
// // // // // s = s.split("")
// // // // // let stack = []
// // // // // for (let i = 0; i < s.length; i++) {
// // // // //     let substring = []
// // // // //     if (s[i] == ')') {

// // // // //         while (stack.length > 0 && stack[stack.length - 1] != '(') {
// // // // //             substring.push(stack.pop())
// // // // //         }
// // // // //         stack.pop()
// // // // //         stack.push(...substring)

// // // // //     }
// // // // //     else {
// // // // //         stack.push(s[i])
// // // // //     }
// // // // // }
// // // // // console.log(stack)
// // // // // c = 5
// // // // // let left = 0
// // // // // let right = Math.pow(c,2)
// // // // // while (left < right - 1) {
// // // // //     let a = Math.pow(left,2)
// // // // //     let b = Math.pow(left + 1,2)
// // // // //     sum = a + b
// // // // //     if (sum == c) {
// // // // //         console.log('true')
// // // // //     }
// // // // //     else if (sum < c) {
// // // // //         left++
// // // // //     }
// // // // //     else {
// // // // //         right--
// // // // //     }
// // // // // }


// // // // // nums = [-1, 0, 1, 2, -1, -4]
// // // // // let sum = 0
// // // // // let a = 0
// // // // // let arr = []
// // // // // nums.sort((a,b)=>a-b)
// // // // // for (let a = 0; a < nums.length; a++) {

// // // // //     if (a > 0 && nums[a] == nums[a - 1]) {
// // // // //         continue
// // // // //     }
// // // // //     let b = a+1
// // // // //     let c = nums.length-1
// // // // //     while (b < c) {
// // // // //         sum = nums[a] + nums[b] + nums[c]
// // // // //         if (sum < 0) {
// // // // //             b++
// // // // //         }
// // // // //         else if (sum > 0) {
// // // // //             c--
// // // // //         }
// // // // //         else {
// // // // //             arr.push([nums[a], nums[b], nums[c]])
// // // // //             b++
// // // // //             while(b < c && nums[b] == nums[b - 1]) {
// // // // //                 b++
// // // // //             }
// // // // //         }
// // // // //     }
// // // // // }
// // // // // console.log(arr)



// // // // // citations = [3,0,6,1,5]
// // // // // let count = 0
// // // // // for (let i = 0; i < citations.length; i++) {
// // // // //     if(citations[i] > 2){
// // // // //         count++
// // // // //     }
// // // // // }
// // // // // return count



// // // // // nums = [3, 7, 1, 6]
// // // // // nums = [10,1]
// // // // // for (let i = 0; i < nums.length; i++) {
// // // // //     let max = Math.max(...nums)
// // // // //     let index = nums.indexOf(max)
// // // // //     if (i >= 1 && nums[index] > 0) {
// // // // //         nums[index] = nums[index] - 1
// // // // //         nums[index-1] = nums[index-1] + 1
// // // // //     }
// // // // // }
// // // // // console.log(Math.max(...nums))


// // // // // function gcd(a, b) {
// // // // //     if (b === 0) return a;
// // // // //     return gcd(b, a % b);
// // // // // }
// // // // // let count = 0
// // // // // function findGCDOfArray(arr) {
// // // // //     // Start with the GCD of the first element
// // // // //     let result = arr[0];

// // // // //     // Iterate through the array, calculating the GCD with the current result
// // // // //     for (let i = 1; i < arr.length; i++) {
// // // // //         result = gcd(result, arr[i]);
// // // // //         if(result == 3){
// // // // //             count++
// // // // //         }
// // // // //         // If the GCD ever becomes 1, we can stop early because 1 is the smallest possible GCD
// // // // //     }
// // // // //     return result;
// // // // // }
// // // // // let s = findGCDOfArray([9,3,1,2,6,3])
// // // // // console.log(count,s)


// // // // // temperatures = [73,74,75,71,69,72,76,73]
// // // // // let answer = []
// // // // // let stack = []
// // // // // for (let i = 0; i < temperatures.length; i++) {

// // // // // }
// // // // // nums = [10, 4, 8, 3]
// // // // // let l = []
// // // // // let r = []
// // // // // let prefix = 0
// // // // // for (let i = 0; i < nums.length; i++) {
// // // // //     l[i] = prefix
// // // // //     prefix += nums[i]
// // // // // }
// // // // // let postfix = 0
// // // // // for (let i = nums.length - 1; i >= 0; i--) {
// // // // //     r[i] = postfix
// // // // //     postfix += nums[i]
// // // // // }
// // // // // let arr = []
// // // // // for (let i = 0; i < nums.length; i++) {
// // // // //     let a = Math.abs(l[i] - r[i])
// // // // //     arr.push(a)
// // // // // }
// // // // // console.log(arr)

// // // // // nums = [4, 1, 4, 0, 3, 5]
// // // // // nums = nums.sort((a, b) => a - b)
// // // // // let left = 0
// // // // // let right = nums.length - 1
// // // // // let avg = []
// // // // // let total = 0
// // // // // while(left < right){
// // // // //     a = nums[left] + nums[right]
// // // // //     total = a/2
// // // // //     avg.push(total)
// // // // //     left++
// // // // //     right--
// // // // // }
// // // // // console.log(avg)
// // // // // let p = avg.filter((value,index)=>{
// // // // //     return avg.indexOf(value) == index
// // // // // })
// // // // // console.log(p)


// // // // // let Celsius = 36.50
// // // // // let kelvin = Celsius + 273.15
// // // // // kelvin = kelvin.toFixed(5)
// // // // // kelvin = Number(kelvin)
// // // // // let Fahrenheit = Celsius * 1.80 + 32.00
// // // // // Fahrenheit = Fahrenheit.toFixed(5)
// // // // // Fahrenheit = Number(Fahrenheit)
// // // // // let arr = [kelvin, Fahrenheit]
// // // // // console.log(arr)



// // // // // path = "/home//foo/"
// // // // // path = "/home/"
// // // // // path = "/home/user/Documents/../Pictures"
// // // // // path = "/.../a/../b/c/../d/./"
// // // // // path = "/../"
// // // // // path = path.split('/')
// // // // // console.log(path)
// // // // // let stack = []
// // // // // for (let i = 0; i < path.length; i++) {

// // // // //     if (path[i] == '..') {
// // // // //         if(stack.length > 0) stack.pop()
// // // // //     }

// // // // //     else if (path[i] != '' && path[i] != '.') {
// // // // //         stack.push(path[i])
// // // // //     }
// // // // // }
// // // // // console.log(stack)
// // // // // let st = '/' + stack.join("/")
// // // // // console.log(stack.join(''))
// // // // // console.log(st)




// // // // // path = path.split('')
// // // // // let stack = []
// // // // // let temp = ''
// // // // // let sl = 0
// // // // // for (let i = 0; i < path.length; i++) {

// // // // //     if (path[i] == '/') {
// // // // //         temp = temp + path[i]
// // // // //         stack.push(path[i])
// // // // //         if (temp == '//' && path[i + 1] != '/') {
// // // // //             stack.pop()
// // // // //             temp = ''
// // // // //         }

// // // // //     }

// // // // //     else if (path[i] == '.') {
// // // // //         temp = temp + path[i]
// // // // //         stack.push(path[i])
// // // // //         if (temp == '/..' && path[i + 1] != '.') {
// // // // //             while (sl != 2 && stack.length > 0) {
// // // // //                 let a = stack.pop()
// // // // //                 if (a == '/') {
// // // // //                     sl++
// // // // //                 }
// // // // //             }
// // // // //             temp = ''
// // // // //             sl = 0

// // // // //         }
// // // // //     }
// // // // //     else {
// // // // //         temp = ''
// // // // //         stack.push(path[i])
// // // // //     }
// // // // // }
// // // // // while (stack.length > 1 && (stack[stack.length - 1] == '/' || stack[stack.length - 1] == '.')) {
// // // // //     stack.pop()
// // // // // }
// // // // // // console.log(stack.join(''))



// // // // // s = "ababab"
// // // // // t = Math.floor(s.length / 2)
// // // // // console.log(t)
// // // // // let str = ''
// // // // // for (let i = 0; i < t; i++) {
// // // // //     str = str + s[i]
// // // // // }
// // // // // console.log(str)
// // // // // if (str + str == s) {
// // // // //     console.log('true')
// // // // // }
// // // // // else {
// // // // //     console.log('false')
// // // // // }
// // // // // s = s.split("")
// // // // // let left = ''
// // // // // let check = ''
// // // // // for (let right = 0; right < s.length; right++) {
// // // // //     if (!left.includes(s[right])) {
// // // // //         left = left + s[right]
// // // // //     }
// // // // // }
// // // // // console.log(left)
// // // // // for (let i = 0; i < s.length; i++) {
// // // // //     a = s.slice(0,left.length).join("")
// // // // //     left = left + a
// // // // //     if(left.length == s.length && left == s.join('')){
// // // // //         console.log('true')
// // // // //     }
// // // // // }
// // // // // console.log('false')

// // // // // let nums = [3, 7, 1, 6]
// // // // // nums = [10,1]
// // // // // let total = 0
// // // // // let ans = 0
// // // // // for (let i = 0; i < nums.length; i++) {
// // // // //     total += nums[i]
// // // // //     let cur = Math.floor((total+i)/(i+1))
// // // // //     ans = Math.max(cur,ans)

// // // // // }
// // // // // console.log(ans)

// // // // // nums = [101]
// // // // // nums = [0, -4, 19, 1, 8, -2, -3, 5]
// // // // // nums = [48, -49, -67, 18, -59, -56, 47, -26, -24, -73, -96, 27, -2, -45]
// // // // // nums = [0, -4, 19, 1, 8, -2, -3, 5]
// // // // // nums = [2, 10, 7, 5, 4, 1, 8, 6]
// // // // // nums =
// // // // //     [-14, 61, 29, -18, 59, 13, -67, -16, 55, -57, 7, 74]
// // // // // let mid = Math.floor(nums.length / 2)
// // // // // console.log(mid)
// // // // // let check = nums.slice(0, mid + 1)
// // // // // let last = nums.slice(mid + 1)
// // // // // console.log(last)
// // // // // console.log(check)
// // // // // let max = Math.max(...nums)
// // // // // let min = Math.min(...nums)
// // // // // // from front and back
// // // // // let copy = [...check]
// // // // // let first = 0
// // // // // let copy2 = [...last]
// // // // // let first2 = 0
// // // // // let front_count = 0
// // // // // let back_count = 0
// // // // // if ((!check.includes(min) && check.includes(max)) || ((check.includes(min) && !check.includes(max)))) {
// // // // //     let left = 0
// // // // //     while (check.length > 0 && check[left] != min && check[left] != max) {
// // // // //         copy.shift()
// // // // //         first++
// // // // //     }
// // // // //     first++

// // // // //     let right = last.length - 1
// // // // //     while (last.length > 0 && last[right] != min && last[right] != max) {
// // // // //         copy2.pop()
// // // // //         first2++
// // // // //     }
// // // // //     first2++
// // // // //     console.log(first + first2)
// // // // // }
// // // // // // for front
// // // // // else if (check.includes(max) && check.includes(min)) {
// // // // //     while (check.length < 0) {
// // // // //         if (check[check.length - 1] != min && check[check.lengt - 1] != max) {
// // // // //             check.pop()
// // // // //         }
// // // // //         else {
// // // // //             front_count = check.length
// // // // //             break
// // // // //         }
// // // // //     }
// // // // //     console.log(front_count)
// // // // // }
// // // // // else if (last.includes(min) && last.includes(max)) {
// // // // //     while (last.length > 0) {
// // // // //         if (last[0] != min && last[0] != max) {
// // // // //             last.shift()
// // // // //         }
// // // // //         else {
// // // // //             back_count = last.length
// // // // //             break
// // // // //         }
// // // // //     }
// // // // //     console.log(back_count)
// // // // // }





// // // // // chalk = [5, 1, 5], k = 22
// // // // // let left = 0, res = 0, sum = 0
// // // // // sum = chalk.reduce((acc, num) => acc + BigInt(num), BigInt(0));
// // // // // console.log(sum)
// // // // // k = BigInt(k) % sum
// // // // // while (k >= 0) {
// // // // //     if (left > chalk.length - 1) {
// // // // //         left = 0
// // // // //     }
// // // // //     k = k - BigInt(chalk[left])
// // // // //     if (k < 0) {
// // // // //         res = left
// // // // //     }
// // // // //     left++
// // // // // }
// // // // // console.log(left)


// // // // // nums = [-1, -2, 3, 4], k = 3
// // // // // nums = nums.sort((a, b) => a - b)
// // // // // for (let i = 0; i < k; i++) {

// // // // // }


// // // // // num = 2932
// // // // // num = 4009
// // // // // num = num.toString().split("").sort()
// // // // // let left = 0
// // // // // let right = num.length - 1
// // // // // let b = 0
// // // // // while (left < right) {
// // // // //     a = num[left].toString() + num[right].toString()
// // // // //     b = b + Number(a)
// // // // //     left++
// // // // //     right--
// // // // // }
// // // // // console.log(b)


// // // // // nums = [3, 2, 1, 6, 0, 5]
// // // // // let val = 6
// // // // // let index = nums.indexOf(val)
// // // // // let p = nums.slice(nums.indexOf(val)+1)
// // // // // console.log(p)


// // // // // bank = ["011001", "000000", "010100", "001000"]
// // // // // bank = ["000","111","000"]
// // // // // let arr = [], count = 0
// // // // // for (let i = 0; i < bank.length; i++) {
// // // // //     a = bank[i].split('')
// // // // //     let p = a.filter((value) => {
// // // // //         if (value == '1') {
// // // // //             count++
// // // // //         }
// // // // //     })
// // // // //     if (count != 0) {
// // // // //         arr.push(count)
// // // // //     }
// // // // //     count = 0
// // // // // }
// // // // // console.log(arr)
// // // // // let mul = 0
// // // // // let sum = 0
// // // // // let right = 1
// // // // // let left = 0
// // // // // while (left < arr.length - 1){
// // // // //     mul = arr[left] * arr[right]
// // // // //     sum = sum + mul
// // // // //     left++
// // // // //     right++
// // // // // }
// // // // // console.log(sum)'



// // // // // cost = [6, 5, 7, 9, 2, 2]
// // // // // cost = [5,5]
// // // // // cost.sort((a, b) => a - b)
// // // // // console.log(cost)
// // // // // sum = 0
// // // // // count = 0
// // // // // for (let i = cost.length - 1; i >= 0; i--) {
// // // // //     if (count == 2) {
// // // // //         count = 0
// // // // //         continue
// // // // //     }
// // // // //     else {
// // // // //         sum = sum + cost[i]
// // // // //         count++
// // // // //     }
// // // // // }
// // // // // console.log(sum)


// // // // // s = "abab"
// // // // // s2 = s + s
// // // // // t = s2.split('').slice(1,-1)
// // // // // return s2.includes(s)





// // // // // sl = Math.floor(s.length / 2)
// // // // // let str = ''
// // // // // for (let i = 0; i < sl; i++) {
// // // // //     str = str + s[i]
// // // // // }
// // // // // for (let i = 0; i < sl; i++) {
// // // // //     str = str + s[i]
// // // // // }
// // // // // console.log(str == s)

// // // // // nums = [0, 1, 2, 2, 4, 4, 1]
// // // // // nums = [29, 47, 21, 41, 13, 37, 25, 7]
// // // // // nums = [4287, 799, 8103, 3526, 8396, 7060, 8287, 4214, 4093, 6763, 651, 4907, 8350, 4866, 5114, 5245, 3198, 6644, 3620, 1586, 3068, 2769, 9506, 2319, 588, 5055, 730, 6968, 4814, 144, 5180, 8798, 8783, 3319, 7765, 3254, 7164, 5462, 8085, 5481, 8363, 3135, 2910, 583, 3751, 3044, 8734, 4075, 5489, 7866, 3404, 9532, 3751, 571, 7460, 4934, 9346, 4076, 1505, 9576, 9406, 3342, 8090, 5979, 3140, 4453, 4779, 9324, 2945, 7279, 6809, 9619, 6958, 9881, 8308, 9246, 2529, 3727, 1241, 7230, 4536, 9852, 1667, 1688, 1320, 6400, 6359, 6140, 904, 6287, 6499, 9256, 7666, 4083, 2927, 3165, 9239, 9433, 1620, 6961, 3115, 8766, 2416, 6653, 9030, 2690, 9165, 6150, 1644, 5925]
// // // // // let arr = []
// // // // // let arr2 = []
// // // // // for (let i = 0; i < nums.length; i++) {
// // // // //     if (nums[i] % 2 == 0) {
// // // // //         arr.push(nums[i])
// // // // //     }

// // // // // }
// // // // // let map = new Map()
// // // // // arr.forEach(element => {
// // // // //     if (map.has(element)) {
// // // // //         map.set(element, map.get(element) + 1)
// // // // //     }
// // // // //     else {
// // // // //         map.set(element, 1)
// // // // //     }
// // // // // });
// // // // // console.log(map)
// // // // // array = Array.from(map.values())
// // // // // let max = Math.max(...array)
// // // // // for (let [value, key] of map) {
// // // // //     if (key == max) {
// // // // //         arr2.push(value)
// // // // //     }
// // // // // }
// // // // // if (arr2.length > 0) {
// // // // //     console.log(Math.min(...arr2))
// // // // // }
// // // // // else {
// // // // //     console.log('-1')
// // // // // }
// // // // // num = "4206"
// // // // // num = "35427"
// // // // // num = "52"
// // // // // str1 = ''
// // // // // let left = 0
// // // // // let right = num.length - 1
// // // // // while (left < num.length - 1) {
// // // // //     if (Number(num[left]) % 2 != 0) {
// // // // //         str1 = num[left]
// // // // //         break
// // // // //     }
// // // // //     left++
// // // // // }
// // // // // console.log(str1)
// // // // // let str2 = ''
// // // // // while (right > 0) {
// // // // //     if (Number(num[right]) % 2 != 0) {
// // // // //         str2 = num[right]
// // // // //         break
// // // // //     }
// // // // //     right--
// // // // // }
// // // // // console.log(str2)
// // // // // let index1 = num.indexOf(str1)
// // // // // let index2 = num.indexOf(str2)
// // // // // let str3 = ''
// // // // // for (let i = 0; i < num.length; i++) {

// // // // // }



// // // // // nums = [1, 1, 1, 6, 1, 1, 1]
// // // // // nums = [1,8,3,8,3]
// // // // // let left = 0
// // // // // let right = nums.length - 1
// // // // // let max = -Infinity
// // // // // while (left < right) {
// // // // //     if (nums[left] != nums[right]) {
// // // // //         let a = Math.abs(left - right)
// // // // //         if (a > max) {
// // // // //             max = a
// // // // //         }
// // // // //     }
// // // // //     right--
// // // // // }
// // // // // console.log(max)


// // // // // matrix = [[1, 2, 3], [3, 1, 2], [2, 3, 1]]
// // // // // matrix = [[1,1,1],[1,2,3],[1,2,3]]
// // // // // let a = matrix.flat()
// // // // // let set = new Set(a)
// // // // // let row_count = 0
// // // // // let point = 0
// // // // // for (let i = 0; i < matrix.length; i++) {
// // // // //     let check_set = new Set(matrix[i])
// // // // //     if (check_set.size == set.size) {
// // // // //         row_count++
// // // // //     }
// // // // // }
// // // // // if (row_count == matrix.length) {
// // // // //     point++
// // // // // }
// // // // // let column_count = 0
// // // // // let check_set2 = new Set()
// // // // // for (let i = 0; i < matrix.length; i++) {
// // // // //     for (let j = 0; j < matrix[0].length; j++) {
// // // // //         check_set2.add(matrix[j][i])
// // // // //     }
// // // // //     if(check_set2.size == set.size){
// // // // //         column_count++
// // // // //     }
// // // // //     check_set2.clear()
// // // // // }
// // // // // if(column_count == set.size){
// // // // //     point++
// // // // // }
// // // // // console.log(point == 2)



// // // // // let temperatures = [73, 74, 75, 71, 69, 72, 76, 73]
// // // // // let stack = []
// // // // // let output = new Array(temperatures.length).fill(0)
// // // // // stack.push([temperatures[0],0])
// // // // // for (let i = 1; i < temperatures.length; i++) {
// // // // //     while (stack.length > 0 && stack[stack.length - 1][0] < temperatures[i]) {
// // // // //         index = stack.pop()
// // // // //         let a = index[1]
// // // // //         output[a] = i - a
// // // // //         console.log(index[1])
// // // // //     }
// // // // //     stack.push([temperatures[i],i])

// // // // // }

// // // // // console.log(output)


// // // // strs = ["act", "pots", "tops", "cat", "stop", "hat"]
// // // // let copy = [...strs]
// // // // for (let i = 0; i < strs.length; i++) {
// // // //     copy[i] = copy[i].split('').sort().join("")
// // // // }
// // // // console.log(copy)
// // // // let map = new Map()
// // // // let repeatedIndexes = new Map()
// // // // let arr = []
// // // // copy.forEach((value, index) => {
// // // //     if (!map.has(value)) {
// // // //         // If the value is not in the map, initialize it with an empty array
// // // //         map.set(value, []);
// // // //     }
// // // //     // Add the current index to the list of indexes for this value
// // // //     map.get(value).push(strs.at(index));
// // // // });
// // // // array = Array.from(map.values())
// // // // console.log(array)
// // // // // for (let i = 0; i < array.length; i++) {
// // // // //     array[i]
// // // // // }


// // // // strs = ["act", "pots", "tops", "cat", "stop", "hat"]
// // // // let map = new Map()
// // // // let arr = []
// // // // let copy = [...strs]
// // // // for (let i = 0; i < copy.length; i++) {
// // // //     copy[i] = copy[i].split("").sort().join("")
// // // // }
// // // // copy.forEach((value, index) => {
// // // //     if (!map.has(value)) {
// // // //         map.set(value, [])
// // // //     }
// // // //     a = map.get(value).push(strs.at(index))
// // // // })
// // // // array = Array.from(map.values())
// // // // console.log(array)

// // // let n = 00000000000000000000000000010111
// // // let count = 0
// // // n  = n.toString(2)
// // // for (let i = 0; i < n.length; i++){
// // //     if(n[i] == '1'){
// // //         count++
// // //     }
// // // }
// // // console.log(count)

// // // s = "AABABBA", k = 1
// // // let left = 0
// // // let str = ''
// // // for (let right = 0; right < s.length; right++) {
// // //     str = str + s[right]

// // // }

// // // s = "AABABBA", k = 1
// // // let max = 0
// // // let count = 0
// // // for (let right = 65; right <= 90; right++) {
// // //     let j = 0
// // //     let replace = 0
// // //     let i = 0
// // //     let length = 0
// // //     while (j < s.length){
// // //         if(String.fromCharCode(right) == s[j]){
// // //             j++
// // //             length++
// // //         }
// // //         else if(String.fromCharCode(right) != s[j] && replace < k){
// // //             replace++
// // //             length++
// // //             j++
// // //         }
// // //         else if(s[i] == String.fromCharCode(right)){
// // //             i++
// // //         }
// // //         else{
// // //             i++
// // //             replace--
// // //         }
// // //         max = Math.max(max,j-i)
// // //     }

// // // }
// // // console.log(max)



// // // s = s.split("")
// // // let length = 0
// // // let max = 0
// // // let map = new Map()
// // // for (let i = 0; i < s.length; i++) {

// // //     if (!map.has(s[i])) {
// // //         map.set(s[i], length + 1)
// // //     }
// // //     else{
// // //         map.delete(0)
// // //     }
// // //     max = Math.max(max,length)
// // // }
// // // console.log(max)




// // // console.log(s.split("").slice(1))
// // // s = "abcabcbb"
// // // s = s.split("")
// // // let left = 0
// // // let str = ''
// // // str = str + s[0]
// // // let max = 0
// // // let length = 0
// // // for (let i = 1; i < s.length; i++) {
// // //     str = str + s[i]
// // //     length++
// // //     while(str.includes(s[i])){
// // //         str = str.slice(0)
// // //     }
// // //     str.join("")
// // //     max = Math.max(max, length)
// // // }
// // // console.log(max)



// // // let target = 7, nums = [2, 3, 1, 2, 4, 3]
// // // target = 7, nums = [2, 3, 1, 2, 4, 3]
// // // target = 11, nums = [1, 1, 1, 1, 1, 1, 1, 1]
// // // target = 4, nums = [1, 4, 4]
// // // let left = 0
// // // let sum = nums[0]
// // // let length = 1
// // // let min = Infinity
// // // for (let right = 1; right <= nums.length; right++) {
// // //     if (sum > target) {
// // //         while (sum >= target) {
// // //             min = Math.min(min, length)
// // //             sum = sum - nums[left]
// // //             left++
// // //             length--
// // //         }
// // //     }
// // //     sum = sum + nums[right]
// // //     length++

// // // }
// // // if (min == Infinity) {
// // //     console.log(0)
// // // }
// // // else {
// // //     console.log(min)
// // // }


// // // s1 = "ab", s2 = "eidbaooo"
// // // let str = ''
// // // for (let i = 0; i < s2.length; i++) {
// // //     if(s2[i].includes(s1)){
// // //         str = str + s2[i]
// // //     }
// // // }


// // // nums = [10,5,2,6], k = 100
// // // let count = 0
// // // let left = 0
// // // let pro = 1
// // // for (let right = 0; right < nums.length; right++) {
// // //     pro = pro * nums[right]
// // //     if(pro < k){
// // //         count++
// // //     }
// // //     else if(pro > k){
// // //         while(pro > k){
// // //             pro = pro / nums[left]
// // //             left++
// // //         }
// // //     }
// // // }
// // // console.log(count)


// // // s1 = "abc", s2 = "lecabee"
// // // s1 = s1.split('').sort().join('')
// // // length = s1.length
// // // let left = 0
// // // let str = ''
// // // for (let right = 0; right < s2.length; right++) {
// // //     str = str + s2[right]
// // //     if(str.length == s1.length){
// // //         t = str.split('').sort().join("")
// // //         if(s1 == t) console.log('true')
// // //     }
// // //     else if (str.length > s1.length){
// // //         while(str.length > s1.length){
// // //             str = str.slice(1)
// // //         }
// // //     }
// // // }
// // // console.log('false')


// // // s = "abciiidef", k = 3
// // // let left = 0
// // // let count = 0
// // // let str = ''
// // // let vowels = 'aeiou'
// // // for (let i = 0; i < k; i++) {
// // //     str = str + s[i]
// // //     if(vowels.includes(s[i])){
// // //         count++
// // //     }
// // // }
// // // for (let right = k; right < s.length; right++) {
// // //     if(str.length > k){
// // //         while(str.length > k){
// // //             str = str.slice(1)
// // //             if(vowels.includes(str.slice(1))){
// // //                 count--
// // //             }
// // //         }
// // //     }
// // //     str = str + s[right]
// // //     if(vowels.includes(str[right])){
// // //         count++
// // //     }
// // // }
// // // console.log(count)


// // // nums = [3, 4, 5, 6, 1, 2], target = 1
// // // nums = [3, 4, 5, 6, 1, 2]
// // // let n = 3; k = 5
// // // avg_size = Math.floor(n / k)
// // // extra = n%k
// // // console.log(avg_size)
// // // console.log(extra)








// // // s = "([{}])"
// // // let stack = []
// // // for (let i = 0; i < s.length; i++) {
// // //     if (s[i] == '(') { stack.push('(') }
// // //     else if (s[i] == '[') { stack.push('[') }
// // //     else if (s[i] == '{') { stack.push('{') }
// // //     else {
// // //         if (stack[stack.length-1] == '{' && s[i] != '}') {
// // //             stack.pop()
// // //             console.log('false')
// // //         }
// // //         else if (stack[stack.length-1] == '[' && s[i] != ']') {
// // //             stack.pop()
// // //             console.log('false')

// // //         }
// // //         else if (stack[stack.length-1] == '(' && s[i] != ')') {
// // //             stack.pop()
// // //             console.log('false')
// // //         }
// // //     }
// // // }



// // // s = "xyzzaz"
// // // let str = ''
// // // let k = 3
// // // let org = 0

// // // for (let right = 0; right < s.length; right++) {
// // //     str = str + s[right]
// // //     if (str.length > k) {
// // //         while (str.length > k) {
// // //             str = str.slice(1)
// // //         }
// // //     }
// // //     if (str.length == k) {

// // //         if (str[0] != str[1] && str[1] != str[2] && str[0] != str[2]) {
// // //             org++
// // //         }
// // //     }
// // // }
// // // console.log(org)

// // // let start = 10
// // // let goal = 7
// // // start = BigInt(start).toString(2)
// // // goal = BigInt(goal).toString(2)
// // // if (goal.length < start.length) {
// // //     while (goal.length != start.length) {

// // //         goal = goal.split('')
// // //         goal.unshift('0')
// // //         goal = goal.join("")
// // //     }
// // //     console.log(goal)
// // // }
// // // else if (start.length < goal.length) {
// // //     while (start.length != goal.length) {

// // // //         start = start.split('')
// // // //         start.unshift('0')
// // // //         start = start.join("")
// // // //     }
// // // //     console.log(start)
// // // // }
// // // // let count = 0
// // // // for (let i = 0; i < start.length; i++) {
// // // //     if (start[i] != goal[i]) {
// // // //         count++
// // // //     }
// // // // }
// // // // console.log(count)

// // // nums = [3, 4, 5, 6, 1, 2], target = 1
// // // let left = 0
// // // let right = nums.length - 1
// // // while (left <= right) {
// // //     let mid = Math.floor((left + right) / 2)
// // //     if (nums[i] <= nums[mid]) {

// // //         if (nums[mid] == target) {
// // //             console.log(mid)
// // //         }
// // //         else if (nums[i] <= target && target <= nums[mid]) {
// // //             right = mid - 1
// // //         }
// // //         else {
// // //             left = mid + 1
// // //         }
// // //     }
// // //     else {
// // //         if (nums[mid] == target) {
// // //             console.log(mid)
// // //         }
// // //         else if (nums[mid] < target && target <= nums[j]) {
// // //             left = mid + 1
// // //         }
// // //         else {
// // //             right = mid - 1
// // //         }
// // //     }
// // // }

// // // // nums1 = [1,3], nums2 = [2,4]
// // // // array = nums1.concat(nums2)
// // // // console.log(array)


// // // // Output: [
// // // [3, 1]
// // // // [4, 2]
// // // // // ]



// // // matrix = [
// // //     [1, 2, 3],
// // //     [4, 5, 6],
// // //     [7, 8, 9]
// // // ]


// // // for (let i = 0; i < matrix.length; i++) {
// // //     for (let j = i + 1; j < matrix.length; j++) {
// // //         let temp = matrix[i][j]
// // //         matrix[i][j] = matrix[j][i]
// // //         matrix[j][i] = temp
// // //     }
// // // }
// // // for (let i = 0; i < matrix.length; i++) {
// // //     matrix[i] = matrix[i].reverse()
// // // }
// // // console.log(matrix)

// // // let set = new Set([1,2,3,4])
// // // console.log(set)
// // // array = Array.from(set)
// // // console.log(array)



// // // n = 00000010100101000001111010011100
// // // n = n.toString(2).padStart(32,'0')
// // // console.log(n)
// // // // n = n.split('').reverse().join('')
// // // // let b  = parseInt(n,2)
// // // // console.log(b)

// // // x = -123
// // // let count = 0
// // // if (x < 0){
// // //     count = -1
// // //     x = x * count
// // // }
// // // x = x.toString().split("").reverse('').join("")
// // // if(count != 0){
// // //     console.log(x * count)
// // // }
// // // console.log(x)
// // // if(x[0] == 0){
// // //     x = x.split('')
// // //     while(x[0] == 0){
// // //         x.shift()
// // //     }
// // // }
// // // console.log(x.join(''))


// // // matrix = [
// // //     [1, 1, 1],
// // //     [1, 0, 1],
// // //     [1, 1, 1]
// // // ]
// // // matrix = [
// // //     [0, 1, 2, 0],
// // //     [3, 4, 5, 2],
// // //     [1, 3, 1, 5]
// // // ]

// // // // check Column
// // // let arr = []
// // // let arr2 = []
// // // for (let i = 0; i < matrix[0].length; i++) {
// // //     for (let j = 0; j < matrix.length; j++) {
// // //         arr.push(matrix[j][i])
// // //     }
// // //     if (arr.includes(0)) {
// // //         arr2.push(i)
// // //     }
// // //     arr = []
// // // }
// // // console.log(arr2)
// // // for (let i = 0; i < matrix.length; i++) {
// // //     if (matrix[i].includes(0)) {
// // //         for (let j = 0; j < matrix[i].length; j++) {
// // //             matrix[i][j] = matrix[i][j] * 0
// // //         }
// // //     }
// // // }
// // // console.log(matrix)

// // // for (let i = 0; i < matrix[0].length; i++) {
// // //     let a = arr[0]
// // //     if (i === a) {
// // //         arr.shift()
// // //         for (let j = 0; j < matrix.length; j++) {
// // //             matrix[j][i] = matrix[j][i] * 0
// // //         }
// // //     }
// // // }
// // // console.log(matrix)


// // // nums = [4,5,0,1,2,3]
// // // nums = [3, 4, 5, 6, 1, 2]

// // // let left = 0
// // // let right = nums.length - 1
// // // let max = Math.max(...nums)
// // // let arr = []
// // // for (let i = 0; i < nums.length; i++) {
// // //     arr.push(nums[2] / nums[i])
// // // }
// // // console.log(arr)
// // // // while (left <= right) {
// // // //     let mid = Math.floor((left + right) / 2)
// // // //     a = nums[mid] / nums[0]
// // // //     if(a > max){
// // // //         max = a
// // // //     }
// // // // }


// // // nums = [3, 4, 5, 1, 2]

// // // let left = 0
// // // let right = nums.length - 1
// // // while (left <= right) {
// // //     let mid = Math.floor((left + right) / 2)
// // //     if (nums[mid] > nums[right]) {
// // //         left = mid + 1
// // //     }
// // //     else if (nums[mid] < nums[right]) {
// // //         right = mid
// // //     }
// // //     else{
// // //         console.log(nums[left])
// // //     }

// // // }


// // // matrix = [
// // //     [1, 2, 4, 8],
// // //     [10, 11, 12, 13],
// // //     [14, 20, 30, 40]
// // // ]
// // // target = 10
// // // let arr = matrix.flat()
// // // console.log(arr)

// // // let left = 0
// // // let right = arr.length - 1
// // // while (left <= right) {
// // //     let mid = Math.floor((left + right) / 2)
// // //     console.log(mid)
// // //     if (arr[mid] == target) {
// // //         console.log(true)
// // //     }
// // //     else if (arr[mid] < target) {
// // //         right = mid - 1
// // //     }
// // //     else {
// // //         left = mid + 1
// // //     }
// // // }


// // // intervals = [[1,4],[4,5]]

// // // intervals = [
// // //     [1, 3],
// // //     [2, 6],
// // //     [8, 10],
// // //     [15, 18]
// // // ]
// // // intervals = intervals.sort((a, b) => a[0] - b[0]);
// // // console.log(intervals)

// // // arr = [1, 3, 4, 8], queries = [[0, 1], [1, 2], [0, 3], [3, 3]]
// // // // let arr2 = []
// // // // let temp = [0]
// // // // for (let i = 1; i <= arr.length; i++) {
// // // //     temp[i] = temp[i-1] ^ arr[i-1]
// // // // }
// // // // console.log(temp)
// // // // for (const [start,end] of queries) {
// // // //     arr2.push(temp[start] ^ temp[end+1])
// // // // }
// // // // console.log(arr2)

// // // console.log(1^6)





// // // nums = [-2, 1, -3, 4, -1, 2, 1, -5, 4]
// // // nums = [5,4,-1,7,8]

// // // let max = 0
// // // let sum = 0
// // // for (let i = 0; i < nums.length; i++) {
// // //     sum = sum + nums[i]
// // //     if(sum < 0){
// // //         sum = 0
// // //     }
// // //     else {
// // //         if(sum > max){
// // //             max = sum
// // //         }
// // //     }
// // // }
// // // console.log(max)



// // // matrix = [
// // //     [1, 4, 7, 11, 15],
// // //     [2, 5, 8, 12, 19],
// // //     [3, 6, 9, 16, 22],
// // //     [10, 13, 14, 17, 24],
// // //     [18, 21, 23, 26, 30]
// // // ],
// // //     target = 5
// // // let col = matrix[0].length - 1
// // // let row = 0
// // // while (col >= 0 && row <= matrix.length - 1) {
// // //     let el = matrix[col][row]
// // //     if (el == target) {
// // //         return true
// // //     }
// // //     else if (el > target) {
// // //         col--
// // //     }
// // //     else {
// // //         row++
// // //     }
// // // }

// // // n = 19
// // // while (n != 1) {
// // //     let sum = 0
// // //     n = n.toString().split("")
// // //     for (let i = 0; i < n.length; i++) {
// // //         sum = Math.pow(Number(n[i]), 2) + sum
// // //     }
// // //     n = sum
// // // }
// // // let digits = [1, 2, 3, 4]
// // // let a = digits.join("")
// // // a = Number(a) + 1
// // // a = a.toString().split('')
// // // for (let i = 0; i < a.length; i++) {
// // //     a[i] = Number(a[i])
// // // }
// // // console.log(a)


// // // n = 4
// // // let arr = []
// // // for (let i = 0; i <= n; i++) {
// // //     a = BigInt(i).toString(2)
// // //     a = a.replaceAll('0','').length
// // //     arr.push(a)
// // // }
// // // console.log(arr)

// // // nums = [1,2,3]
// // // let min = Math.min(...nums)
// // // let max = Math.max(...nums)
// // // for (let i = 0; i < nums.length; i++) {
// // //     if (!nums.includes(nums[i] + 1)) {
// // //         console.log(nums[i] + 1)
// // //     }
// // //     else if (!(nums.includes(nums[i] - 1)) && nums[i] > 0) {
// // //         console.log(nums[i] - 1)
// // //     }
// // // }




// // // intervals = [[1, 3], [2, 6], [8, 10], [15, 18]]
// // // let arr = []
// // // for (let i = 0; i < intervals.length; i++) {
// // //     if (arr.length == 0) {
// // //         arr.push(intervals[i])
// // //     }
// // //     else if (intervals[i][0] < arr[arr.length - 1][1]) {
// // //         let a = Math.min(intervals[i][0], arr[arr.length - 1][0])
// // //         let b = Math.max(intervals[i][1], arr[arr.length - 1][1])
// // //         arr.pop()
// // //         arr.push([a,b])
// // //     }
// // //     else{
// // //         arr.push(intervals[i])
// // //     }
// // // }
// // // console.log(arr)


// // // piles = [3, 6, 7, 11], h = 8
// // // let max = Math.max(...piles)
// // // let left = 0
// // // let right = max
// // // let ultra = Infinity
// // // while (left <= right) {
// // //     let mid = Math.floor((left + right) / 2)
// // //     let count = 0
// // //     for (let i = 0; i < piles.length; i++) {
// // //         count += Math.ceil(piles[i] / mid)
// // //     }
// // //     if (count <= h) {
// // //         ultra = mid
// // //         right = mid - 1
// // //     }
// // //     else if(count > h){
// // //         left = mid + 1
// // //     }
// // // }
// // // console.log(ultra)
// // // nums = [[3, 6], [1, 5], [4, 7]]
// // // let set = new Set()
// // // for (let i = 0; i < nums.length; i++) {
// // //     let a = nums[i][0]
// // //     let b = nums[i][1]
// // //     for (let j = a; j <= b; j++) {
// // //         if (!set.has(j)) {
// // //             set.add(j)
// // //         }
// // //     }
// // // }
// // // console.log(set.size)


// // num = 430043, k = 2
// // let str = ''
// // num = num.toString()
// // let count = 0
// // let left = 0
// // let right = nums.length - 1
// // while (left <= right) {
// //     str = str + num[left]
// //     if (str.length == k) {
// //         let a = Number(num) / Number(str)
// //         if (Number.isInteger(a)) {
// //             count++
// //         }
// //         else {
// //             str = str.slice(1)
// //         }
// //     }
// // }

// // console.log(count)


// // timePoints = ["23:59", "00:00"]
// // timePoints = ["12:12","12:13"]
// // for (let i = 0; i < timePoints.length; i++) {
// //     let [first, end] = timePoints[i].split(':')
// //     console.log(first, end)
// //     first = parseInt(first)
// //     end = parseInt(end)
// //     first = first * 60
// //     first = first + end
// //     timePoints[i] = first
// // }
// // timePoints = timePoints.sort((a, b) => a - b)
// // console.log(timePoints)
// // let min = Infinity
// // for (let i = 0; i < timePoints.length - 1; i++) {
// //     min = Math.min(min, timePoints[i + 1] - timePoints[i])
// // }
// // console.log(min)
// // min = Math.min(min, 24*60-timePoints[timePoints.length - 1] + timePoints[0])
// // console.log(min)


// // intervals = [[1, 2], [3, 5], [9, 10]], newInterval = [6, 7]
// // intervals = [[1, 3], [4, 6]], newInterval = [2, 5]
// // let l = []
// // let r = []
// // for (let i = 0; i < intervals.length; i++) {
// //     if (intervals[i][1] < newInterval[0]) {
// //         l.push(intervals[i])
// //     }
// //     else if (intervals[i][0] > newInterval[1]) {
// //         r.push(intervals[i])
// //     }
// //     else {
// //         newInterval = [Math.min(intervals[i][0], newInterval[0]), Math.max(intervals[i][1], newInterval[1])]
// //     }
// // }
// // console.log([...l,newInterval,...r])



// // words = ["hey", "aeo", "mu", "ooo", "artro"], left = 1, right = 4
// // let vowels = 'aeiou'
// // let count = 0
// // for (let i = left; i < right; i++) {
// //     if (vowels.includes(words[i][0]) && vowels.includes(words[i][words[i].length - 1])){
// //         count++
// //     }
// // }
// // console.log(count)


// // grid = [[-15, 1, 3], [15, 7, 12], [5, 6, -2]]
// // let arr = []
// // let max = 0
// // for (let i = 0; i < grid[0].length; i++) {
// //     for (let j = 0; j < grid.length; j++) {
// //         max = Math.max(grid[j][i].toString().split('').length , grid[j][i].toString().split('').length)
// //     }
// //     arr.push(max)
// // }
// // console.log(arr)



// // intervals = [[1, 2], [2, 3], [3, 4], [1, 3]]
// // intervals = [[1, 2], [1, 2], [1, 2]]
// // intervals = [[1, 2], [2, 3]]
// // intervals = [[1, 100], [11, 22], [1, 11], [2, 12]]
// // intervals.sort((a, b) => a[1] - b[1]);
// // console.log(intervals);
// // let count = 0
// // let max = intervals[0][1]
// // for (let i = 1; i < intervals.length; i++) {
// //     if (intervals[i][0] < max) {
// //         count++
// //     }

// //     else {
// //         max = Math.max(max, intervals[i][1])
// //     }
// // }
// // console.log(count)


// // s1 = "this apple is sweet", s2 = "this apple is sour"
// // let map = new Map()
// // s1 = s1.split(" ")
// // s2 = s2.split(" ")
// // s1.forEach(element => {
// //     if (map.has(element)) {
// //         map.set(element, map.get(element) + 1)
// //     }
// //     else {
// //         map.set(element, 1)
// //     }
// // });
// // s2.forEach(element => {
// //     if (map.has(element)) {
// //         map.set(element, map.get(element) + 1)
// //     }
// //     else {
// //         map.set(element, 1)
// //     }
// // });
// // let arr = []
// // for(let [key,value] of map){
// //     if(value == 1){
// //         arr.push(key)
// //     }
// // }
// // console.log(arr)

// // intervals = [(0, 30), (5, 10), (15, 20)]
// // let max = intervals[0][1]
// // for (let i = 1; i < intervals.length; i++) {
// //     if(intervals[i][1] < max){

// //     }
// // }

// // nums = [1, 2, 3, 1]
// // nums = [1]
// // console.log(nums.slice(2 + 1, nums.length))
// // let sum = 0
// // for (let i = 0; i < nums.length; i += 3) {
// //     let max = Math.max(...nums.slice(i , nums.length))
// //     sum = sum + max
// // }
// // console.log(sum)


// // let nums = [2, 3, 1, 1, 4]
// // nums = [3, 2, 1, 0, 4]
// // let maxjump = 0
// // let min = Math.min(...nums)
// // if (min > 0) console.log('true')
// // else {
// //     for (let i = 0; i < nums.length; i++) {
// //         maxjump = Math.max(maxjump, nums[i])
// //         maxjump = nums[i]
// //         if (maxjump >= nums.length - 1) console.log('true')
// //     }
// //     console.log('false')
// // }


// // intervals = [(0, 40), (5, 10), (15, 20)]
// // intervals = intervals.sort((a, b) => a[0] - b[0])
// // console.log(intervals)


// // s = "aacecaaa"
// // s = "google";
// // if (s == '')
// //     console.log('')
// // for (let i = s.length; i > 0; i--) {
// //     let str = s.slice(0, i)
// //     let rev = str.split('').reverse().join('')
// //     let right = s.slice(i)
// //     if(str == rev){
// //         console.log(right.split('').reverse().join('') + s)
// //     }
// // }



// // numCourses = 2, prerequisites = [[1, 0]]
// // let map = new Map()
// // for (let i = 0; i < prerequisites.length; i++) {
// //     map.set(i, [])
// // }
// // console.log(map)
// // for (const [crs, pre] of prerequisites) {
// //     map.get(crs).push(pre); // Use get to access the array for the course
// // }
// // console.log(map)
// // nums = [2, 4, 1, 1, 1, 1]
// // nums = [2, 1, 2, 1, 0];
// // let count = 0;
// // let l = 0
// // let r = 0
// // while (l < nums.length - 1) {
// //     r = nums[l]
// //     let max = 0
// //     for (let i = l; i < r; i++) {

// //         max = Math.max(max, i + nums[i])

// //     }
// //     r = max
// //     l = max + 1
// //     count++
// // }



// // nums = [1, 1, 1], k = 2
// // let map = new Map()
// // let total = 0

// // for (let i = 0; i < nums.length; i++) {
// //     total = total + nums[i]
// //     if (map.has(total - k)){

// //     }
// // }


// // arr = [3, 1, 2, 4]
// // let num = []
// // let subset = []
// // var again = function (i) {
// //     if (i >= arr.length - 1) {
// //         num.push([...subset])
// //         return num
// //     }
// //     subset.push(arr[i])
// //     again(i+1)
// //     subset.pop()
// //     again(i+1)
// // }
// // again(0)
// // return num


// // matrix = [
// //     [1, 10, 4, 2],
// //     [9, 3, 8, 7],
// //     [15, 16, 17, 12]
// // ]
// // let arr = []
// // for (let i = 0; i < matrix.length; i++) {
// //     let a = Math.min(...matrix[i])
// //     arr.push(a)
// // }
// // console.log(arr)
// // for (let i = 0; i < matrix.length; i++) {
// //     let a = arr.shift()
// //     let index = matrix[i].indexOf(a)
// //     let count = 0
// //     for (let j = 0; j < matrix.length; j++) {
// //         if (a > matrix[j][index]) {
// //             count++
// //         }
// //     }
// //     if (count == matrix.length) {
// //         return a
// //     }
// // }


// // nums = [1, 0, 1, 0, 1], goal = 2
// // nums = [1, 1, 0, 1, 1], goal = 2
// // let left = 0
// // let sum = 0
// // let count = 0
// // for (let right = 0; right < nums.length; right++) {
// //     sum = sum + nums[right]
// //     if (sum == goal) {
// //         count++
// //     }
// //     while (sum > goal) {
// //         sum = sum - nums[left]
// //         left++
// //     }
// // }
// // console.log(count)


// // numCourses = 2, prerequisites = [[1, 0], [0, 1]]
// // let map = {}
// // for (let i = 0; i < numCourses.length; i++) {
// //     map[i] = []
// // }
// // for (const [pre, crs] of prerequisites) {
// //     map[crs].push(pre)
// // }

// // //Visite SEt
// // let visit = new Set()
// // var again = function (crs) {
// //     if (visit.has(crs)) return false

// //     // checking map 
// //     if (map[crs].length == 0) return true
// //     visit.add(crs)
// //     //Now check every prerequisites using loop
// //     for (const pre of map[crs]) {
// //         if (!again(pre)) return false
// //     }
// //     visit.delete(crs)
// //     map[crs] = []
// //     return true
// // }
// // // now the condition is if every courses has no prerequisites then ?
// // for (let crs = 0; crs < 2; crs++) {
// //     if(!again(crs)) return false
// // } return true


// // nums = [0, 0, 1, 1, 1, 2, 2, 3, 3, 4]
// // let l = 0
// // let r = 1
// // while (l < nums.length - 1){
// //     while(nums[l] == nums[r]){
// //         nums[r] = nums[r+1]
// //     }
// //     l++
// //     r = l+1
// // }
// // console.log(nums)

// // nums = [2, 2, 1, 1, 1, 2, 2]
// // let map = new Map()
// // nums.forEach((value) => {
// //     if (map.has(value)) {
// //         map.set(value, map.get(value) + 1)
// //     }
// //     else {
// //         map.set(value, 1)
// //     }
// // })
// // let max = -Infinity
// // let index = 0
// // for (let [key, value] of map) {
// //     if (value > max) {
// //         max = value
// //         index = key
// //     }
// // }
// // console.log(index)

// // nums = [1, 2, 3, 4, 5, 6, 7], k = 

// // nums = [7, 1, 5, 3, 6, 4]
// // let l = 0
// // let r = nums.length - 1
// // let max = -Infinity
// // while (l < r) {
// //     if(nums[l] < nums[r]){
// //         let a = nums[r] - nums[l]
// //         if(a > max){
// //             max = a
// //         }
// //         r--
// //     }
// //     else if(nums[l] > nums[r]){
// //         l++
// //     }
// // }   
// // console.log(max)


// // prices = [7, 1, 5, 3, 6, 4]
// // let l = 0
// // let r = 1
// // let max = 0
// // while (r < prices.length - 1) {
// //     if (prices[l] < prices[r]) {
// //         let b = prices[r] - prices[l]
// //         max = max + b
// //         l++
// //         r++
// //     }
// //     else {
// //         l++
// //         r++
// //     }
// // }
// // console.log(max)



// // arr = [14, 15, 16, 20, 28], Time = 100
// // let l = 0
// // let r = arr.length - 1
// // let p = []
// // sum = 0
// // while (l < r) {
// //     p.push(arr[l])
// //     p.push(arr[r])
// //     let min = Math.min(...p)
// //     sum = sum + min
// //     r--
// // }
// // console.log(sum)

// // s = "leetscode", dictionary = ["leet", "code", "leetcode"]
// // s = "sayhelloworld", dictionary = ["hello", "world"]
// // let dp = new Array(s.length + 1).fill(Infinity)
// // let set = new Set(dictionary)
// // dp[s.length] = 0
// // for (let i = s.length - 1; i >= 0; i--) {
// //     dp[i] = dp[i + 1] + 1
// //     for (let j = i; j < s.length; j++) {
// //         let sub = s.substring(i, j + 1)
// //         console.log(sub)
// //         if (set.has(sub)) {
// //             console.log(dp[i],dp[j+1])
// //             dp[i] = Math.min(dp[i], dp[j + 1])
// //         }
// //     }
// // }
// // console.log(dp)

// // let map = new Map()
// // s = s.split("")
// // s.forEach(element => {
// //     if (map.has(element)) {
// //         map.set(element, map.get(element) + 1)
// //     }
// //     else {
// //         map.set(element, 1)
// //     }
// // });
// // for (let i = 0; i < dictionary.length; i++) {
// //     let s = dictionary[i].split('')
// //     for (let j = 0; j < s.length; j++) {
// //         if (map.has(s[j])) {
// //             map.set(s[j], map.get(s[j]) + 1)
// //         }
// //         else {
// //             map.set(s[j], 1)
// //         }
// //     }
// // }
// // console.log(map)
// // let str = ''
// // for (const [key, value] of map) {
// //     if (value == 1) {
// //         str = str + key
// // //     }
// // //     console.log(key, value)
// // // }

// // // console.log(str)



// // let arr = ["we", "say", ":", "yes", "!@#$%^&*()"]


// // // Encode 
// // let str = ""
// // for (let i = 0; i < arr.length; i++) {
// //     str = str + arr[i].length + "#" + arr[i]
// // }
// // console.log(str)

// // // Decode 
// // let res = []
// // let s = ''

// // let i = 0
// // while (i < str.length - 1) {
// //     let j = str.indexOf("#")
// //     j = Number(str[j - 1])
// //     s = str.slice(0, j + 2)
// //     s = s.slice(2)
// //     console.log(s)
// //     res.push(s)
// //     str = str.slice(j + 2)
// //     i++
// //     if (i >= str.length - 1) {
// //         break
// //     }
// // }
// // console.log(res)
// // // Encoded: 5#Hello5#World








// // // Encode 
// // let str = ""
// // for (let i = 0; i < arr.length; i++) {
// //     str = str + arr[i].length + "#" + arr[i]
// // }
// // console.log(str)

// // // Decode 
// // let res = []
// // let s = ''

// // let i = 0
// // while (i < str.length - 1) {
// //     let j = str.indexOf("#", i)
// //     let length = Number(str.slice(i, j))
// //     i = j + 1
// //     s = str.slice(i, i + length)
// //     res.push(s)
// //     i += length
// // }
// // // console.log(res)


// // let adj = [
// //     [1, 2, 3],
// //     [],
// //     [4],
// //     [],
// //     []
// // ];


// // var bfs = function(graph,node,visit,)


// // let V = 6
// // const edges = [
// //     [0, 1, 4],
// //     [0, 2, 1],
// //     [1, 2, 2],
// //     [1, 3, 5],
// //     [2, 3, 8],
// //     [2, 4, 10],
// //     [3, 4, 2],
// //     [3, 5, 6],
// //     [4, 5, 3]
// // ];
// // let graph = []

// // let parent = new Array(V).fill(-1)
// // let mst = new Array(V).fill(false)
// // let key = new Array(V).fill(Infinity)


// // key[0] = 0

// // for (let i = 0; i < V; i++) {
// //     graph[i] = []
// // }

// // for (let [u, v, w] of edges) {
// //     graph[u].push([v, w])
// //     graph[v].push([u, w])
// // }

// // var minkey = function (key, mst, V) {
// //     let min = Infinity, index = -1
// //     for (let i = 0; i < V; i++) {
// //         if (!mst[i] && key[i] < min) {
// //             min = key[i]
// //             index = i
// //         }
// //     }
// //     return index
// // }


// // for (let i = 0; i < V; i++) {
// //     let u = minkey(key, mst, V)

// //     mst[u] = true

// //     for (let [neighbor, weight] of graph[u]) {
// //         if (!mst[neighbor] && weight < key[neighbor]) {
// //             key[neighbor] = weight
// //         }
// //     }
// // }

// // let p = key.reduce((acc, dcc) => acc + dcc, 0)
// // console.log(p)


// // arr = [1, 2, 3, 4, 5, 10, 6, 7, 8, 9], k = 5
// // let num = []
// // for (let i = 0; i < arr.length; i++) {
// //     let a = ((arr[i] % k))
// //     num.push(a)
// // }
// // console.log(num)

// // skill = [3, 2, 5, 1, 3, 4]

// // let min = Math.min(...skill)
// // let max = Math.max(...skill)
// // target = min + max
// // let prod = 1
// // skill = skill.sort((a, b) => a - b)
// // let left = 0
// // let sum = 0
// // let right = skill.length - 1
// // while (left < right) {
// //     let a = nums[left] + nums[right]
// //     if (a == target) {
// //         prod = prod * a
// //         sum = sum + prod
// //         left++
// //         right--
// //         prod = 1
// //     }
// //     else {
// //         return -1
// //     }
// // }


// // arr = [2, 2, 2, 2, 5, 5, 5, 8], k = 3, threshold = 4
// // let left = 0
// // let sum = 0
// // let count = 0
// // let a = []
// // for (let right = 0; right < array.length; right++) {
// //     a.push(arr[right])
// //     sum = sum + arr[right]
// //     if (a.length == k) {
// //         let avg = sum / k
// //         if (avg >= threshold) {
// //             count++
// //         }
// //     }
// //     else if (a.length > k) {
// //         while (a.length > k) {
// //             sum = sum - arr[left]
// //             arr = arr.shift()
// //             left++
// //         }
// //     }

// // }



// // let target = 12, position = [10, 8, 0, 5, 3], speed = [2, 4, 1, 1, 3]
// // let stack = []
// // let pair = []
// // for (let i = 0; i < position.length; i++) {
// //     pair.push([position[i], speed[i]])
// // }
// // pair = pair.sort((a, b) => a[0] - b[0])
// // console.log(pair)

// // let indegree = new Array(pairs.length).fill(0)
// // for (let i = 0; i < indegree.length; i++) {
// //     if (indegree[i] == 0) {
// //         queue.push(pairs[i][0])
// //     }
// // }

// let words = ["hrn", "hrf", "er", "enn", "rfnn"]
// words = ["wrtkj", "wrt"]
// // let graph = new Map()
// // for (let word of words) {
// //     if (!graph.has(word)) {
// //         graph.set(word, new Set())
// //     }
// // }

// // for (let i = 0; i < words.length - 1; i++) {
// //     let w = words[i]
// //     let w2 = words[i]

// //     let min = Math.min(w.length, w2.length)

// //     if (w.length > w2.length && w.substring(0, min) === w2.substring(0, min)) {
// //         return ""
// //     }

// //     for (let j = 0; j < words.length; j++) {
// //         if (w[j] != w2[j]) {
// //             graph.get(w[j]).add(w2[j])
// //             break
// //         }
// //     }
// // }



// // let visit = new Set()
// // let arr = []
// // let state = {}
// // var dfs = function (nodes, parent) {
// //     if (state[nodes] == 1) {
// //         return true
// //     }
// //     if (state[nodes] == 2) {
// //         return true
// //     }
// //     state[nodes] = 1
// //     for (let neighbor of graph.get(nodes) || []) {
// //         if (visit.has(neighbor) && neighbor != parent) {
// //             cycle = true
// //             return
// //         }
// //         if (!visit.has(neighbor)) {
// //             if (dfs(neighbor, nodes)) {
// //                 return true
// //             }

// //         }
// //     }
// //     state[nodes] = 2
// //     arr.push(nodes)
// //     return false
// // }


// // for (let nodes of graph.keys()) {
// //     if (!visit.has(nodes)) {
// //         if (!state[nodes] && dfs(nodes, null)) {
// //             return ''
// //         }
// //     }
// // }
// // return arr.reverse().join('')



// // let graph = new Map()
// // for (let word of words) {
// //     for (let char of word) {
// //         if (!graph.has(char)) {

// //             graph.set(char, new Set())
// //         }
// //     }
// // }

// // for (let i = 0; i < words.length - 1; i++) {
// //     let w1 = words[i]
// //     let w2 = words[i + 1]

// //     let min = Math.min(w1.length, w2.length)
// //     if (w1.length > w2.length && w1.substring(0, min) === w2, substring(0, min)) return ""

// //     for (let j = 0; j < min; j++) {
// //         if (w1[j] != w2[j]) {
// //             graph.get(w1[j]).add(w2[j])
// //             break
// //         }
// //     }
// // }

// // let arr = []
// // let state = {}

// // var dfs = function (node) {
// //     if (state[node] === 1) {
// //         return true
// //     }
// //     if (state[node] == 2) {
// //         return false
// //     }

// //     state[node] = 1
// //     for (let neighbor of graph.get(node)) {
// //         if (dfs(neighbor)) {
// //             return true
// //         }
// //     }
// //     arr.push(node)
// //     state[node] = 2
// //     return false
// // }

// // for (let i of graph.keys()) {
// //     if (!state[i] && dfs(i)) {
// //         return ''
// //     }
// // }
// // return arr.reverse().join('')\\\\


// // let points = [[3, 3], [5, -1], [-2, 4]], k = 2
// // let points = [[0, 1], [1, 0]];
// // let k = 2; // Number of closest points to retrieve
// // let map = []

// // // Calculate distances and populate the map
// // for (let i = 0; i < points.length; i++) {
// //     let a = points[i][0];
// //     let b = points[i][1];

// //     // Calculate the Euclidean distance
// //     let distance = Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2));
// //     map.push([distance, points[i]]); // Map distance to the corresponding point
// // }

// // // Sort the map by keys (distances)
// // map = map.sort((a, b) => a[0] - b[0])
// // let res = []
// // for (let i = 0; i < k ; i++) {
// //     res.push(map[i][1]); // Push the closest points to the result array
// // }

// // console.log(res); // Output the k closest points
// // return res;



// // let tasks = ["A", "A", "A", "B", "B", "B"], n = 2

// // let map = new Map()
// // tasks.forEach((value) => {
// //     if (map.has(value)) {
// //         map.set(value, map.get(value) + 1)
// //     }
// //     else {
// //         map.set(value, 1)
// //     }
// // })
// // console.log(map)

// // let arr = []
// // let res = []
// // let l = 0
// // for (let i = 0; i < tasks.length; i++) {
// //     if (!arr.includes(tasks[i])) {
// //         arr.push(tasks[i])
// //         map.set(tasks[i], map.get(tasks[i]) - 1)
// //         l++
// //     }
// //     if(arr.includes(tasks[i]) && )
// //     if (arr.length == n) {
// //         arr.push(-1)
// //         res.push(arr)
// //         arr = []
// //     }
// // }


// // let arr = []
// // for (let i = 97; i <= 122; i += 2) {
// //     let a = String.fromCharCode(i)
// //     a = a.toUpperCase()
// //     let b = String.fromCharCode(i + 1)
// //     b = b.toUpperCase()
// //     arr.push(`${a}${b}`)
// // }
// // console.log(arr)
// // s = "CDQRKCCDDZ"

// // let stack = []
// // for (let i = 0; i < s.length; i++) {
// //     stack.push(s[i])
// //     let a = stack[stack.length - 1]
// //     let b = stack[stack.length - 2]
// //     let res = `${b}${a}`
// //     if (res == "AB" || res == 'CD') {
// //         stack.pop()
// //         stack.pop()
// //     }

// // }
// // console.log(stack)


// // let map = new Map()
// // nums.forEach((i) => {
// //     if (map.has(i)) {
// //         map.set(i, map.get(i) + 1)
// //     }
// //     else {
// //         map.set(i, 1)
// //     }
// // })
// // for(let [number,repeat] of map){
// //     if(repeat == 1){
// //         return false
// //     }
// //     else{
// //         return true
// //     }
// // }

// // let curr = head
// // let dummy = new ListNode()
// // let prev = dummy
// // while (curr != null){
// //     prev.next = new ListNode(curr.val)
// //     prev = prev.next
// //     curr = curr.next
// // }



// // let num = 2736
// // num = num.toString().split("")
// // console.log(num)
// // let left = 0
// // let right = 1
// // let swap = 0
// // while (left < right) {
// //     let a = num.slice(left + 1, num.length)
// //     let max = Math.max(...a)
// //     if (num[left] < max) {
// //         let index = num.index(max)
// //         [num[left], num[index]] = [num[index], num[left]]
// //         swap++
// //     }
// //     left++
// //     right++
// // }



// // let nums = [2, 7, 9, 3, 1]
// // let sum = nums[0]
// // for (let i = 0; i < nums.length-1; i+=2) {
// //     let a = nums.slice(i+2, nums.length)
// //     let max = Math.max(...a)
// //     sum = sum + max
// //     console.log(sum)
// // }

// // folder = ["/a/b/c","/a/b/ca","/a/b/d"]
// // // Output: ["/a", "/c/d", "/c/f"]

// // folder = folder.sort()
// // let arr = [folder[0]]
// // let str = ""
// // str = folder[0]
// // console.log(folder[1].includes(folder[0]))

// // // for (let i = 1; i < folder.length; i++) {
// // //     if (!folder[i].includes(str + '/')) {
// // //         arr.push(folder[i])
// // //         str = folder[i]
// // //     }

// // // }
// // // console.log(arr)

// let s = "cbaebabacd", p = "abc"
// s = s.split('')
// p = p.split('')
// let l = p.length
// let arr = []
// let map = new Map()
// let window2 = new Map()
// p.forEach(element => {
//     if (map.has(element)) {
//         map.set(element, map.get(element) + 1)
//     }
//     else {
//         map.set(element, 1)
//     }
// });
// let left = 0
// for (let right = 0; right < s.length; right++) {
//     window2.set(s[right], (window2.get(s[right]) || 0) + 1);
//     if (window2.size == map.size) {
//         let k = window2.size
//         let i = 0
//         for (let [key, value] of map) {
//             if (window2.get(key) !== value) {
//                 i++
//                 break
//             }
//         }
//         if (i == k) {
//             arr.push('hello')
//         }
//     }
//     if (right - left + 1 >= l) {
//         if (window2.get(s[left]) == 1) {
//             window2.delete(s[left])
//         }
//         else {
//             window2.set(s[left], window2.get(s[left]) - 1)
//         }
//     }
// }
// console.log(arr)

// nums = [2, 3, 5, 6, 7]
// nums = nums.sort((a, b) => a - b)
// let map = new Map()
// nums.forEach(element => {
//     if (map.has(element)) {
//         map.set(element, map.get(element) + 1)
//     }
//     else {
//         map.set(element, 1)
//     }
// });
// console.log(map)
// let max = -1
// let count = 0
// for (let i = 0; i < nums.length; i++) {
//     let a = nums[i]
//     while (map.has(a * a)) {
//         count++

//     }
//     max = Math.max(max, count)
//     count = 0
// }
// console.log(max == 0 ? -1 : max)

// grid = [
//     [2, 4, 3, 5],
//     [5, 4, 9, 3],
//     [3, 4, 2, 11],
//     [10, 9, 13, 15]
// ]
// let every = Array.from({ length: grid.length }, () => Array(grid[0].length).fill(-1));
// console.log(every)
// let max = -Infinity
// var dfs = function (start, end) {
//     if (every[start][end] !== -1) return every[start][end]
//     let maxmoves = 0

//     for (let [x, y] of [[start - 1, end + 1], [start, end + 1], [start + 1, end + 1]]) {
//         let a = x
//         let b = y
//         if (a >= 0 && b >= 0 && a < grid.length && b < grid[0].length && grid[a][b] > grid[start][end]) {
//             maxmoves = Math.max(maxmoves, 1 + dfs(a, b))

//         }
//     }
// }



// for (let i = 0; i < grid.length; i++) {
//     maxmoves = Math.max(maxmoves, dfs(i, 0))
// }
// console.log(count)

// s = "ab#c", t = "ad#c"
// s = s.split('')
// t = t.split('')
// let stack1 = []
// let stack2 = []
// let i = 0
// while (i <= s.length - 1) {
//     if (s[i] == "#" && stack1.length > 1) {
//         stack1.pop()
//     }
//     else {
//         stack1.push(s[i])
//     }
//     i++
// }
// console.log(stack1.join(""))
// i = 0
// while (i <= t.length - 1) {
//     if (t[i] == "#" && stack2.length > 1) {
//         stack2.pop()
//     }
//     else {
//         stack2.push(t[i])
//     }
//     i++
// }
// console.log(stack2.join(""))
// return stack1 == stack2


// let arr = []
// let res = []
// let matrix = [[0, 1, 2, 0], [3, 4, 5, 2], [1, 3, 1, 5]]
// // check columns 
// let columns = []
// for (let i = 0; i < matrix.length; i++) {
//     for (let j = 0; j < matrix[0].length; j++) {
//         if (matrix[i][j] == 0) {
//             columns.push(j)
//         }
//     }
// }
// console.log(columns)

// for (let i = 0; i < matrix.length; i++)


// s = "rabbbit", t = "rabbit"
// let target = []
// let arr = []
// for (let i = 0; i < t.length; i++) {
//     let a = t[i].charCodeAt(0) - 'a'.charCodeAt(0) + 1
//     target.push(a)
// }
// let p = target.reduce((a, v) => a + v, 0)
// console.log(p)

// for (let i = 0; i < s.length; i++) {
//     let a = s[i].charCodeAt(0) - 'a'.charCodeAt(0) + 1
//     arr.push(a)
// }
// console.log(arr)
// let count = 0
// var again = function (arr, p, index, sum) {


// candidates = [16, 17, 71, 62, 12, 24, 14]
// let arr = []
// count++
// for (let i = 0; i < candidates.length; i++) {
//     let a = candidates[i]
//     for (let j = i + 1; j < candidates.length; j++) {
//         a = a & candidates[j]
//         if (a <= 0) {
//             a = candidates[i]
//         }
//     }
// }

// n = 2, x = 7
// let i = x + 1
// while((n & i) != x){
//     i++
// }
// console.log(i)
// let s = "050043"
// let str = ''
// console.log(ns)
// for (let i = 0; i < s.length; i++) {
//     str = str + s[i]
//     while (str[0] == '0') {
//         str = str.slice(1)
//     }
//     if (str == '') continue
//     let num = Number(str)
//     let index = s.indexOf(str)
//     let ns = s.slice(index + 1, s.length + 1)
//     let valid = true
//     while (ns.length > 0) {
//         if (!ns.startsWith(str)) {
//             valid = false
//             break
//         }
//         ns = s.slice(Number(str) + 1, s.length + 1)
//         num--
//         str = String(num)
//     }
//     if (valid && ns.length == 0) return true
// }
// console.log(false)
// nums = [0, 1, 7, 4, 4, 5]
// nums = [1,7,9,2,5]
// let max = Math.max(...nums)
// let arr = []
// let i = 0
// while (i < nums.length) {
//     let tem = Math.abs(nums[i] - max)
//     arr.push(tem)
//     i++
// }
// console.log(arr)
// let min = Math.min(...nums)
// let arr2 = []
// i = 0
// while (i < nums.length) {
//     let tem = Math.abs(nums[i] - min)
//     arr2.push(tem)
//     i++
// }
// console.log(arr2)




var again = function (t, arr) {
    let length = t
    let map = new Map()
    for (let i = 0; i < arr.length; i++)
}

